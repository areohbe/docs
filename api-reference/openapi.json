{
  "x-generator": "NSwag v14.2.0.0 (NJsonSchema v11.1.0.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Vesta API",
    "description": "## Getting started\n\n### Base path\n\n`/api/v1`\n\n### Authentication\n\nThe API key must be specified via `Authorization: Token <apikey>`. To try out API calls from this site, click on an endpoint in the left sidebar, and enter your API key (with the `Token` prefix) in the `Authorization` field.\n\n### Versioning\n\nThe Vesta API is strongly versioned.\n\nEvery API call must specify its API version using the header `X-Api-Version` with a value of `24.4`, or `25.1`, or `experimental`.\n\nAt any time, Vesta supports three versions: Current, Deprecated, and Experimental. Current and Deprecated versions are represented by a version number `YY.Q`, e.g. `25.1`. The Experimental version is always represented by `experimental`.\n\nThe current versions are:\n- Current: `25.1`\n- Deprecated: `24.4`\n- Experimental: `experimental`\n\nThe next API release will be `25.2`, which will be released in April 2025. At that point, `25.1` will be deprecated and `24.4` will be removed soon after.\n\n### Rate limiting\n\nThe API is rate limited. Every API response will include the headers `RateLimit-Limit`, `RateLimit-Remaining`, and `RateLimit-Reset`, with the following definitions:\n- `RateLimit-Limit`: The maximum number of requests that can be made in a given time period.\n- `RateLimit-Remaining`: The number of requests remaining in the current time period.\n- `RateLimit-Reset`: The number of seconds after which the current time period will reset.\n\nThe rate limit is currently defaulted to 2000 requests per hour. To increase this limit, please contact Vesta.\nRequests to `/api/v1/ping` are not included in this limit.\nIf you exceed this limit, you will receive a `429 Too Many Requests` response with the `Retry-After` header set to the number of seconds after which you can retry your request.\n\n### Errors\n\nErrors will generally be returned as unstructured strings with a status code between 400 and 599.\n\nRequests will include a `X-Vesta-Request-Id` header, barring exceptional cases like the request failing at our load balancer.\nIf you encounter an unexpected error, please include this value when reporting it to Vesta.\n\n## Migrating from `24.4` to `25.1`\n\n- Please review the breaking data model changes below.\n- If you have any questions or concerns, please contact Vesta.\n\n### Breaking changes\n\n\n\n#### Data model changes\n\n- `Loan`\n  - Renamed `Loan.Exceptions` to `Loan.UnderwritingExceptions`\n- `LoanProduct`\n  - Removed `LoanProduct.HMDARateSpreadPercentage` as it was superfluous with `LoanProduct.RateSpread`\n  - `LoanProduct.RateLockExpiresDate` is no longer read-only and as such `LoanProduct.RateLockExpiresDateMetadata` is removed\n\n\n\n\n\n- `Income`\n  - Moved `Income.TreatAsMonthlyObligation` to `Loan` as `TreatNegativeRentalIncomeAsMonthlyObligationIndicator`\n- Misc changes\n  - Due to an application bug loan-level facts were sometimes being attached to the subject property so this has been fixed so that only `OwnedProperty` facts show up on the subject property if applicable\n  - `ExceptionCondition` was renamed to `UnderwritingException`\n  - `UnderwritingException.Category` is no longer an enum but just a string\n  - `UnderwritingException.CompensatingFactors` was renamed to `RequestReason`\n  - `MiQuote.Expiration` is now just a date instead of date-time\n  - `Task.EntityType` is changed from an `EntityType` to an `OntologyEntityType`\n  - `DocumentRequiredCondition.UploadingDocumentTypeNames` was removed as it was superfluous with `UploadingDocumentTypeExternalIdentifiers`\n  - `DocumentRequiredCondition.UploadingDocumentTypeExternalIdentifiers` was renamed to `RequiredDocumentTypes`\n  - `LoanStageTemplate.IsTerminalStage` was removed as it was unused\n  - `ApplicationStatuses.ReadyToShip` was renamed to `Accepted`\n  - Renamed `ReadyToShip` enum option from `DocumentStatus` and `SettableDocumentStatus` to `Accepted`\n  - Renamed `LoanNote`, `TaskNote`, `DocumentNote`, and `EntityConditionNote` enum options from `NoteType` to `Loan`, `Task`, `Document`, and `EntityCondition` respectively\n\n#### Other endpoint changes\n\n- `GET /users` and `GET /users/{userId}` now return user with pipeline views\n\n\n#### Webhook changes\n\n- The path for custom fields, facts, and custom computed fields whose api name starts with a number or contains a hyphen will now use the bracket notation such that a path for a fact with api name of `10PercentOrGreaterDownPayment` is now `$.facts['10PercentOrGreaterDownPayment']` as opposed to the invalid path `$.facts.10PercentOrGreaterDownPayment`. All other paths will continue to use the dot notation as before.\n\n\n### Non-breaking changes\n\n- Added endpoints for interacting with underwriting exceptions:\n    - `GET /loans/{loanId}/underwriting-exceptions`\n    - `GET /loans/{loanId}/underwriting-exceptions/{underwritingExceptionId}`\n    - `POST /loans/{loanId}/underwriting-exceptions`\n    - `PATCH /loans/{loanId}/underwriting-exceptions/{underwritingExceptionId}`\n    - `DELETE /loans/{loanId}/underwriting-exceptions/{underwritingExceptionId}`\n- Added the following pricing manual adjustment endpoints:\n    - `POST /loans/{loanId}/pricing/add-adjustment`\n    - `GET /loans/{loanId}/pricing/add-adjustment/{jobId}`\n    - `POST /loans/{loanId}/pricing/edit-adjustment`\n    - `GET /loans/{loanId}/pricing/edit-adjustment/{jobId}`\n    - `POST /loans/{loanId}/pricing/remove-adjustment`\n    - `GET /loans/{loanId}/pricing/remove-adjustment/{jobId}`\n- Added the following pricing cancel lock endpoints:\n    - `POST /loans/{loanId}/pricing/cancel-lock`\n    - `GET /loans/{loanId}/pricing/cancel-lock/{jobId}`\n- Added the following pricing concession endpoints:\n    - `POST /loans/{loanId}/pricing/request-concession`\n    - `GET /loans/{loanId}/pricing/request-concession/{jobId}`\n    - `POST /loans/{loanId}/pricing/approve-concession`\n    - `GET /loans/{loanId}/pricing/approve-concession/{jobId}`\n- Added the following pricing relock endpoints:\n    - `POST /loans/{loanId}/pricing/request-relock`\n    - `GET /loans/{loanId}/pricing/request-relock/{jobId}`\n    - `POST /loans/{loanId}/pricing/approve-relock`\n    - `GET /loans/{loanId}/pricing/approve-relock/{jobId}`\n- Added the following pricing reprice endpoints:\n    - `POST /loans/{loanId}/pricing/approve-reprice`\n    - `GET /loans/{loanId}/pricing/approve-reprice/{jobId}`\n- Added a cancel objective task endpoint:\n    - `POST /loans/{loanId}/objective-tasks/{taskId}/cancel`\n- Added a query pipeline view endpoint:\n    - `POST /loans/{loanId}/pipeline/views`\n- Added various data model fields and enum types across several entity types.\n\n\n## Loans and entities\n\nThe base object is a Loan. There are several entity types that are children of the loan object, but may have inter-entity relationships as well. The entity types are:\n\n- Asset\n- Borrower\n- Borrower business\n- Closing cost\n- Concurrent financing\n- Credit inquiry\n- Income\n- Liability\n- Pricing request\n- Property\n- Property valuation\n- Proration\n- Public record\n- Tax transcript request form\n- Underwriting exception\n\nWhen calling any of the GET endpoints, inter-entity relationships will be specified as IDs (e.g. the `Income` object may include a pointer to a property via `rentalPropertyId`).\nHowever, the `GET /loans/{loanId}` endpoint will return all children as full objects. For example, the `Loan` field `ownedProperties` will contain full `Property` objects, not just IDs.\nSee the endpoint details and the schema models at the bottom of the page for more information.\n\n### Inter-entity relationships\n\nThere are a few different ways of linking and unlinking inter-entity relationships such as borrower assets.\n\nWhen adding entities you can link them in one of two ways.\n\nFirst, you can explicitly add entities directly as children of another entity like such in this `POST /loans` request.\n```json\n{\n  \"borrowers\": [\n    {\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"assets\": [\n        {\n          \"assetType\": \"CheckingAccount\",\n          \"assetValue\": 5346.21\n        }\n      ]\n    }\n  ]\n}\n```\n\nOr you can utilize `ref` fields to link them which has the added benefit of returning the id of the added entity with the ref in the `refMappings` response like so in this `POST /loans` request.\n```json\n{\n  \"borrowers\": [\n    {\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"assetsRefs\": [\"checkingAccountRef\"]\n    }\n  ],\n  \"assets\": [\n    {\n      \"ref\": \"checkingAccountRef\",\n      \"assetType\": \"CheckingAccount\",\n      \"assetValue\": 5346.21\n    }\n  ]\n}\n```\n\nWhen updating existing entities you can link or unlink them in one of two ways.\n\nFirst, you can update the linked id(s) field. For a one-to-many or many-to-many relationship the linked ids field will be a collection of id's and so if you add an id to the collection it will then link the two entities\nbut if you don't include an id of an entity that's already linked the two entities will become unlinked. For a one-to-one relationship you can just set the linked id field to the id of the entity you'd like to link or `null` if you'd like to unlink it.\nHere's an example `PATCH /loans` request.\n```json\n{\n  \"borrowers\": [\n    {\n      \"id\": \"borrowerIdToUpdate\",\n      \"assetsIds\": [\n        \"assetIdToLinkToBorrower\" // if there was an existing asset linked here it would be removed if not included in the collection\n      ],\n      \"spouseId\": \"spouseBorrowerIdToLink\"\n    }\n  ]\n}\n```\n\nThe other way to link or unlink a one-to-many or many-to-many inter-entity relationship is by updating the linked entity collection utilizing the `$action` field to `Add` or `Remove` an entity like so in this `PATCH /loans` request.\n```json\n{\n  \"borrowers\": [\n    {\n      \"id\": \"borrowerIdToUpdate\",\n      \"assets\": [\n        {\n          \"$action\": \"Add\",\n          \"id\": \"assetIdToLinkToBorrower\"\n        },\n        {\n          \"$action\": \"Remove\",\n          \"id\": \"assetIdToUnlinkFromBorrower\"\n        }\n      ]\n    }\n  ]\n}\n```\n\n### `POST` Loans and entities\n\nWhen calling `POST /loans`, you can create entities along with the loan by filling out the direct loan fields (e.g. `borrowers`).\n\nTo specify inter-entity relationships, you can include a `ref` field on any entity and specify it in the relationship on other entities,\n(e.g. Specify a Property with field `\"ref\"=\"MyProperty\"` and a separate Income with field `\"rentalPropertyRef\"=\"MyProperty\"`)\n\nAdditionally, the ID of any entity with a Ref field specified will be included in the response.\nAny entity without a Ref field will still be created but its ID will not be returned.\n\nRef fields can be used in all loan entity `POST` and `PATCH` endpoints.\n\n### `PATCH` Loans and entities\n\n`PATCH` requests can be used to partially update existing loans and entities. Patches are applied to nested objects as well. For example, given the following request body to update a loan:\n```json\n{\n  \"loanPurpose\": \"Purchase\",\n  \"loanProduct\": {\n    \"mortgageType\": \"Conventional\",\n    \"loanAmortizationType\": null\n  },\n  \"assets\": [{\n    \"id\": \"assetToUpdateId\",\n    \"accountIdentifier\": \"1234567890\",\n  }, {\n    \"id\": \"assetToRemoveId\",\n    \"$action\": \"Remove\"\n  }]\n}\n```\n\nThe following changes will be made to the loan:\n\n- `loanPurpose` will be set to `\"Purchase\"`\n- `loanProduct.mortgageType` will be set to `\"Conventional\"`\n- `loanProduct.loanAmortizationType` will be set to `null`\n- No other fields on `loan` and `loanProduct` will be changed\n- The `Asset` with ID `assetToUpdateId` will have its `accountIdentifier` field set to `\"1234567890\"`\n- The `Asset` with ID `assetToRemoveId` will be removed from the loan\n\nSome miscellaneous notes:\n\n- Removing an entity from an inter-entity relationship does **not** remove it from the loan, but merely severs the relationship. To remove the entity entirely, either call the relevant `DELETE` endpoint or remove it from the top-level loan object.\n- `PATCH` requests can also be used to add new entities to collections. For example, to add an Asset, you can add an Asset entity to the Loan collection, omitting the `id` field. If a `ref` field is specified the newly created entities ID will be returned in the response.\n- If you specify an `id` field on an entity that does not exist, the request will fail.\n- If the schema for a collection has an `id` field then for `PATCH` requests the items in that collection are updated by `id`, otherwise the whole collection is replaced.\n- The `$action` field can be included in collections sent in `PATCH` requests. The allowed values of this field are `\"Remove\"` and `\"Add\"`. `\"Remove\"` will remove the specified item by `id` from the collection. If you’re removing a top-level entity from an inter-entity relationship such as `borrower.liabilities` the relationship with the borrower and the liability will be severed but the liability will still exist on the loan. However, if you’re removing a top-level entity from a loan collection such as `loan.liabilities` the entity will be removed from the loan same as calling the relevant `DELETE` entity endpoint. If you’re removing any other entity from a collection such as `borrower.addresses` then the entity will be removed from the loan. `\"Add\"` can be used to establish a relationship with two top-level entities such as adding an existing liability by its `id` to the `borrower.liabilities` collection.\n\n### Custom fields and entities\n\nAll entities support custom fields.\nViewing and modifying which custom fields are available in each Process Version can be done through the Version Manager in the Admin portal.\nThis will include the custom field's \"API identifier\", which will default to the field name without special characters but can be modified.\n\nOnce custom fields are created on the process version of a loan, they can be set and retrieved on each entity through the `customFields` object on each entity.\n`customFields` is a JSON object, where each key is an API identifier for a custom field, and the value of each field is determined by the type of the custom field.\nAll custom fields are nullable.\n\n### Idempotency\n\nAll `GET` requests to an endpoint prefixed with `/loans/` will include an `ETag` header, like `ETag: \"1234567890\"`. This value can be used to make `PATCH`, and `DELETE` requests on entities idempotent by including the `If-Match` header with the same value.\nFor example, if you make a `PATCH` request with the `If-Match` header set to the `ETag` value from a `GET` request, the request will only succeed if the `ETag` value has not changed since the `GET` request.\nIf the `ETag` value has changed, the request will fail with a `412 Precondition Failed` response.\nThe specific format of `ETag` values is not guaranteed, and should not be relied upon.\n\nSeparately, users of the API can optionally send `Idempotency-Key` headers with `POST`, `PATCH`, and `DELETE` loan and entity requests.\nWhen a request is made with an idempotency key that has already been used, no action will be taken, and the original (cached) response will be returned.\nReplayed responses will include the header `Idempotency-Replayed: true`.\nIdempotency keys should be UUIDs, matching the case-insensitive regex `^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$`.\nKeys are valid for one hour. If a request is made with an expired key, the request will be processed as if a new key was provided.\nThis behavior applies to non-transient errors as well. Transient errors will be retried.\n\n## Additional endpoints\n\nThere are additional endpoints for managing documents and tasks, and for reading users, loan events, and admin config.\n\nClick on an endpoint in the left sidebar to see more details for that endpoint.\n\n## Webhooks\n\nVesta supports sending authenticated HTTP requests to an API endpoint of your choosing.\nTo set up a webhook, please contact Vesta.\n\n### Authentication\n\n- Webhook requests include a shared secret as `Authorization: Token <xyz>` where `<xyz>` is the shared secret.\n- All inbound requests should be authenticated using the shared secret.\n\n### Webhook Types\n\nWe currently support the following webhook types:\n\nLoan:\n- Loan data changed\n- Loan field decrypted\n- Loan assignees changed\n- Loan stage changed\n- Loan underwriter decision changed\n- Entity relationship changed\n\nTasks:\n- Task created\n- Task cancelled\n- Task reopened\n- Task snoozed\n- Task assigned\n- Task due date changed\n- Task modified\n- Task completed\n\nAutomated actions:\n- Automated action created\n- Automated action started\n- Automated action cancelled\n- Automated action completed\n- Automated action failed\n- Automated action removed\n\nDocuments:\n- Document uploaded\n- Document status changed\n- Document reclassified\n\nDisclosures:\n- Disclosures sent\n- Disclosures created\n- Disclosures signed\n- Disclosures consent received\n- Disclosures completed\n\nJob status:\n- Job status changed\n\nConditions:\n- Condition created\n- Condition status changed\n\nNotes:\n- Note added\n\nIntegration calls:\n- Request sent\n- Response received\n\nObjectives and related Tasks / Automated Actions:\n- Objective created\n- Objective status changed\n- Objective deleted (by admin)\n- Objective task created\n- Objective task status changed\n- Objective task deleted (by admin)\n- Objective automated action created\n- Objective automated action status changed\n- Objective automated action deleted (by admin)\n\nYou may choose which of these webhook subscription types to subscribe to, and will receive all events for each subscribed subscription type. It is up to the client to filter events for the subscription type which are not relevant to their integration.\nContact Vesta to set up a webhook subscription or to update your subscription.\n\nWebhook schema definitions are available in the left sidebar.\n\n### Retry behavior\n\nFailed webhooks, defined as non-2xx responses, will be retried according to the following schedule:\n\n- 1 minute\n- 10 minutes\n- 1 hour\n- 24 hours\n- 48 hours\n\nNote that 3xx responses are considered unsuccessful and will also be retried.\n\nRetry timings are best effort and should not be relied upon.\n\n### Data webhook paths\n\nData changed webhooks include several fields to help indicate which field was changed:\n\n- `entityType` is 1:1 with the entity type in the Vesta API. For example, `\"entityType\"=\"Loan\"` indicates that the webhook is for a loan.\n- `entityId` is the ID of the entity that was changed.\n- `path` is a [JSONPath](https://datatracker.ietf.org/doc/id/draft-goessner-dispatch-jsonpath-00.html) expression navigating from the base entity response type to the updated field. For example,\n  - Given a loan webhook, `\"path\"=\"$.loanProduct.mortgageType\"` indicates that the webhook is for a change to the `\"mortgageType\"` field on the `\"loanProduct\"` field on the loan.\n  - Given a loan webhook, `\"path\"=\"$.loanProduct.closingAdjustments[?(@.id=='closingAdjustmentId')][0].amount\"` indicates that the webhook is for a change to the `\"amount\"` field on the `\"closingAdjustment\"` with ID `\"closingAdjustmentId\"` on the loan's loan product.\n\nThe only JSONPath filter expression currently in use is `[?(@.id=='<id>')]`, which filters a collection by the `id` field.\nNote that Vesta paths deviate from the JSONPath specification in that subscripting into filtered arrays is supported, i.e. `[?(@.id=='<id>')][0]` will return the first element of the filtered array.\n\nThe granularity of field changes is not guaranteed. In particular, it's possible to receive a webhook for an object type, e.g. `borrower.currentAddress`.\n\n### Data changed webhook encryption\n\nVesta optionally supports sending the updated **value** in data changed webhooks.\nThese values will be sent, encrypted via 256-bit AES-GCM and base-64 encoded, in the field `data`.\nEncryption metadata will be base-64 encoded and sent in the `iv` and `tag` fields.\nThe encryption key should be 256 bits and sent to Vesta.\nFor now, it is the customer's responsibility to rotate keys.\n\nTo set up this feature, please contact Vesta.\n\nNote that webhooks are not guaranteed to be in order. Therefore, to ensure that you have the most recent update for a given field,\nyou should call the Vesta API to retrieve the latest value instead of relying on the `data` field.\n",
    "version": "25.1"
  },
  "servers": [
    {
      "url": "https://app.beta.vesta.com/api/v1"
    }
  ],
  "paths": {
    "/admin-config/{processVersionId}/loan-stage-templates": {
      "get": {
        "tags": [
          "30. Admin Config"
        ],
        "summary": "/admin-config/{processVersionId}/loan-stage-templates",
        "description": "Returns a list of all loan stage templates.",
        "operationId": "GetAllLoanStageTemplates",
        "parameters": [
          {
            "name": "processVersionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of all loan stage template definitions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LoanStageTemplate"
                  }
                }
              }
            }
          },
          "404": {
            "description": "The process version was not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin-config/{processVersionId}/document-types": {
      "get": {
        "tags": [
          "30. Admin Config"
        ],
        "summary": "/admin-config/{processVersionId}/document-types",
        "description": "Returns a list of all document types.",
        "operationId": "GetAllDocumentTypes",
        "parameters": [
          {
            "name": "processVersionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of all document types.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentTypeFull"
                  }
                }
              }
            }
          },
          "404": {
            "description": "The process version was not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin-config/{processVersionId}/aus/lenders": {
      "get": {
        "tags": [
          "17. Integration - AUS"
        ],
        "summary": "/admin-config/{processVersionId}/aus/lenders",
        "description": "Returns a list of AUS lenders for the given process version and underwriting engine.",
        "operationId": "GetAusLenders",
        "parameters": [
          {
            "name": "processVersionId",
            "in": "path",
            "required": true,
            "description": "The process version. Use `default` to get the current version.",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "engine",
            "in": "query",
            "description": "The underwriting engine to pull lenders for.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of AUS lenders.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AusInstitution"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The underwriting engine was invalid or not specified."
          },
          "404": {
            "description": "The process version was not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin-config/{processVersionId}/dynamic-schema": {
      "get": {
        "tags": [
          "30. Admin Config"
        ],
        "summary": "/admin-config/{processVersionId}/dynamic-schema",
        "description": "Returns an OpenAPI schema object for the given field/entity type pair. The process version for a loan\ncan be found in the `processVersionId` field of the loan object. This is intended to be used in conjunction\nwith the `x-ms-dynamic-schema` extension in the OpenAPI spec.",
        "operationId": "GetDynamicSchema",
        "parameters": [
          {
            "name": "processVersionId",
            "in": "path",
            "required": true,
            "description": "The process version. Use `default` to get the current version.",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "fieldType",
            "in": "query",
            "description": "The field type",
            "schema": {
              "$ref": "#/components/schemas/DynamicSchemaRequestType"
            },
            "x-position": 2
          },
          {
            "name": "entityType",
            "in": "query",
            "description": "The entity type",
            "schema": {
              "type": "string"
            },
            "x-position": 3
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The OpenAPI schema for the requested field/entity type pair.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DynamicSchema"
                }
              }
            }
          },
          "400": {
            "description": "The request was invalid."
          },
          "404": {
            "description": "The process version was not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin-config/{processVersionId}/file-contacts": {
      "get": {
        "tags": [
          "24. File Contacts"
        ],
        "summary": "/admin-config/{processVersionId}/file-contacts",
        "description": "Returns a list of all global file contacts.",
        "operationId": "GetFileContacts",
        "parameters": [
          {
            "name": "processVersionId",
            "in": "path",
            "required": true,
            "description": "The process version. This should always be `default`.",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of all global file contacts.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GlobalFileContact"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request was invalid."
          },
          "404": {
            "description": "The process version was not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "24. File Contacts"
        ],
        "summary": "/admin-config/{processVersionId}/file-contacts",
        "description": "Creates a new global file contact object with the provided data.",
        "operationId": "PostFileContact",
        "parameters": [
          {
            "name": "processVersionId",
            "in": "path",
            "required": true,
            "description": "The process version. This should always be `default`.",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "input",
          "description": "The full global file contact data to be created. See the schema for more information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalFileContact"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Returns the created global file contact ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "The input was not well-formed."
          },
          "404": {
            "description": "The process version was not found."
          },
          "409": {
            "description": "Existing file contact with common values already exists."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin-config/{processVersionId}/file-contacts/{fileContactId}": {
      "get": {
        "tags": [
          "24. File Contacts"
        ],
        "summary": "/admin-config/{processVersionId}/file-contacts/{fileContactId}",
        "description": "Returns a single global file contact by ID.",
        "operationId": "GetFileContactById",
        "parameters": [
          {
            "name": "processVersionId",
            "in": "path",
            "required": true,
            "description": "The process version. This should always be `default`.",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "fileContactId",
            "in": "path",
            "required": true,
            "description": "The ID of the global file contact to be returned.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the global file contact object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalFileContact"
                }
              }
            }
          },
          "400": {
            "description": "The file contact id was invalid."
          },
          "404": {
            "description": "The process version was not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "24. File Contacts"
        ],
        "summary": "/admin-config/{processVersionId}/file-contacts/{fileContactId}",
        "description": "Updates an existing global file contact with the provided data.",
        "operationId": "PatchFileContact",
        "parameters": [
          {
            "name": "processVersionId",
            "in": "path",
            "required": true,
            "description": "The process version. This should always be `default`.",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "fileContactId",
            "in": "path",
            "required": true,
            "description": "The ID of the global file contact to be updated.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "input",
          "description": "The updated global file contact data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalFileContact"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchFileContactResponse"
                }
              }
            }
          },
          "400": {
            "description": "The input was not well-formed."
          },
          "404": {
            "description": "The process version or global file contact was not found."
          },
          "409": {
            "description": "Existing file contact with common values already exists."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "24. File Contacts"
        ],
        "summary": "/admin-config/{processVersionId}/file-contacts/{fileContactId}",
        "description": "Deletes a global file contact by ID.",
        "operationId": "DeleteFileContact",
        "parameters": [
          {
            "name": "processVersionId",
            "in": "path",
            "required": true,
            "description": "The process version. This should always be `default`.",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "fileContactId",
            "in": "path",
            "required": true,
            "description": "The ID of the global file contact to be updated.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteFileContactResponse"
                }
              }
            }
          },
          "400": {
            "description": "The fileContactId parameter is not a valid ID."
          },
          "404": {
            "description": "The process version or global file contact was not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin-config/{processVersionId}/disclosures/available-package-types": {
      "get": {
        "tags": [
          "20. Integration - Disclosures"
        ],
        "summary": "/admin-config/{processVersionId}/disclosures/available-package-types",
        "description": "Returns a list of available disclosure package types for the given process version and doc engine.",
        "operationId": "GetAvailableDisclosurePackageTypes",
        "parameters": [
          {
            "name": "processVersionId",
            "in": "path",
            "required": true,
            "description": "The process version. Use `default` to get the current version.",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "engine",
            "in": "query",
            "description": "The doc engine to pull disclosure package types for.",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DocgenEngineType"
                }
              ]
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of available disclosure package types.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AvailablePackageTypeResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The doc engine was invalid or configuration was not found."
          },
          "404": {
            "description": "The process version was not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin-config/roles": {
      "get": {
        "tags": [
          "30. Admin Config"
        ],
        "summary": "/admin-config/roles",
        "description": "Returns a list of defined Roles that users can have. Roles are shared across all process versions.",
        "operationId": "GetAllRoles",
        "parameters": [
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of roles.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleIdentifier"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin-config/roles/{roleId}": {
      "get": {
        "tags": [
          "30. Admin Config"
        ],
        "summary": "/admin-config/roles/{roleId}",
        "description": "Returns a single Role definition by ID. Roles are shared across all process versions.",
        "operationId": "GetRole",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The role definition.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleIdentifier"
                }
              }
            }
          },
          "400": {
            "description": "The requested ID is malformed."
          },
          "404": {
            "description": "There is no role with the requested ID."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin-config/branches": {
      "get": {
        "tags": [
          "30. Admin Config"
        ],
        "summary": "/admin-config/branches",
        "description": "Returns a list of branches that have been defined for your organization. Branches are shared across all process versions.",
        "operationId": "GetAllBranches",
        "parameters": [
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of branches.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Branch"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin-config/branches/{branchId}": {
      "get": {
        "tags": [
          "30. Admin Config"
        ],
        "summary": "/admin-config/branches/{branchId}",
        "description": "Returns a single branch that has been defined for your organization. Branches are shared across all process versions.",
        "operationId": "GetBranch",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The branch definition.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Branch"
                }
              }
            }
          },
          "400": {
            "description": "The requested ID is malformed."
          },
          "404": {
            "description": "There is no branch with the requested ID."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/assets/{assetId}": {
      "get": {
        "tags": [
          "3. Entity - Assets"
        ],
        "summary": "/loans/{loanId}/assets/{assetId}",
        "description": "Gets a single asset by ID.",
        "operationId": "GetAsset",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan associated with the asset.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "description": "The ID of the asset to be returned.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the asset object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            }
          },
          "400": {
            "description": "The loanId or assetId parameter is not a valid ID."
          },
          "404": {
            "description": "The asset requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "3. Entity - Assets"
        ],
        "summary": "/loans/{loanId}/assets/{assetId}",
        "description": "Patches an existing asset with the provided data.",
        "operationId": "PatchAsset",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan this asset is associated with.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "description": "The ID of the asset to be updated.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "input",
          "description": "Updated partial asset object.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Asset"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "Returns information about the updated entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResponse"
                }
              }
            }
          },
          "400": {
            "description": "The input was not well-formed."
          },
          "404": {
            "description": "The asset requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "3. Entity - Assets"
        ],
        "summary": "/loans/{loanId}/assets/{assetId}",
        "description": "Deletes an asset entity by ID and removes it from the loan.",
        "operationId": "DeleteAsset",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan associated with the asset.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "description": "The ID of the asset to be deleted.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "The loanId or assetId parameter is not a valid ID."
          },
          "404": {
            "description": "The asset requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/assets": {
      "get": {
        "tags": [
          "3. Entity - Assets"
        ],
        "summary": "/loans/{loanId}/assets",
        "description": "Gets the assets for the given loan.",
        "operationId": "GetAssets",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the loan's asset objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Asset"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid ID."
          },
          "404": {
            "description": "The loan requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "3. Entity - Assets"
        ],
        "summary": "/loans/{loanId}/assets",
        "description": "Creates a new asset object with the provided data.",
        "operationId": "PostAsset",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan this asset is associated with.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "input",
          "description": "The full asset data to be created. See the schema for more information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Asset"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Returns information about the created entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResponse"
                }
              }
            }
          },
          "400": {
            "description": "The input was not well-formed."
          },
          "404": {
            "description": "The specified loan was not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/aus": {
      "post": {
        "tags": [
          "17. Integration - AUS"
        ],
        "summary": "/loans/{loanId}/aus",
        "description": "Submits an AUS request for the given loan and returns a job ID that can be queried. When the job completes,\nAUS results will be available on the loan object.",
        "operationId": "PullAus",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "description": "The AUS request to submit",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostAusInput"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "A job ID for the AUS request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid GUID or the request body is invalid or the loan is not prepared to run aus."
          },
          "404": {
            "description": "Loan not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/aus/{jobId}": {
      "get": {
        "tags": [
          "17. Integration - AUS"
        ],
        "summary": "/loans/{loanId}/aus/{jobId}",
        "description": "Provides information about the status of an AUS request. When the status is `Completed`, the AUS results will be available on the loan object.",
        "operationId": "GetAusResult",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The job ID, obtained from calling `POST /loans/{loanId}/aus`.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job info for the AUS request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusDetails"
                }
              }
            }
          },
          "400": {
            "description": "The loanId or jobId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan or job not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/borrower-businesses/{businessId}": {
      "get": {
        "tags": [
          "4. Entity - Borrower Businesses"
        ],
        "summary": "/loans/{loanId}/borrower-businesses/{businessId}",
        "description": "Gets a single borrower business object by ID.",
        "operationId": "GetBorrowerBusiness",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan associated with the business.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "description": "The ID of the business to be returned.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the business object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BorrowerBusiness"
                }
              }
            }
          },
          "400": {
            "description": "The loanId or businessId parameter is not a valid ID."
          },
          "404": {
            "description": "The business requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "4. Entity - Borrower Businesses"
        ],
        "summary": "/loans/{loanId}/borrower-businesses/{businessId}",
        "description": "Patches an existing borrower business with the provided data.",
        "operationId": "PatchBorrowerBusiness",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan this business is associated with.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "description": "The ID of the business to be updated.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "input",
          "description": "Updated partial borrower business object.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BorrowerBusiness"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "Returns information about the updated entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResponse"
                }
              }
            }
          },
          "400": {
            "description": "The input was not well-formed."
          },
          "404": {
            "description": "The business requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "4. Entity - Borrower Businesses"
        ],
        "summary": "/loans/{loanId}/borrower-businesses/{businessId}",
        "description": "Deletes a borrower business entity by ID and removes it from the loan.",
        "operationId": "DeleteBorrowerBusiness",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan associated with the business.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "description": "The ID of the business to be deleted.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "The loanId or businessId parameter is not a valid ID."
          },
          "404": {
            "description": "The business requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/borrower-businesses": {
      "get": {
        "tags": [
          "4. Entity - Borrower Businesses"
        ],
        "summary": "/loans/{loanId}/borrower-businesses",
        "description": "Gets the borrower businesses for the given loan.",
        "operationId": "GetBorrowerBusinesses",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the loan's borrower business objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BorrowerBusiness"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid ID."
          },
          "404": {
            "description": "The loan requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "4. Entity - Borrower Businesses"
        ],
        "summary": "/loans/{loanId}/borrower-businesses",
        "description": "Creates a new borrower business object with the provided data.",
        "operationId": "PostBorrowerBusiness",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan this borrower business is associated with.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "input",
          "description": "The full business data to be created. See the schema for more information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BorrowerBusiness"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Returns information about the created entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResponse"
                }
              }
            }
          },
          "400": {
            "description": "The input was not well-formed."
          },
          "404": {
            "description": "The specified loan was not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/primary-borrower": {
      "put": {
        "tags": [
          "5. Entity - Borrowers"
        ],
        "summary": "/loans/{loanId}/primary-borrower",
        "description": "Sets the position of the borrower specified to the lowest active position and moves all other active borrowers to the next available active position if necessary.\nAll other fields will remain unchanged.",
        "operationId": "SetLoanPrimaryBorrower",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan to be updated.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "input",
          "description": "The ID of the borrower to be set as primary.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrimaryBorrower"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Returns the the new ordering or borrower IDs on the loan.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "guid"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The input was not well-formed."
          },
          "404": {
            "description": "The loan specified by the loan ID does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/borrowers/{borrowerId}": {
      "get": {
        "tags": [
          "5. Entity - Borrowers"
        ],
        "summary": "/loans/{loanId}/borrowers/{borrowerId}",
        "description": "Gets a single borrower by ID.",
        "operationId": "GetBorrower",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan associated with the borrower.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "borrowerId",
            "in": "path",
            "required": true,
            "description": "The ID of the borrower to be returned.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the borrower object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Borrower"
                }
              }
            }
          },
          "400": {
            "description": "The loanId or borrowerId parameter is not a valid ID."
          },
          "404": {
            "description": "The borrower requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "5. Entity - Borrowers"
        ],
        "summary": "/loans/{loanId}/borrowers/{borrowerId}",
        "description": "Patches an existing borrower with the provided data.",
        "operationId": "PatchBorrower",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan this borrower is associated with.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "borrowerId",
            "in": "path",
            "required": true,
            "description": "The ID of the borrower to be updated.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "input",
          "description": "Updated partial borrower object.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Borrower"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "Returns information about the updated entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResponse"
                }
              }
            }
          },
          "400": {
            "description": "The input was not well-formed."
          },
          "404": {
            "description": "The borrower requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "5. Entity - Borrowers"
        ],
        "summary": "/loans/{loanId}/borrowers/{borrowerId}",
        "description": "Deletes a borrower entity by ID and removes it from the loan.",
        "operationId": "DeleteBorrower",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan associated with the borrower.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "borrowerId",
            "in": "path",
            "required": true,
            "description": "The ID of the borrower to be deleted.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "The loanId or borrowerId parameter is not a valid ID."
          },
          "404": {
            "description": "The borrower requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/borrowers": {
      "get": {
        "tags": [
          "5. Entity - Borrowers"
        ],
        "summary": "/loans/{loanId}/borrowers",
        "description": "Gets the borrowers for the given loan.",
        "operationId": "GetBorrowers",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the loan's borrower objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Borrower"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid ID."
          },
          "404": {
            "description": "The loan requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "5. Entity - Borrowers"
        ],
        "summary": "/loans/{loanId}/borrowers",
        "description": "Creates a new borrower with the provided data.",
        "operationId": "PostBorrower",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan this borrower is associated with.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "input",
          "description": "The full borrower data to be created. See the schema for more information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Borrower"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Returns information about the created entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResponse"
                }
              }
            }
          },
          "400": {
            "description": "The input was not well-formed."
          },
          "404": {
            "description": "The specified loan was not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/borrowers/{borrowerId}/econsent": {
      "post": {
        "tags": [
          "5. Entity - Borrowers"
        ],
        "summary": "/loans/{loanId}/borrowers/{borrowerId}/econsent",
        "description": "Adds econsent data to an existing borrower. This will overwrite existing econsent data with a matching email\naddress. For the econsent data to be valid for a given borrower, the provided email address must match\nthe borrower's email address.",
        "operationId": "PostEconsentForBorrower",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan this borrower is associated with.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "borrowerId",
            "in": "path",
            "required": true,
            "description": "The ID of the borrower to be updated.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "input",
          "description": "The econsent data for the borrower.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BorrowerEconsentInput"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "Returns information about the updated entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResponse"
                }
              }
            }
          },
          "400": {
            "description": "The input was not well-formed."
          },
          "404": {
            "description": "The borrower requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/closing-costs/{closingCostId}": {
      "get": {
        "tags": [
          "6. Entity - Closing Costs"
        ],
        "summary": "/loans/{loanId}/closing-costs/{closingCostId}",
        "description": "Gets a single closing cost by ID.",
        "operationId": "GetClosingCost",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan associated with the closing cost.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "closingCostId",
            "in": "path",
            "required": true,
            "description": "The ID of the closing cost to be returned.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the closing cost object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClosingCost"
                }
              }
            }
          },
          "400": {
            "description": "The loanId or closingCostId parameter is not a valid ID."
          },
          "404": {
            "description": "The closing cost requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "6. Entity - Closing Costs"
        ],
        "summary": "/loans/{loanId}/closing-costs/{closingCostId}",
        "description": "Patches an existing closing cost with the provided data.",
        "operationId": "PatchClosingCost",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan this closing cost is associated with.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "closingCostId",
            "in": "path",
            "required": true,
            "description": "The ID of the closing cost to be updated.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "input",
          "description": "Updated partial closing cost object.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClosingCost"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "Returns information about the updated entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResponse"
                }
              }
            }
          },
          "400": {
            "description": "The input was not well-formed."
          },
          "404": {
            "description": "The closing cost requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "6. Entity - Closing Costs"
        ],
        "summary": "/loans/{loanId}/closing-costs/{closingCostId}",
        "description": "Deletes a closing cost entity by ID and removes it from the loan.",
        "operationId": "DeleteClosingCost",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan associated with the closing cost.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "closingCostId",
            "in": "path",
            "required": true,
            "description": "The ID of the closing cost to be deleted.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "The loanId or closingCostId parameter is not a valid ID."
          },
          "404": {
            "description": "The closing cost requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/closing-costs": {
      "get": {
        "tags": [
          "6. Entity - Closing Costs"
        ],
        "summary": "/loans/{loanId}/closing-costs",
        "description": "Gets the closing costs for the given loan.",
        "operationId": "GetClosingCosts",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the loan's closing cost objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClosingCost"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid ID."
          },
          "404": {
            "description": "The loan requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "6. Entity - Closing Costs"
        ],
        "summary": "/loans/{loanId}/closing-costs",
        "description": "Creates a new closing cost object with the provided data.",
        "operationId": "PostClosingCost",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan this closing cost is associated with.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "input",
          "description": "The full closing cost data to be created. See the schema for more information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClosingCost"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Returns information about the created entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResponse"
                }
              }
            }
          },
          "400": {
            "description": "The input was not well-formed."
          },
          "404": {
            "description": "The specified loan was not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/compliance/enable": {
      "post": {
        "tags": [
          "18. Integration - Compliance"
        ],
        "summary": "/loans/{loanId}/compliance/enable",
        "description": "Enables compliance monitoring for a loan. If compliance monitoring is already enabled,\nthis endpoint will no-op.",
        "operationId": "EnableCompliance",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful requests return no content."
          },
          "400": {
            "description": "The loanId parameter is not a valid GUID, or no compliance integration is set up, or compliance cannot be enabled for the loan.\n            See the error response for details."
          },
          "404": {
            "description": "Loan not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/compliance/run": {
      "put": {
        "tags": [
          "18. Integration - Compliance"
        ],
        "summary": "/loans/{loanId}/compliance/run",
        "description": "Runs compliance monitoring for a loan.",
        "operationId": "RunComplianceReport",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful requests return an empty response."
          },
          "404": {
            "description": "Loan or compliance provider not found. See the error response for details."
          },
          "409": {
            "description": "Compliance is not enabled for the loan."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/compliance-reports/{reportId}": {
      "get": {
        "tags": [
          "18. Integration - Compliance"
        ],
        "summary": "/loans/{loanId}/compliance-reports/{reportId}",
        "description": "Gets a single compliance report by ID.",
        "operationId": "GetComplianceReport",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan associated with the compliance report.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "reportId",
            "in": "path",
            "required": true,
            "description": "The ID of the compliance report to be returned.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the compliance report object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComplianceReport"
                }
              }
            }
          },
          "400": {
            "description": "The loanId or reportId parameter is not a valid ID."
          },
          "404": {
            "description": "The compliance report requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/compliance-reports/latest": {
      "get": {
        "tags": [
          "18. Integration - Compliance"
        ],
        "summary": "/loans/{loanId}/compliance-reports/latest",
        "description": "Gets the latest compliance report.",
        "operationId": "GetLatestComplianceReport",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan associated with the compliance report.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the compliance report object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComplianceReport"
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid ID."
          },
          "404": {
            "description": "No compliance reports exist for the given loanId."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/compliance-reports": {
      "get": {
        "tags": [
          "18. Integration - Compliance"
        ],
        "summary": "/loans/{loanId}/compliance-reports",
        "description": "Gets the compliance reports for the given loan.",
        "operationId": "GetComplianceReports",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the loan's compliance report objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ComplianceReport"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid ID."
          },
          "404": {
            "description": "The loan requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/concurrent-financings/{concurrentFinancingId}": {
      "get": {
        "tags": [
          "7. Entity - Concurrent Financings"
        ],
        "summary": "/loans/{loanId}/concurrent-financings/{concurrentFinancingId}",
        "description": "Gets a single concurrent financing by ID.",
        "operationId": "GetConcurrentFinancing",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan associated with the concurrent financing.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "concurrentFinancingId",
            "in": "path",
            "required": true,
            "description": "The ID of the concurrent financing to be returned.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the concurrent financing object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConcurrentFinancing"
                }
              }
            }
          },
          "400": {
            "description": "The loanId or concurrentFinancingId parameter is not a valid ID."
          },
          "404": {
            "description": "The concurrent financing requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "7. Entity - Concurrent Financings"
        ],
        "summary": "/loans/{loanId}/concurrent-financings/{concurrentFinancingId}",
        "description": "Patches an existing concurrent financing with the provided data.",
        "operationId": "PatchConcurrentFinancing",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan this concurrent financing is associated with.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "concurrentFinancingId",
            "in": "path",
            "required": true,
            "description": "The ID of the concurrent financing to be updated.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "input",
          "description": "Updated partial concurrent financing object.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConcurrentFinancing"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "Returns information about the updated entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResponse"
                }
              }
            }
          },
          "400": {
            "description": "The input was not well-formed."
          },
          "404": {
            "description": "The concurrent financing requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "7. Entity - Concurrent Financings"
        ],
        "summary": "/loans/{loanId}/concurrent-financings/{concurrentFinancingId}",
        "description": "Deletes an concurrent financing entity by ID and removes it from the loan.",
        "operationId": "DeleteConcurrentFinancing",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan associated with the concurrent financing.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "concurrentFinancingId",
            "in": "path",
            "required": true,
            "description": "The ID of the concurrent financing to be deleted.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "The loanId or concurrentFinancingId parameter is not a valid ID."
          },
          "404": {
            "description": "The concurrent financing requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/concurrent-financings": {
      "get": {
        "tags": [
          "7. Entity - Concurrent Financings"
        ],
        "summary": "/loans/{loanId}/concurrent-financings",
        "description": "Gets the concurrent financings for the given loan.",
        "operationId": "GetConcurrentFinancings",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the loan's concurrent financing objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConcurrentFinancing"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid ID."
          },
          "404": {
            "description": "The loan requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "7. Entity - Concurrent Financings"
        ],
        "summary": "/loans/{loanId}/concurrent-financings",
        "description": "Creates a new concurrent financing object with the provided data.",
        "operationId": "PostConcurrentFinancing",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan this concurrent financing is associated with.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "input",
          "description": "The full concurrent financing data to be created. See the schema for more information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConcurrentFinancing"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Returns information about the created entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResponse"
                }
              }
            }
          },
          "400": {
            "description": "The input was not well-formed."
          },
          "404": {
            "description": "The specified loan was not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/credit": {
      "post": {
        "tags": [
          "19. Integration - Credit"
        ],
        "summary": "/loans/{loanId}/credit",
        "description": "Requests credit pulls for the given borrowers and returns a job ID that can be queried.\nWhen the job completes, credit pull results will be available on the borrower object(s).",
        "operationId": "PullCredit",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "description": "Details about the credit request to pull, including pull type and borrowers.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PullCreditInput"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "A job ID for the credit request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan or borrowers not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/credit/{jobId}": {
      "get": {
        "tags": [
          "19. Integration - Credit"
        ],
        "summary": "/loans/{loanId}/credit/{jobId}",
        "description": "Returns information about the status of a credit pull job. When the status is `Completed`, the credit pull results will be available on the borrower object.",
        "operationId": "GetCreditPullStatus",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The job ID, obtained from calling `POST /loans/{loanId}/credit`.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job info for the credit request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusDetails"
                }
              }
            }
          },
          "400": {
            "description": "The loanId or jobId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan or job not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/credit-inquiries/{creditInquiryId}": {
      "get": {
        "tags": [
          "8. Entity - Credit Inquiries"
        ],
        "summary": "/loans/{loanId}/credit-inquiries/{creditInquiryId}",
        "description": "Gets a single credit inquiry by ID.",
        "operationId": "GetCreditInquiry",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan associated with the credit inquiry.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "creditInquiryId",
            "in": "path",
            "required": true,
            "description": "The ID of the credit inquiry to be returned.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the credit inquiry object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditInquiry"
                }
              }
            }
          },
          "400": {
            "description": "The loanId or creditInquiryId parameter is not a valid ID."
          },
          "404": {
            "description": "The credit inquiry requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "8. Entity - Credit Inquiries"
        ],
        "summary": "/loans/{loanId}/credit-inquiries/{creditInquiryId}",
        "description": "Patches an existing credit inquiry with the provided data.",
        "operationId": "PatchCreditInquiry",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan this credit inquiry is associated with.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "creditInquiryId",
            "in": "path",
            "required": true,
            "description": "The ID of the credit inquiry to be updated.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "input",
          "description": "Updated partial credit inquiry object.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditInquiry"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "Returns information about the updated entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResponse"
                }
              }
            }
          },
          "400": {
            "description": "The input was not well-formed."
          },
          "404": {
            "description": "The credit inquiry requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "8. Entity - Credit Inquiries"
        ],
        "summary": "/loans/{loanId}/credit-inquiries/{creditInquiryId}",
        "description": "Deletes a credit inquiry entity by ID and removes it from the loan.",
        "operationId": "DeleteCreditInquiry",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan associated with the credit inquiry.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "creditInquiryId",
            "in": "path",
            "required": true,
            "description": "The ID of the credit inquiry to be deleted.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "The loanId or creditInquiryId parameter is not a valid ID."
          },
          "404": {
            "description": "The credit inquiry requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/credit-inquiries": {
      "get": {
        "tags": [
          "8. Entity - Credit Inquiries"
        ],
        "summary": "/loans/{loanId}/credit-inquiries",
        "description": "Gets the credit inquiries for the given loan.",
        "operationId": "GetCreditInquiries",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the loan's credit inquiry objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CreditInquiry"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid ID."
          },
          "404": {
            "description": "The loan requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "8. Entity - Credit Inquiries"
        ],
        "summary": "/loans/{loanId}/credit-inquiries",
        "description": "Creates a new credit inquiry object with the provided data.",
        "operationId": "PostCreditInquiry",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan this credit inquiry is associated with.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "input",
          "description": "The full credit inquiry data to be created. See the schema for more information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditInquiry"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Returns information about the created entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResponse"
                }
              }
            }
          },
          "400": {
            "description": "The input was not well-formed."
          },
          "404": {
            "description": "The specified loan was not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/disclosures/{disclosureId}/delivery": {
      "patch": {
        "tags": [
          "20. Integration - Disclosures"
        ],
        "summary": "/loans/{loanId}/disclosures/{disclosureId}/delivery",
        "description": "Updates the delivery status and dates for a manual disclosure.",
        "operationId": "PatchManualDelivery",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "disclosureId",
            "in": "path",
            "required": true,
            "description": "The disclosure package ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchDisclosuresDeliveryInput"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "The loanId or disclosureId parameter is not a valid GUID or the body is invalid."
          },
          "404": {
            "description": "Loan or job not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/disclosures/{disclosureId}": {
      "get": {
        "tags": [
          "20. Integration - Disclosures"
        ],
        "summary": "/loans/{loanId}/disclosures/{disclosureId}",
        "description": "Returns the metadata for a disclosure.",
        "operationId": "GetDisclosurePackageMetadata",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "disclosureId",
            "in": "path",
            "required": true,
            "description": "The disclosure package ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The disclosure package metadata.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisclosurePackageMetadata"
                }
              }
            }
          },
          "400": {
            "description": "The loanId or disclosureId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan or job not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/disclosures": {
      "get": {
        "tags": [
          "20. Integration - Disclosures"
        ],
        "summary": "/loans/{loanId}/disclosures",
        "description": "Returns the metadata for all disclosure packages for a loan.",
        "operationId": "GetAllDisclosurePackagesMetadata",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The loan's disclosure packages metadata.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DisclosurePackageMetadata"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The loanId is not a valid GUID."
          },
          "404": {
            "description": "Loan not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/disclosures/change-in-circumstances": {
      "get": {
        "tags": [
          "20. Integration - Disclosures"
        ],
        "summary": "/loans/{loanId}/disclosures/change-in-circumstances",
        "description": "Returns the change in circumstances for a loan.",
        "operationId": "GetChangeInCircumstances",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The change in circumstances.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeInCircumstancesResponse"
                }
              }
            }
          },
          "400": {
            "description": "The loanId is not a valid GUID."
          },
          "404": {
            "description": "Loan not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/disclosures/dismiss-change-in-circumstances": {
      "put": {
        "tags": [
          "20. Integration - Disclosures"
        ],
        "summary": "/loans/{loanId}/disclosures/dismiss-change-in-circumstances",
        "description": "Dismiss the change in circumstances for a loan.",
        "operationId": "DismissChangeInCircumstances",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The dismiss change in circumstances response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DismissChangeInCircumstancesResponse"
                }
              }
            }
          },
          "400": {
            "description": "The loanId is not a valid GUID or loan is not in a state of change in circumstances."
          },
          "404": {
            "description": "Loan not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/disclosures/send-async": {
      "post": {
        "tags": [
          "20. Integration - Disclosures"
        ],
        "summary": "/loans/{loanId}/disclosures/send-async",
        "description": "Sends disclosures electronically to borrowers and returns a job id that can be used to query its status.",
        "operationId": "SendDisclosures",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "description": "Details about the disclosures to send electronically.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendDisclosuresInput"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "A Job ID for the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/disclosures/send-async/{jobId}": {
      "get": {
        "tags": [
          "20. Integration - Disclosures"
        ],
        "summary": "/loans/{loanId}/disclosures/send-async/{jobId}",
        "description": "Returns information about the status of a job to send disclosure.",
        "operationId": "GetSendDisclosuresStatus",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The job ID, obtained from calling `POST /api/v1/loans/{loanId}/disclosures/send-async`.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job info for the send disclosure request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusDetails"
                }
              }
            }
          },
          "400": {
            "description": "The loanId or jobId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan or job not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/disclosures/send-adverse-action-notice-async": {
      "post": {
        "tags": [
          "20. Integration - Disclosures"
        ],
        "summary": "/loans/{loanId}/disclosures/send-adverse-action-notice-async",
        "description": "Sends adverse action notice electronically to borrowers and returns a job ID that can be used to query its status.",
        "operationId": "SendAdverseActionNotice",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "description": "Details about the disclosures to send electronically.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendAdverseActionNoticeInput"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "A Job ID for the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/disclosures/send-adverse-action-notice-async/{jobId}": {
      "get": {
        "tags": [
          "20. Integration - Disclosures"
        ],
        "summary": "/loans/{loanId}/disclosures/send-adverse-action-notice-async/{jobId}",
        "description": "Returns information about the status of a job to send adverse action notice.",
        "operationId": "GetSendAdverseActionNoticeStatus",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The job ID, obtained from calling `POST /api/v1/loans/{loanId}/disclosures/send-adverse-action-notice-async`.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job info for the send adverse action notice request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusDetails"
                }
              }
            }
          },
          "400": {
            "description": "The loanId or jobId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan or job not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/disclosures/send-notice-of-incompleteness-async": {
      "post": {
        "tags": [
          "20. Integration - Disclosures"
        ],
        "summary": "/loans/{loanId}/disclosures/send-notice-of-incompleteness-async",
        "description": "Sends notice of incompleteness electronically to borrowers and returns a job ID that can be used to query its status.",
        "operationId": "SendNoticeOfIncompleteness",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "description": "Details about the disclosures to send electronically.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendNoticeOfIncompletenessInput"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "A Job ID for the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/disclosures/send-notice-of-incompleteness-async/{jobId}": {
      "get": {
        "tags": [
          "20. Integration - Disclosures"
        ],
        "summary": "/loans/{loanId}/disclosures/send-notice-of-incompleteness-async/{jobId}",
        "description": "Returns information about the status of a job to send notice of incompleteness.",
        "operationId": "GetSendNoticeOfIncompletenessStatus",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The job ID, obtained from calling `POST /api/v1/loans/{loanId}/disclosures/send-notice-of-incompleteness-async`.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job info for the send notice of incompleteness request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusDetails"
                }
              }
            }
          },
          "400": {
            "description": "The loanId or jobId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan or job not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/disclosures/resend-async": {
      "post": {
        "tags": [
          "20. Integration - Disclosures"
        ],
        "summary": "/loans/{loanId}/disclosures/resend-async",
        "description": "Resends disclosures electronically to borrowers and returns a job ID that can be used to query its status.",
        "operationId": "ResendDisclosures",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "description": "Details about the disclosures to send electronically.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendDisclosuresInput"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "A Job ID for the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/disclosures/resend-async/{jobId}": {
      "get": {
        "tags": [
          "20. Integration - Disclosures"
        ],
        "summary": "/loans/{loanId}/disclosures/resend-async/{jobId}",
        "description": "Returns information about the status of a job to resend disclosure.",
        "operationId": "GetResendDisclosureStatus",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The job ID, obtained from calling `POST /api/v1/loans/{loanId}/disclosures/resend-async`.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job info for the send notice of incompleteness request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusDetails"
                }
              }
            }
          },
          "400": {
            "description": "The loanId or jobId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan or job not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/disclosures/save-to-loan-async": {
      "post": {
        "tags": [
          "20. Integration - Disclosures"
        ],
        "summary": "/loans/{loanId}/disclosures/save-to-loan-async",
        "description": "Saves disclosures to the loan and returns a job ID that can be used to query its status.",
        "operationId": "SavePackageToLoan",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "description": "Details about the disclosures to save to the loan.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveDisclosuresToLoanInput"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "A Job ID for the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/disclosures/save-to-loan-async/{jobId}": {
      "get": {
        "tags": [
          "20. Integration - Disclosures"
        ],
        "summary": "/loans/{loanId}/disclosures/save-to-loan-async/{jobId}",
        "description": "Returns information about the status of a job to save disclosure.",
        "operationId": "GetSaveToLoanStatus",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The job ID, obtained from calling `POST /api/v1/loans/{loanId}/disclosures/save-to-loan-async`.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job info for the save to loan request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusDetails"
                }
              }
            }
          },
          "400": {
            "description": "The loanId or jobId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan or job not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/disclosures/save-adverse-action-notice-to-loan-async": {
      "post": {
        "tags": [
          "20. Integration - Disclosures"
        ],
        "summary": "/loans/{loanId}/disclosures/save-adverse-action-notice-to-loan-async",
        "description": "Saves adverse action notice to the loan and returns a job ID that can be used to query its status.",
        "operationId": "SaveAdverseActionNoticeToLoan",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "description": "Details about the disclosures to save to the loan.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveAdverseActionNoticeToLoanInput"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "A Job ID for the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/disclosures/save-adverse-action-notice-to-loan-async/{jobId}": {
      "get": {
        "tags": [
          "20. Integration - Disclosures"
        ],
        "summary": "/loans/{loanId}/disclosures/save-adverse-action-notice-to-loan-async/{jobId}",
        "description": "Returns information about the status of a job to save adverse action notice to disclosure.",
        "operationId": "GetSaveAdverseActionNoticeToLoanStatus",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The job ID, obtained from calling `POST /api/v1/loans/{loanId}/disclosures/save-adverse-action-notice-to-loan-async`.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job info for the save adverse action notice to loan request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusDetails"
                }
              }
            }
          },
          "400": {
            "description": "The loanId or jobId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan or job not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/disclosures/save-notice-of-incompleteness-to-loan-async": {
      "post": {
        "tags": [
          "20. Integration - Disclosures"
        ],
        "summary": "/loans/{loanId}/disclosures/save-notice-of-incompleteness-to-loan-async",
        "description": "Saves notice of incompleteness to the loan and returns a job ID that can be used to query its status.",
        "operationId": "SaveNoticeOfIncompletenessToLoan",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "description": "Details about the disclosures to save to the loan.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveNoticeOfIncompletenessToLoanInput"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "A Job ID for the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/disclosures/save-notice-of-incompleteness-to-loan-async/{jobId}": {
      "get": {
        "tags": [
          "20. Integration - Disclosures"
        ],
        "summary": "/loans/{loanId}/disclosures/save-notice-of-incompleteness-to-loan-async/{jobId}",
        "description": "Returns information about the status of a job to save notice of incompleteness to disclosure.",
        "operationId": "GetSaveNoticeOfIncompletenessToLoanStatus",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The job ID, obtained from calling `POST /api/v1/loans/{loanId}/disclosures/save-notice-of-incompleteness-to-loan-async`.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job info for the save notice of incompleteness to loan request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusDetails"
                }
              }
            }
          },
          "400": {
            "description": "The loanId or jobId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan or job not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/disclosures/resave-to-loan-async": {
      "post": {
        "tags": [
          "20. Integration - Disclosures"
        ],
        "summary": "/loans/{loanId}/disclosures/resave-to-loan-async",
        "description": "Resaves disclosures to the loan and returns a job ID that can be used to query its status.",
        "operationId": "ResavePackageToLoan",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "description": "Details about the disclosures to save to the loan.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResaveDisclosuresToLoanInput"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "A Job ID for the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/disclosures/resave-to-loan-async/{jobId}": {
      "get": {
        "tags": [
          "20. Integration - Disclosures"
        ],
        "summary": "/loans/{loanId}/disclosures/resave-to-loan-async/{jobId}",
        "description": "Returns information about the status of a job to resave documents to disclosure.",
        "operationId": "GetResavePackageToLoanStatus",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The job ID, obtained from calling `POST /api/v1/loans/{loanId}/disclosures/resave-to-loan-async`.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job info for the resave documents to loan request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusDetails"
                }
              }
            }
          },
          "400": {
            "description": "The loanId or jobId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan or job not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/expense-estimation/apply": {
      "post": {
        "tags": [
          "2. Entity - Loans"
        ],
        "summary": "/loans/{loanId}/expense-estimation/apply",
        "description": "Applies expense estimation configuration to a loan.",
        "operationId": "ApplyEstimationConfiguration",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The result of applying the expense estimation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplyEstimationResponse"
                }
              }
            }
          },
          "400": {
            "description": "The loan is missing required information or no applicable estimation configuration exists."
          },
          "404": {
            "description": "Loan not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/expense-estimation/overwrite": {
      "post": {
        "tags": [
          "2. Entity - Loans"
        ],
        "summary": "/loans/{loanId}/expense-estimation/overwrite",
        "description": "Applies expense estimation and overwrites existing values for specified disbursement types.",
        "operationId": "ApplyEstimationAndOverwrite",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "request",
          "description": "The request containing confirmed disbursement types to overwrite.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplyEstimationOverwriteRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "The IDs of the updated disbursements.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "guid"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The loan is missing required information or no applicable estimation configuration exists."
          },
          "404": {
            "description": "Loan not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/fees": {
      "post": {
        "tags": [
          "21. Integration - Fees"
        ],
        "summary": "/loans/{loanId}/fees",
        "description": "Pulls and applies fees to a loan. Returns a job ID that can be queried. When the job completes,\nfees will be available on the loan object.",
        "operationId": "PullAndApplyFees",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A job ID for the fees request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid GUID or the loan or config are not fully prepared for generating fees."
          },
          "404": {
            "description": "Loan not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/fees/{jobId}": {
      "get": {
        "tags": [
          "21. Integration - Fees"
        ],
        "summary": "/loans/{loanId}/fees/{jobId}",
        "description": "Returns information about the status of a fees request job.",
        "operationId": "GetFeesRequestStatus",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The job ID, obtained from calling `POST /loans/{loanId}/fees`.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job info for the fees request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusDetails"
                }
              }
            }
          },
          "400": {
            "description": "The loanId or jobId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan or job not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/file-contacts/from-global": {
      "post": {
        "tags": [
          "24. File Contacts"
        ],
        "summary": "/loans/{loanId}/file-contacts/from-global",
        "description": "Creates a new file contact on a loan from a global file contact. Global file contacts can be retrieved from\nGET /api/admin-config/{processVersionId}/file-contacts. The provided file contact type must be a supported\ntype for the global file contact's type.",
        "operationId": "CreateFileContactFromGlobal",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "description": "The request body, including the global file contact ID and the loan file contact type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostFileContactInput"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "The ID of the newly created file contact.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "The provided loan file contact type is not supported by the global file contact."
          },
          "404": {
            "description": "Loan not found or global file contact not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/incomes/{incomeId}": {
      "get": {
        "tags": [
          "9. Entity - Incomes"
        ],
        "summary": "/loans/{loanId}/incomes/{incomeId}",
        "description": "Gets a single income object by ID.",
        "operationId": "GetIncome",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan associated with the income.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "incomeId",
            "in": "path",
            "required": true,
            "description": "The ID of the income to be returned.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the income object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Income"
                }
              }
            }
          },
          "400": {
            "description": "The loanId or incomeId parameter is not a valid ID."
          },
          "404": {
            "description": "The income requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "9. Entity - Incomes"
        ],
        "summary": "/loans/{loanId}/incomes/{incomeId}",
        "description": "Patches an existing income object with the provided data.",
        "operationId": "PatchIncome",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan this income is associated with.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "incomeId",
            "in": "path",
            "required": true,
            "description": "The ID of the income to be updated.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "input",
          "description": "Updated partial income object.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Income"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "Returns information about the updated entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResponse"
                }
              }
            }
          },
          "400": {
            "description": "The input was not well-formed."
          },
          "404": {
            "description": "The income requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "9. Entity - Incomes"
        ],
        "summary": "/loans/{loanId}/incomes/{incomeId}",
        "description": "Deletes an income entity by ID and removes it from the loan.",
        "operationId": "DeleteIncome",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan associated with the income.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "incomeId",
            "in": "path",
            "required": true,
            "description": "The ID of the income to be deleted.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "The loanId or incomeId parameter is not a valid ID."
          },
          "404": {
            "description": "The income requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/incomes": {
      "get": {
        "tags": [
          "9. Entity - Incomes"
        ],
        "summary": "/loans/{loanId}/incomes",
        "description": "Gets the incomes for the given loan.",
        "operationId": "GetIncomes",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the loan's income objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Income"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid ID."
          },
          "404": {
            "description": "The loan requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "9. Entity - Incomes"
        ],
        "summary": "/loans/{loanId}/incomes",
        "description": "Creates a new income object with the provided data.",
        "operationId": "PostIncome",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan this income is associated with.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "input",
          "description": "The full income data to be created. See the schema for more information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Income"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Returns information about the created entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResponse"
                }
              }
            }
          },
          "400": {
            "description": "The input was not well-formed."
          },
          "404": {
            "description": "The specified loan was not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/integration-calls/{integrationType}": {
      "get": {
        "tags": [
          "16. Integrations"
        ],
        "summary": "/loans/{loanId}/integration-calls/{integrationType}",
        "description": "Lists metadata for all calls associated with this loan, for a specific integration.",
        "operationId": "ListIntegrationCallMetadata",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "integrationType",
            "in": "path",
            "required": true,
            "description": "Which integration to fetch calls for.",
            "schema": {
              "$ref": "#/components/schemas/IntegrationType"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of metadata returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntegrationCallMetadata"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid ID, or the integration type is not supported."
          },
          "404": {
            "description": "Loan not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/integration-calls/{integrationType}/{requestId}/request": {
      "get": {
        "tags": [
          "16. Integrations"
        ],
        "summary": "/loans/{loanId}/integration-calls/{integrationType}/{requestId}/request",
        "description": "Downloads a specified integration request. The ID can be retrieved by the list API.",
        "operationId": "DownloadIntegrationRequest",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "integrationType",
            "in": "path",
            "required": true,
            "description": "Which integration the request is from.",
            "schema": {
              "$ref": "#/components/schemas/IntegrationType"
            },
            "x-position": 2
          },
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "description": "The ID of the request to retrieve.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 3
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of metadata returned.",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "One of the ID parameters is not a valid ID, or the integration type is not supported."
          },
          "404": {
            "description": "Loan not found, or the given request ID was not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/integration-calls/{integrationType}/{requestId}/response": {
      "get": {
        "tags": [
          "16. Integrations"
        ],
        "summary": "/loans/{loanId}/integration-calls/{integrationType}/{requestId}/response",
        "description": "Downloads a specified integration response. The ID can be retrieved by the list API.",
        "operationId": "DownloadIntegrationResponse",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "integrationType",
            "in": "path",
            "required": true,
            "description": "Which integration the response is from.",
            "schema": {
              "$ref": "#/components/schemas/IntegrationType"
            },
            "x-position": 2
          },
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "description": "The ID of the response to retrieve.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 3
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of metadata returned.",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "One of the ID parameters is not a valid ID, or the integration type is not supported."
          },
          "404": {
            "description": "Loan not found, or the given response ID was not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/liabilities/{liabilityId}": {
      "get": {
        "tags": [
          "10. Entity - Liabilities"
        ],
        "summary": "/loans/{loanId}/liabilities/{liabilityId}",
        "description": "Gets a single liability by ID.",
        "operationId": "GetLiability",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan associated with the liability.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "liabilityId",
            "in": "path",
            "required": true,
            "description": "The ID of the liability to be returned.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the liability object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Liability"
                }
              }
            }
          },
          "400": {
            "description": "The loanId or liabilityId parameter is not a valid ID."
          },
          "404": {
            "description": "The liability requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "10. Entity - Liabilities"
        ],
        "summary": "/loans/{loanId}/liabilities/{liabilityId}",
        "description": "Patches an existing liability object with the provided data.",
        "operationId": "PatchLiability",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan this liability is associated with.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "liabilityId",
            "in": "path",
            "required": true,
            "description": "The ID of the liability to be updated.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "input",
          "description": "Updated partial liability object.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Liability"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "Returns information about the updated entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResponse"
                }
              }
            }
          },
          "400": {
            "description": "The input was not well-formed."
          },
          "404": {
            "description": "The liability requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "10. Entity - Liabilities"
        ],
        "summary": "/loans/{loanId}/liabilities/{liabilityId}",
        "description": "Deletes a liability entity by ID and removes it from the loan.",
        "operationId": "DeleteLiability",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan associated with the liability.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "liabilityId",
            "in": "path",
            "required": true,
            "description": "The ID of the liability to be deleted.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "The loanId or liabilityId parameter is not a valid ID."
          },
          "404": {
            "description": "The liability requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/liabilities": {
      "get": {
        "tags": [
          "10. Entity - Liabilities"
        ],
        "summary": "/loans/{loanId}/liabilities",
        "description": "Gets the liabilities for the given loan.",
        "operationId": "GetLiabilities",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the loan's liability objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Liability"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid ID."
          },
          "404": {
            "description": "The loan requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "10. Entity - Liabilities"
        ],
        "summary": "/loans/{loanId}/liabilities",
        "description": "Creates a new liability object with the provided data.",
        "operationId": "PostLiability",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan this liability is associated with.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "input",
          "description": "The full liability data to be created. See the schema for more information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Liability"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Returns information about the created entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResponse"
                }
              }
            }
          },
          "400": {
            "description": "The input was not well-formed."
          },
          "404": {
            "description": "The specified loan was not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/documents": {
      "get": {
        "tags": [
          "28. Documents"
        ],
        "summary": "/loans/{loanId}/documents",
        "description": "Gets metadata information about all documents associated with the requested loan or entity.",
        "operationId": "GetDocuments",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan to return documents for.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "entityId",
            "in": "query",
            "description": "If specified, filter to documents associated with this entity.",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "documentTypeName",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "If specified, filter to documents with these document type names. Incompatible with documentTypeId.",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            },
            "x-position": 3
          },
          {
            "name": "documentTypeId",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "If specified, filter to documents with these document type IDs. Incompatible with documentTypeName.",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string",
                "format": "guid"
              }
            },
            "x-position": 4
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the document metadata.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentMetadata"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The loanId or entityId parameter is not a valid ID, or neither parameter was supplied. "
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "28. Documents"
        ],
        "summary": "/loans/{loanId}/documents",
        "description": "Uploads a document with files. The Content-Type must be multipart/form-data.\nThe first part of the request should be JSON document metadata, containing the DocumentUploadMetadata type (see types section below).\nRemaining parts should be files, with Content-Type set. Only PDFs, PNGs, and JPEGs are supported.\nThe maximum size of all files and metadata is 50MB.\nNote: while the schema indicates that request parts can be sent in any order, the document metadata must be sent first.",
        "operationId": "UploadDocumentWithFiles",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "body"
                ],
                "properties": {
                  "body": {
                    "description": "The first section must be JSON containing the DocumentUploadMetadata type (see types section below).",
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/DocumentUploadMetadata"
                      }
                    ]
                  },
                  "filename": {
                    "type": "array",
                    "description": "List of files being uploaded through multipart/form-data.",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns the ID of the created document.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "Invalid document type specified, invalid associated entity, no files were provided, or input is not well-formed."
          },
          "415": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/documents/{documentId}": {
      "get": {
        "tags": [
          "28. Documents"
        ],
        "summary": "/loans/{loanId}/documents/{documentId}",
        "description": "Downloads metadata about a document.",
        "operationId": "GetDocument",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "description": "The ID of the document to be retrieved.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the document metadata.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentMetadata"
                }
              }
            }
          },
          "400": {
            "description": "The documentId parameter is not a valid ID."
          },
          "404": {
            "description": "The document does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/documents/{documentId}/download": {
      "get": {
        "tags": [
          "28. Documents"
        ],
        "summary": "/loans/{loanId}/documents/{documentId}/download",
        "description": "Downloads the file or files uploaded to a given document ID.",
        "operationId": "DownloadDocument",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "description": "The ID of the document to be retrieved.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the document. Single files will be downloaded as-is, while multiple files will be returned as a single zip.",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "The documentId parameter is not a valid ID."
          },
          "404": {
            "description": "The document does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/documents/{documentId}/download/{fileId}": {
      "get": {
        "tags": [
          "28. Documents"
        ],
        "summary": "/loans/{loanId}/documents/{documentId}/download/{fileId}",
        "description": "Downloads a file associated with a document.",
        "operationId": "DownloadDocumentFile",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "description": "The ID of the document to be retrieved.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "description": "The ID of the file to be retrieved.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 3
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the file.",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "The documentId or fileId parameter is not a valid ID."
          },
          "404": {
            "description": "The document or file does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/documents/{documentId}/status": {
      "put": {
        "tags": [
          "28. Documents"
        ],
        "summary": "/loans/{loanId}/documents/{documentId}/status",
        "description": "Updates the status of a document.",
        "operationId": "UpdateDocumentStatus",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "description": "The ID of the document to update.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "request",
          "description": "The new status for the document.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDocumentStatusInput"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "204": {
            "description": "The document status was updated successfully."
          },
          "400": {
            "description": "The status provided is invalid."
          },
          "404": {
            "description": "The document requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/objectives": {
      "get": {
        "tags": [
          "26. Objectives"
        ],
        "summary": "/loans/{loanId}/objectives",
        "description": "Gets all objectives associated with a given loan. Filters are intersected, not unioned. That is, if you provide two filters,\nthe result will be all objectives that match **both** filters.",
        "operationId": "GetObjectivesForLoan",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan to retrieve objectives for.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "dependentExternalPartyTypes",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "If set, only returns objectives that are dependent on the provided external party type.",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "$ref": "#/components/schemas/DependentExternalPartyType"
              }
            },
            "x-position": 2
          },
          {
            "name": "statuses",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "If set, returns objectives with the provided statuses.",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "$ref": "#/components/schemas/ObjectiveStatus"
              }
            },
            "x-position": 3
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the list of Objective objects, or an empty list if none are found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Objective"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid ID or the query was invalid."
          },
          "404": {
            "description": "The loan requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/objectives/{objectiveId}": {
      "get": {
        "tags": [
          "26. Objectives"
        ],
        "summary": "/loans/{loanId}/objectives/{objectiveId}",
        "description": "Gets a single objective by ID.",
        "operationId": "GetObjective",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "objectiveId",
            "in": "path",
            "required": true,
            "description": "The ID of the objective to be returned.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the objective object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Objective"
                }
              }
            }
          },
          "400": {
            "description": "The objectiveId parameter is not a valid ID."
          },
          "404": {
            "description": "The objective requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/objectives/{objectiveId}/cancel": {
      "post": {
        "tags": [
          "26. Objectives"
        ],
        "summary": "/loans/{loanId}/objectives/{objectiveId}/cancel",
        "description": "Manually cancels an objective.",
        "operationId": "CancelObjective",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "objectiveId",
            "in": "path",
            "required": true,
            "description": "The ID of the objective to be cancelled.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "reason",
          "description": "Reason for cancelling the objective.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelObjectiveRequest"
              }
            }
          },
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "Returns an empty object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelObjectiveResponse"
                }
              }
            }
          },
          "400": {
            "description": "The objective is not in a cancellable state."
          },
          "404": {
            "description": "The objective does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/objective-tasks": {
      "get": {
        "tags": [
          "26. Objectives"
        ],
        "summary": "/loans/{loanId}/objective-tasks",
        "description": "Gets all tasks associated with a given loan, across all objectives. Filters are intersected, not unioned. That is, if you provide two filters (ie. party type and status),\nthe result will be all tasks that match **both** filters.",
        "operationId": "GetObjectiveTasksForLoan",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan to retrieve objectives for.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "objectiveDependentExternalPartyTypes",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "If set, only returns tasks that are dependent on the provided external party type.",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "$ref": "#/components/schemas/DependentExternalPartyType"
              }
            },
            "x-position": 2
          },
          {
            "name": "objectiveStatuses",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "If set, only returns tasks that are associated with objectives with the provided statuses.",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "$ref": "#/components/schemas/ObjectiveStatus"
              }
            },
            "x-position": 3
          },
          {
            "name": "statuses",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "If set, returns tasks with the provided task level statuses.",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "$ref": "#/components/schemas/ObjectiveTaskStatus"
              }
            },
            "x-position": 4
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the list of ObjectiveTask objects, or an empty list if none are found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ObjectiveTask"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid ID or the query was invalid."
          },
          "404": {
            "description": "The loan requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/objective-tasks/{taskId}": {
      "get": {
        "tags": [
          "26. Objectives"
        ],
        "summary": "/loans/{loanId}/objective-tasks/{taskId}",
        "description": "Gets a single task by ID.",
        "operationId": "GetObjectiveTask",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "description": "The ID of an objective's task to be returned.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the objective task object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectiveTask"
                }
              }
            }
          },
          "400": {
            "description": "The taskId parameter is not a valid ID."
          },
          "404": {
            "description": "The task requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/objective-tasks/{taskId}/submit": {
      "post": {
        "tags": [
          "26. Objectives"
        ],
        "summary": "/loans/{loanId}/objective-tasks/{taskId}/submit",
        "description": "Submits a single task by ID. Currently only supports Form input and Instructions tasks.\nForm input tasks require a list of FormInputValue values to be provided.\nInstructions tasks do not require any additional information, and will check all checklist items before submitting.",
        "operationId": "SubmitObjectiveTask",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "description": "The ID of an objective's task to be submitted.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "description": "The request body containing the form input values if the task is a Form input task.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitObjectiveTaskRequest"
              }
            }
          },
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "Returns an empty object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmitObjectiveTaskResponse"
                }
              }
            }
          },
          "400": {
            "description": "The taskId parameter is not a valid ID or the task type is not supported for completion."
          },
          "404": {
            "description": "The task requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/objective-tasks/{taskId}/cancel": {
      "post": {
        "tags": [
          "26. Objectives"
        ],
        "summary": "/loans/{loanId}/objective-tasks/{taskId}/cancel",
        "description": "Cancels a single task by ID.",
        "operationId": "CancelObjectiveTask",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "description": "The ID of an objective's task to be submitted.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "description": "The request body containing the form input values if the task is a Form input task.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelObjectiveTaskRequest"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "Returns an empty object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelObjectiveTaskResponse"
                }
              }
            }
          },
          "400": {
            "description": "The taskId parameter is not a valid ID or the task type is not supported for completion."
          },
          "404": {
            "description": "The task requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/conditions": {
      "get": {
        "tags": [
          "27. Conditions"
        ],
        "summary": "/loans/{loanId}/conditions",
        "description": "Gets conditions for a loan. A condition must match all provided query parameters to be returned.",
        "operationId": "GetConditions",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan to retrieve conditions for",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "entityType",
            "in": "query",
            "description": "The entity type to retrieve conditions for",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status of the conditions to retrieve",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ConditionStatus"
                }
              ]
            },
            "x-position": 3
          },
          {
            "name": "categoryType",
            "in": "query",
            "description": "The category of the conditions to retrieve",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AdminCategory"
                }
              ]
            },
            "x-position": 4
          },
          {
            "name": "conditionTemplateId",
            "in": "query",
            "description": "The ID of the condition template to retrieve conditions for",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "conditionTemplateName",
            "in": "query",
            "description": "The name of the condition template to retrieve conditions for",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "completionTiming",
            "in": "query",
            "description": "The completion timing of the conditions to retrieve",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ConditionCompletionTiming"
                }
              ]
            },
            "x-position": 7
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of conditions for the loan.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Condition"
                  }
                }
              }
            }
          },
          "404": {
            "description": "The loan requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "27. Conditions"
        ],
        "summary": "/loans/{loanId}/conditions",
        "description": "Adds a new condition to a loan.",
        "operationId": "CreateCondition",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan to add a condition for.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "description": "The condition to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLoanConditionInput"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Returns the ID of the newly created condition.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/conditions/{conditionId}": {
      "get": {
        "tags": [
          "27. Conditions"
        ],
        "summary": "/loans/{loanId}/conditions/{conditionId}",
        "description": "Gets a single condition by ID.",
        "operationId": "GetCondition",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan to retrieve the condition for.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "conditionId",
            "in": "path",
            "required": true,
            "description": "The ID of the condition to be returned.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the condition object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Condition"
                }
              }
            }
          },
          "400": {
            "description": "The conditionId parameter is not a valid ID."
          },
          "404": {
            "description": "The condition requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/conditions/{conditionId}/status": {
      "post": {
        "tags": [
          "27. Conditions"
        ],
        "summary": "/loans/{loanId}/conditions/{conditionId}/status",
        "description": "Updates the status of a condition.",
        "operationId": "UpdateConditionStatus",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan to update the condition for.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "conditionId",
            "in": "path",
            "required": true,
            "description": "The ID of the condition to update.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "request",
          "description": "The new condition for the status.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateConditionStatusInput"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "204": {
            "description": "The condition status was updated successfully."
          },
          "400": {
            "description": "The status provided is invalid."
          },
          "404": {
            "description": "The condition requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/conditions/{conditionId}/associate-document": {
      "post": {
        "tags": [
          "27. Conditions"
        ],
        "summary": "/loans/{loanId}/conditions/{conditionId}/associate-document",
        "description": "Associates a document to a condition. The two must be on the same loan.",
        "operationId": "AssociateDocumentToCondition",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan to associate the document with.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "conditionId",
            "in": "path",
            "required": true,
            "description": "The ID of the condition to update.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "description": "The document ID to associate with the condition.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssociateDocumentToConditionInput"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "204": {
            "description": "The document was associated with the condition successfully."
          },
          "400": {
            "description": "The document is not on the same loan as the condition."
          },
          "404": {
            "description": "The condition or document requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/by-number/{loanNumber}": {
      "get": {
        "tags": [
          "2. Entity - Loans"
        ],
        "summary": "/loans/by-number/{loanNumber}",
        "description": "Gets a loan ID by loan number.",
        "operationId": "GetLoanIdByNumber",
        "parameters": [
          {
            "name": "loanNumber",
            "in": "path",
            "required": true,
            "description": "The loan number.",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Loan ID returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": ""
          },
          "404": {
            "description": "Loan not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}": {
      "get": {
        "tags": [
          "2. Entity - Loans"
        ],
        "summary": "/loans/{loanId}",
        "description": "Gets a loan object by ID.",
        "operationId": "GetLoan",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Loan returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Loan"
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid ID."
          },
          "404": {
            "description": "Loan not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "2. Entity - Loans"
        ],
        "summary": "/loans/{loanId}",
        "description": "Patches an existing loan with the provided data.\nAll other fields will remain unchanged if not provided.",
        "operationId": "PatchLoan",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan to be updated.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "input",
          "description": "The loan fields to be updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Loan"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Returns the ID of the updated loan.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoanResponse"
                }
              }
            }
          },
          "400": {
            "description": "The input was not well-formed."
          },
          "404": {
            "description": "The loan specified by the loan ID does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "2. Entity - Loans"
        ],
        "summary": "/loans/{loanId}",
        "description": "Archives a loan.",
        "operationId": "ArchiveLoan",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan to be archived.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "The loanId parameter is not a valid ID."
          },
          "404": {
            "description": "The loan specified by the loan ID does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans": {
      "post": {
        "tags": [
          "2. Entity - Loans"
        ],
        "summary": "/loans",
        "description": "Creates a new loan with the provided data.",
        "operationId": "PostLoan",
        "parameters": [
          {
            "name": "deferComputation",
            "in": "query",
            "description": "If true, the loan will not synchronously calculate computed fields or triggers before returning.",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "input",
          "description": "The full loan data to be created. You can specify entities to be created, and specify entity relationships\nby using \"ref\" fields as mentioned in the documentation above. See the schema for more information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Loan"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Returns the ID of the created loan and the IDs of any entities with specified ref fields.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoanResponse"
                }
              }
            }
          },
          "400": {
            "description": "The input was not well-formed."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/mismo": {
      "post": {
        "tags": [
          "2. Entity - Loans"
        ],
        "summary": "/loans/mismo",
        "description": "Creates a new loan using a MISMO 3.4 XML. The MISMO XML should be uploaded with Content-Type 'application/xml' or 'text/xml'.",
        "operationId": "PostLoanWithMismo",
        "parameters": [
          {
            "name": "loanType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/LoanType"
            },
            "x-position": 1
          },
          {
            "name": "loanChannel",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/LoanChannel"
                    }
                  ]
                }
              ]
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "type": "string"
              }
            },
            "text/xml": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns an object containing the ID of the created loan.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoanMismoResponse"
                }
              }
            }
          },
          "400": {
            "description": "The MISMO 3.4 file is invalid or malformed."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/export": {
      "get": {
        "tags": [
          "2. Entity - Loans"
        ],
        "summary": "/loans/{loanId}/export",
        "description": "Exports a loan. The only currently supported export type is \"mismo\".",
        "operationId": "DownloadLoanMismo",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan to export",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "type",
            "in": "query",
            "description": "The loan export type",
            "schema": {
              "$ref": "#/components/schemas/LoanExportType"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the exported loan file",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": ""
          },
          "404": {
            "description": "Loan not found"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/assigned-users": {
      "put": {
        "tags": [
          "29. Users"
        ],
        "summary": "/loans/{loanId}/assigned-users",
        "description": "Replace all current assignees on the loan with the provided list of users.",
        "operationId": "PostAssignedUsers",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "input",
          "description": "The full list of userIds to be assigned to the loan. See the schema for more information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignedUsersInput"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Returns the full list of userIds assigned to the loan.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssignedUsersInput"
                }
              }
            }
          },
          "400": {
            "description": "The userIds parameter contains an invalid ID."
          },
          "404": {
            "description": "The loan requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/compute-status": {
      "post": {
        "tags": [
          "2. Entity - Loans"
        ],
        "summary": "/loans/{loanId}/compute-status",
        "description": "Blocks until the provided loan fields are fully up-to-date based on the loan's process version.",
        "operationId": "GetComputeStatus",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "request",
          "description": "See schema for more details. If both `fields` and `groups` are provided, all fields in both lists will be checked.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComputeStatusRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComputeStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "The userIds parameter contains an invalid ID."
          },
          "404": {
            "description": "The loan requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/loan-stage": {
      "put": {
        "tags": [
          "2. Entity - Loans"
        ],
        "summary": "/loans/{loanId}/loan-stage",
        "description": "Updates the specified loan's loan stage to the provided template identifier or template name. Loan stage names are case-sensitive.\nLoan stage template identifiers and names can be retrieved from the /loan-stage-templates API",
        "operationId": "PutLoanStage",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutLoanStageBody"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": "The loan stage was set successfully"
          },
          "400": {
            "description": "Some validation errors prevented the loan stage transition",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PutLoanStageErrorResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified Loan or Loan Stage Template was not found"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/tasks": {
      "get": {
        "tags": [
          "25. Tasks"
        ],
        "summary": "/loans/{loanId}/tasks",
        "description": "Gets all tasks associated with a given loan. Filters are intersected, not unioned. That is, if you provide two filters,\nthe result will be all tasks that match **both** filters.",
        "operationId": "GetTasksForLoan",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan to retrieve tasks for.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "requiresBorrowerAction",
            "in": "query",
            "description": "If true or false, only returns tasks that require borrower action (or not).\n            If omitted, returns all tasks by default.",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "status",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "If set, returns tasks with the provided statuses.",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "$ref": "#/components/schemas/TaskStatus"
              }
            },
            "x-position": 3
          },
          {
            "name": "taskTemplateName",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "If set, returns tasks with the provided task template names. Incompatible with taskTemplateId.",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            },
            "x-position": 4
          },
          {
            "name": "taskTemplateId",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "If set, returns tasks with the provided task template IDs. Incompatible with taskTemplateName.",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string",
                "format": "guid"
              }
            },
            "x-position": 5
          },
          {
            "name": "dueDateBefore",
            "in": "query",
            "description": "If set, only returns tasks with a due date before the provided date.",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "dueDateAfter",
            "in": "query",
            "description": "If set, only returns tasks with a due date after the provided date.",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the list of Task objects, or an empty list if none are found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Task"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid ID or the query was invalid."
          },
          "404": {
            "description": "The loan requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/tasks/{taskId}": {
      "get": {
        "tags": [
          "25. Tasks"
        ],
        "summary": "/loans/{loanId}/tasks/{taskId}",
        "description": "Gets a single task by ID.",
        "operationId": "GetTask",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "description": "The ID of the task to be returned.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the task object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "400": {
            "description": "The taskId parameter is not a valid ID."
          },
          "404": {
            "description": "The task requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/tasks/{taskId}/submit": {
      "post": {
        "tags": [
          "25. Tasks"
        ],
        "summary": "/loans/{loanId}/tasks/{taskId}/submit",
        "description": "Complete a simple instructions task",
        "operationId": "SubmitSimpleInstructionTask",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "description": "The ID of the task to be submitted.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the ID of the completed task.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "The task is not a simple instructions task."
          },
          "404": {
            "description": "The task does not exist."
          },
          "409": {
            "description": "The task is not in a completable state."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/tasks/{taskId}/cancel": {
      "post": {
        "tags": [
          "25. Tasks"
        ],
        "summary": "/loans/{loanId}/tasks/{taskId}/cancel",
        "description": "Cancel a simple instructions task",
        "operationId": "CancelSimpleInstructionTask",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "description": "The ID of the task to be cancelled.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "description": "Request body, including a note detailing the cancellation reason.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelTaskInput"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "Returns an empty object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelTaskResponse"
                }
              }
            }
          },
          "400": {
            "description": "The task is not a simple instructions task."
          },
          "404": {
            "description": "The task does not exist."
          },
          "409": {
            "description": "The task is not in a cancellable state."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/mi/view-quotes": {
      "post": {
        "tags": [
          "22. Integration - MI"
        ],
        "summary": "/loans/{loanId}/mi/view-quotes",
        "description": "Requests MI quotes for the given loan and loan parameters, requesting from all configured providers. Error messages may be returned in the response, even if some quotes were successfully returned.",
        "operationId": "QuoteMi",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "description": "The quote parameters.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MiQuoteInput"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MiQuoteResponse"
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter was not valid, the MI providers are not configured, or the loan data may not be appropriately filled out."
          },
          "404": {
            "description": "Loan not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/mi/select-quote/{quoteId}": {
      "put": {
        "tags": [
          "22. Integration - MI"
        ],
        "summary": "/loans/{loanId}/mi/select-quote/{quoteId}",
        "description": "Associate a selected quote with the loan. The quote details will be applied to the loan but not ordered.",
        "operationId": "SelectMiQuote",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "quoteId",
            "in": "path",
            "required": true,
            "description": "The ID of the quote to be selected.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "The loanId or quoteId parameters were not valid."
          },
          "404": {
            "description": "Loan not found, or quote not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/mi/order": {
      "post": {
        "tags": [
          "22. Integration - MI"
        ],
        "summary": "/loans/{loanId}/mi/order",
        "description": "Places an order for the quote ID in the request, or for the quote selected on the loan if not specified in the request.",
        "operationId": "PlaceOrder",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "description": "The order parameters, including quote ID. If the loan has already selected a quote, the quote ID is optional, otherwise that quote will be selected as well.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MiPlaceOrderInput"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "The order was successful, but warnings may have been generated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessWithWarningsResponse"
                }
              }
            }
          },
          "204": {
            "description": "The order was successful."
          },
          "400": {
            "description": "The loanId parameter was not valid, the PMI providers are not configured, or the loan data may not be appropriately filled out."
          },
          "404": {
            "description": "Loan not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/mi": {
      "delete": {
        "tags": [
          "22. Integration - MI"
        ],
        "summary": "/loans/{loanId}/mi",
        "description": "Clear any selected MI quote on the loan.",
        "operationId": "ClearPmiQuote",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "The loanId parameter was not valid."
          },
          "404": {
            "description": "Loan not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/notes": {
      "post": {
        "tags": [
          "2. Entity - Loans"
        ],
        "summary": "/loans/{loanId}/notes",
        "description": "Adds a new Note to the loan. Can be attached to a task or document.",
        "operationId": "CreateNote",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostNoteInput"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "Invalid associated task/document fields, the message field is missing, or input is not well-formed."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/owned-properties/{propertyId}": {
      "get": {
        "tags": [
          "11. Entity - Properties"
        ],
        "summary": "/loans/{loanId}/owned-properties/{propertyId}",
        "description": "Gets a single owned property by ID.",
        "operationId": "GetOwnedProperty",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan associated with the property.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "propertyId",
            "in": "path",
            "required": true,
            "description": "The ID of the property to be returned.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the property object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Property"
                }
              }
            }
          },
          "400": {
            "description": "The loanId or propertyId parameter is not a valid ID."
          },
          "404": {
            "description": "The property requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "11. Entity - Properties"
        ],
        "summary": "/loans/{loanId}/owned-properties/{propertyId}",
        "description": "Patches an existing owned property with the provided data.",
        "operationId": "PatchOwnedProperty",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan this property is associated with.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "propertyId",
            "in": "path",
            "required": true,
            "description": "The ID of the property to be updated.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "input",
          "description": "Updated partial owned property object.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Property"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "Returns information about the updated entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResponse"
                }
              }
            }
          },
          "400": {
            "description": "The input was not well-formed."
          },
          "404": {
            "description": "The property requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "11. Entity - Properties"
        ],
        "summary": "/loans/{loanId}/owned-properties/{propertyId}",
        "description": "Deletes an owned property entity by ID and removes it from the loan.",
        "operationId": "DeleteOwnedProperty",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan associated with the property.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "propertyId",
            "in": "path",
            "required": true,
            "description": "The ID of the property to be deleted.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "The loanId or propertyId parameter is not a valid ID or The property requested is the subject property of the loan."
          },
          "404": {
            "description": "The property requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/owned-properties": {
      "get": {
        "tags": [
          "11. Entity - Properties"
        ],
        "summary": "/loans/{loanId}/owned-properties",
        "description": "Gets the owned properties for the given loan.",
        "operationId": "GetOwnedProperties",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the loan's owned property objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Property"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid ID."
          },
          "404": {
            "description": "The loan requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "11. Entity - Properties"
        ],
        "summary": "/loans/{loanId}/owned-properties",
        "description": "Creates a new borrower-owned property object with the provided data.",
        "operationId": "PostOwnedProperty",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan this property is associated with.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "input",
          "description": "The full property data to be created. See the schema for more information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Property"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Returns information about the created entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResponse"
                }
              }
            }
          },
          "400": {
            "description": "The input was not well-formed."
          },
          "404": {
            "description": "The specified loan was not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/ping": {
      "get": {
        "tags": [
          "1. Ping"
        ],
        "summary": "/ping",
        "description": "Ping endpoint (no-op).",
        "operationId": "Ping",
        "parameters": [
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns \"pong\".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/pipeline/views": {
      "post": {
        "tags": [
          "32. Pipeline"
        ],
        "summary": "/pipeline/views",
        "description": "Queries the given pipeline view on behalf of the given user. The user must have access to the pipeline view.",
        "operationId": "QueryPipelineView",
        "parameters": [
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryPipelineViewInput"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Returns pipeline view data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryPipelineViewResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/pricing/add-adjustment": {
      "post": {
        "tags": [
          "23. Integration - Pricing"
        ],
        "summary": "/loans/{loanId}/pricing/add-adjustment",
        "description": "Adds a manual adjustment to a loan's pricing.",
        "operationId": "AddManualAdjustment",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "description": "The manual adjustment details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoanProductAddManualAdjustmentBody"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "202": {
            "description": "A job ID for the add manual adjustment request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid GUID or the request body is invalid."
          },
          "404": {
            "description": "Loan not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/pricing/add-adjustment/{jobId}": {
      "get": {
        "tags": [
          "23. Integration - Pricing"
        ],
        "summary": "/loans/{loanId}/pricing/add-adjustment/{jobId}",
        "description": "Retrieves the result of an add manual adjustment job.",
        "operationId": "GetAddManualAdjustmentJobResult",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The job ID of the add manual adjustment request.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The result of the add manual adjustment job.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusDetails"
                }
              }
            }
          },
          "404": {
            "description": "Job not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/pricing/edit-adjustment": {
      "post": {
        "tags": [
          "23. Integration - Pricing"
        ],
        "summary": "/loans/{loanId}/pricing/edit-adjustment",
        "description": "Edits an existing manual adjustment on a loan's pricing.",
        "operationId": "EditManualAdjustment",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "description": "The updated manual adjustment details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoanProductEditManualAdjustmentBody"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "202": {
            "description": "A job ID for the edit manual adjustment request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid GUID or the request body is invalid."
          },
          "404": {
            "description": "Loan or adjustment not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/pricing/edit-adjustment/{jobId}": {
      "get": {
        "tags": [
          "23. Integration - Pricing"
        ],
        "summary": "/loans/{loanId}/pricing/edit-adjustment/{jobId}",
        "description": "Retrieves the result of an edit manual adjustment job.",
        "operationId": "GetEditManualAdjustmentJobResult",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The job ID of the edit manual adjustment request.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The result of the edit manual adjustment job.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusDetails"
                }
              }
            }
          },
          "404": {
            "description": "Job not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/pricing/remove-adjustment": {
      "post": {
        "tags": [
          "23. Integration - Pricing"
        ],
        "summary": "/loans/{loanId}/pricing/remove-adjustment",
        "description": "Deletes an existing manual adjustment from a loan's pricing.",
        "operationId": "DeleteManualAdjustment",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "description": "contains the AdjustmentId to remove.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoanProductRemoveManualAdjustmentBody"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "202": {
            "description": "A job ID for the delete manual adjustment request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid GUID or the request body is invalid."
          },
          "404": {
            "description": "Loan or adjustment not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/pricing/remove-adjustment/{jobId}": {
      "get": {
        "tags": [
          "23. Integration - Pricing"
        ],
        "summary": "/loans/{loanId}/pricing/remove-adjustment/{jobId}",
        "description": "Retrieves the result of a delete manual adjustment job.",
        "operationId": "GetDeleteManualAdjustmentJobResult",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The job ID of the edit manual adjustment request.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The result of the edit manual adjustment job.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusDetails"
                }
              }
            }
          },
          "404": {
            "description": "Job not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/pricing/approve-lock": {
      "post": {
        "tags": [
          "23. Integration - Pricing"
        ],
        "summary": "/loans/{loanId}/pricing/approve-lock",
        "description": "Approves a request to approve a lock. Returns a job ID that can be used to check the status of the request.",
        "operationId": "ApproveLock",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "A job ID for the rate lock request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid GUID or the loan or config are not fully prepared for rate locking."
          },
          "404": {
            "description": "Loan not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/pricing/approve-lock/{jobId}": {
      "get": {
        "tags": [
          "23. Integration - Pricing"
        ],
        "summary": "/loans/{loanId}/pricing/approve-lock/{jobId}",
        "description": "Returns information about the status of a job to approve a rate lock.",
        "operationId": "ApproveLockStatus",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The job ID, obtained from calling `POST /loans/{loanId}/approve-lock`.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job info for the rate lock request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusDetails"
                }
              }
            }
          },
          "400": {
            "description": "The loanId or jobId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan or job not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/pricing/cancel-lock": {
      "post": {
        "tags": [
          "23. Integration - Pricing"
        ],
        "summary": "/loans/{loanId}/pricing/cancel-lock",
        "description": "Cancels an existing lock on a product price/rate.",
        "operationId": "CancelLock",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "A job ID for the GetCancelLockStatus",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/pricing/cancel-lock/{jobId}": {
      "get": {
        "tags": [
          "23. Integration - Pricing"
        ],
        "summary": "/loans/{loanId}/pricing/cancel-lock/{jobId}",
        "description": "Returns information about the status of a job to cancel lock a pricing post-lock action request",
        "operationId": "GetCancelLockStatus",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The job ID, obtained from calling `POST /loans/{loanId}/cancel-lock`.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job info for the cancel lock request job",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusDetails"
                }
              }
            }
          },
          "400": {
            "description": "The loanId or jobId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan or job not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/pricing/request-concession": {
      "post": {
        "tags": [
          "23. Integration - Pricing"
        ],
        "summary": "/loans/{loanId}/pricing/request-concession",
        "description": "Requests a lock extension. Returns a job ID that can be used to check the status of the request.",
        "operationId": "RequestConcession",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "description": "Information describing the concession.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceConcessionRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "202": {
            "description": "A job ID for the ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid GUID or the loan or config are not fully prepared for rate locking."
          },
          "404": {
            "description": "Loan not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/pricing/request-concession/{jobId}": {
      "get": {
        "tags": [
          "23. Integration - Pricing"
        ],
        "summary": "/loans/{loanId}/pricing/request-concession/{jobId}",
        "description": "Returns information about the status of a job to request a rate lock extension.",
        "operationId": "GetRequestConcessionStatus",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The job ID, obtained from calling `POST /loans/{loanId}/request-rate-lock`.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job info for the rate lock request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusDetails"
                }
              }
            }
          },
          "400": {
            "description": "The loanId or jobId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan or job not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/pricing/approve-concession": {
      "post": {
        "tags": [
          "23. Integration - Pricing"
        ],
        "summary": "/loans/{loanId}/pricing/approve-concession",
        "description": "Approves an lock extension request. Returns a job ID that can be used to check the status of the request.",
        "operationId": "ApprovePriceConcession",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "A job ID for the get pricing actions request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/pricing/approve-concession/{jobId}": {
      "get": {
        "tags": [
          "23. Integration - Pricing"
        ],
        "summary": "/loans/{loanId}/pricing/approve-concession/{jobId}",
        "description": "Returns information about the status of a job to request a rate lock extension.",
        "operationId": "GetApprovePriceConcessionStatus",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The job ID, obtained from calling `POST /loans/{loanId}/request-rate-lock`.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job info for the rate lock request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusDetails"
                }
              }
            }
          },
          "400": {
            "description": "The loanId or jobId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan or job not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/pricing/quote-scenarios": {
      "post": {
        "tags": [
          "23. Integration - Pricing"
        ],
        "summary": "/loans/{loanId}/pricing/quote-scenarios",
        "description": "Fetch quote scenarios. Returns a job ID that can be used to check the status of the request.",
        "operationId": "QuotePricingScenarios",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "description": "The quote parameters, including rate lock duration.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PricingQuoteScenarioInput"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "202": {
            "description": "A job ID for the quote request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/pricing/quote-scenarios/{jobId}": {
      "get": {
        "tags": [
          "23. Integration - Pricing"
        ],
        "summary": "/loans/{loanId}/pricing/quote-scenarios/{jobId}",
        "description": "Returns information about the status of a quote scenarios job.",
        "operationId": "GetQuoteScenariosStatus",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The job ID, obtained from calling `POST /loans/{loanId}/quote-scenarios`.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job info for the quote scenarios request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuotePricingJobStatusDetails"
                }
              }
            }
          },
          "400": {
            "description": "The loanId or jobId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan or job not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/pricing/select-quote": {
      "post": {
        "tags": [
          "23. Integration - Pricing"
        ],
        "summary": "/loans/{loanId}/pricing/select-quote",
        "description": "Register quote scenarios. Returns a job ID that can be used to check the status of the request.",
        "operationId": "SelectPricingQuoteScenario",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "description": "The quote ID.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PricingSelectQuoteScenarioInput"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "202": {
            "description": "A job ID for the select quote request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/pricing/select-quote/{jobId}": {
      "get": {
        "tags": [
          "23. Integration - Pricing"
        ],
        "summary": "/loans/{loanId}/pricing/select-quote/{jobId}",
        "description": "Returns information about the status of a select quote job.",
        "operationId": "GetSelectQuoteStatus",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The job ID, obtained from calling `POST /loans/{loanId}/select-quote`.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job info for the select quote request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusDetails"
                }
              }
            }
          },
          "400": {
            "description": "The loanId or jobId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan or job not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/pricing/request-rate-lock": {
      "post": {
        "tags": [
          "23. Integration - Pricing"
        ],
        "summary": "/loans/{loanId}/pricing/request-rate-lock",
        "description": "Requests a rate lock. Returns a job ID that can be used to check the status of the request.",
        "operationId": "RequestRateLock",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "description": "The quote ID.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PricingRateLockInput"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "202": {
            "description": "A job ID for the rate lock request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid GUID or the loan or config are not fully prepared for rate locking."
          },
          "404": {
            "description": "Loan not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/pricing/request-rate-lock/{jobId}": {
      "get": {
        "tags": [
          "23. Integration - Pricing"
        ],
        "summary": "/loans/{loanId}/pricing/request-rate-lock/{jobId}",
        "description": "Returns information about the status of a job to request a rate lock.",
        "operationId": "GetRateLockStatus",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The job ID, obtained from calling `POST /loans/{loanId}/request-rate-lock`.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job info for the rate lock request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusDetails"
                }
              }
            }
          },
          "400": {
            "description": "The loanId or jobId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan or job not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/pricing/extend-lock": {
      "post": {
        "tags": [
          "23. Integration - Pricing"
        ],
        "summary": "/loans/{loanId}/pricing/extend-lock",
        "description": "Extends a lock expiration date. Returns a job ID that can be used to check the status of the request.",
        "operationId": "ExtendLock",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "description": "The quote ID.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PricingRequestExtension"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "202": {
            "description": "A job ID for the rate lock extension request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid GUID or the loan or config are not fully prepared for rate locking."
          },
          "404": {
            "description": "Loan not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/pricing/extend-lock/{jobId}": {
      "get": {
        "tags": [
          "23. Integration - Pricing"
        ],
        "summary": "/loans/{loanId}/pricing/extend-lock/{jobId}",
        "description": "Returns information about the status of a job to extend a rate lock expiration.",
        "operationId": "GetExtendLockStatus",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The job ID, obtained from calling `POST /loans/{loanId}/request-rate-lock`.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job info for the rate lock request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusDetails"
                }
              }
            }
          },
          "400": {
            "description": "The loanId or jobId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan or job not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/pricing/request-extension": {
      "post": {
        "tags": [
          "23. Integration - Pricing"
        ],
        "summary": "/loans/{loanId}/pricing/request-extension",
        "description": "Requests a lock extension. Returns a job ID that can be used to check the status of the request.",
        "operationId": "RequestExtension",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "description": "The quote ID.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PricingRequestExtension"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "202": {
            "description": "A job ID for the rate lock extension request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid GUID or the loan or config are not fully prepared for rate locking."
          },
          "404": {
            "description": "Loan not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/pricing/request-extension/{jobId}": {
      "get": {
        "tags": [
          "23. Integration - Pricing"
        ],
        "summary": "/loans/{loanId}/pricing/request-extension/{jobId}",
        "description": "Returns information about the status of a job to request a rate lock extension.",
        "operationId": "GetRequestExtensionStatus",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The job ID, obtained from calling `POST /loans/{loanId}/request-rate-lock`.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job info for the rate lock request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusDetails"
                }
              }
            }
          },
          "400": {
            "description": "The loanId or jobId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan or job not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/pricing/approve-extension": {
      "post": {
        "tags": [
          "23. Integration - Pricing"
        ],
        "summary": "/loans/{loanId}/pricing/approve-extension",
        "description": "Approves an lock extension request. Returns a job ID that can be used to check the status of the request.",
        "operationId": "ApproveExtension",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "A job ID for the get pricing actions request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/pricing/approve-extension/{jobId}": {
      "get": {
        "tags": [
          "23. Integration - Pricing"
        ],
        "summary": "/loans/{loanId}/pricing/approve-extension/{jobId}",
        "description": "Returns information about the status of a job to request a rate lock extension.",
        "operationId": "GetApproveExtensionStatus",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The job ID, obtained from calling `POST /loans/{loanId}/request-rate-lock`.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job info for the rate lock request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusDetails"
                }
              }
            }
          },
          "400": {
            "description": "The loanId or jobId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan or job not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/pricing/actions": {
      "post": {
        "tags": [
          "23. Integration - Pricing"
        ],
        "summary": "/loans/{loanId}/pricing/actions",
        "description": "Requests the current available pricing actions for a given loan and pricing quote",
        "operationId": "GetPricingActions",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "description": "Request body containing additional required data for the pricing actions request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PricingActionsInput"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "202": {
            "description": "A job ID for the get pricing actions request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/pricing/actions/{jobId}": {
      "get": {
        "tags": [
          "23. Integration - Pricing"
        ],
        "summary": "/loans/{loanId}/pricing/actions/{jobId}",
        "description": "Returns information about the status of a job to request a rate lock extension.",
        "operationId": "GetPricingActionsStatus",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The job ID, obtained from calling `POST /loans/{loanId}/actions`.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job info for the actions request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusDetails"
                }
              }
            }
          },
          "400": {
            "description": "The loanId or jobId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan or job not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/pricing/request-relock": {
      "post": {
        "tags": [
          "23. Integration - Pricing"
        ],
        "summary": "/loans/{loanId}/pricing/request-relock",
        "description": "Requests a relock. Returns a job ID that can be used to check the status of the request.",
        "operationId": "RequestRelock",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "description": "Quote id for the product/price to use when relocking",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestRelock"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "202": {
            "description": "A job ID for the relock request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid GUID or the loan or config are not fully prepared for rate locking."
          },
          "404": {
            "description": "Loan not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/pricing/request-relock/{jobId}": {
      "get": {
        "tags": [
          "23. Integration - Pricing"
        ],
        "summary": "/loans/{loanId}/pricing/request-relock/{jobId}",
        "description": "Returns information about the status of a job to relock a loan.",
        "operationId": "GetRelockStatus",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The job ID, obtained from calling `POST /loans/{loanId}/request-relock`.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job info for the relock request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusDetails"
                }
              }
            }
          },
          "400": {
            "description": "The loanId or jobId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan or job not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/pricing/approve-relock": {
      "post": {
        "tags": [
          "23. Integration - Pricing"
        ],
        "summary": "/loans/{loanId}/pricing/approve-relock",
        "description": "Approves a relock request. Returns a job ID that can be used to check the status of the request.",
        "operationId": "ApproveRelock",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "A job ID for the approve relock request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid GUID or the loan is not in a state to approve relock."
          },
          "404": {
            "description": "Loan not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/pricing/approve-relock/{jobId}": {
      "get": {
        "tags": [
          "23. Integration - Pricing"
        ],
        "summary": "/loans/{loanId}/pricing/approve-relock/{jobId}",
        "description": "Returns information about the status of a job to approve a relock request.",
        "operationId": "GetApproveRelockStatus",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The job ID, obtained from calling `POST /loans/{loanId}/approve-relock`.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job info for the approve relock request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusDetails"
                }
              }
            }
          },
          "400": {
            "description": "The loanId or jobId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan or job not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/pricing/request-reprice": {
      "post": {
        "tags": [
          "23. Integration - Pricing"
        ],
        "summary": "/loans/{loanId}/pricing/request-reprice",
        "description": "Requests a reprice for a loan using a specific quote.",
        "operationId": "RequestReprice",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "description": "request body containing additional required data for the reprice request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestRepriceInput"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "202": {
            "description": "A job ID for the get pricing actions request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/pricing/request-reprice/{jobId}": {
      "get": {
        "tags": [
          "23. Integration - Pricing"
        ],
        "summary": "/loans/{loanId}/pricing/request-reprice/{jobId}",
        "description": "Returns information about the status of a job to request a rate lock extension.",
        "operationId": "GetRequestRepriceStatus",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The job ID, obtained from calling `POST /loans/{loanId}/request-rate-lock`.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job info for the rate lock request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusDetails"
                }
              }
            }
          },
          "400": {
            "description": "The loanId or jobId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan or job not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/pricing/approve-reprice": {
      "post": {
        "tags": [
          "23. Integration - Pricing"
        ],
        "summary": "/loans/{loanId}/pricing/approve-reprice",
        "description": "Approves a reprice request for a loan.",
        "operationId": "ApproveReprice",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "A job ID for the approve reprice request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid GUID or no price has been determined for the loan."
          },
          "404": {
            "description": "Loan not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/pricing/approve-reprice/{jobId}": {
      "get": {
        "tags": [
          "23. Integration - Pricing"
        ],
        "summary": "/loans/{loanId}/pricing/approve-reprice/{jobId}",
        "description": "Retrieves the result of an approve reprice job.",
        "operationId": "GetApproveRepriceJobResult",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The job ID of the approve reprice request.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The result of the approve reprice job.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusDetails"
                }
              }
            }
          },
          "400": {
            "description": ""
          },
          "404": {
            "description": "Job not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/pricing/withdraw-request": {
      "post": {
        "tags": [
          "23. Integration - Pricing"
        ],
        "summary": "/loans/{loanId}/pricing/withdraw-request",
        "description": "Requests a withdrawal of pricing post lock action.",
        "operationId": "WithdrawPricingRequest",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "description": "The post lock action ID, this can be retrieved from the get pricing actions endpoint.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WithdrawPostLockPricingRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "202": {
            "description": "A job ID for the GetWithdrawPricingRequestStatus",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/pricing/withdraw-request/{jobId}": {
      "get": {
        "tags": [
          "23. Integration - Pricing"
        ],
        "summary": "/loans/{loanId}/pricing/withdraw-request/{jobId}",
        "description": "Returns information about the status of a job to withdraw a pricing post-lock action request",
        "operationId": "GetWithdrawPricingRequestStatus",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The job ID, obtained from calling `POST /loans/{loanId}/withdraw-request`.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job info for the withdraw request job",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusDetails"
                }
              }
            }
          },
          "400": {
            "description": "The loanId or jobId parameter is not a valid GUID."
          },
          "404": {
            "description": "Loan or job not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/property-valuations/{propertyValuationId}": {
      "get": {
        "tags": [
          "12. Entity - Property Valuations"
        ],
        "summary": "/loans/{loanId}/property-valuations/{propertyValuationId}",
        "description": "Gets a single property valuation by ID.",
        "operationId": "GetPropertyValuation",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan associated with the property valuation.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "propertyValuationId",
            "in": "path",
            "required": true,
            "description": "The ID of the property valuation to be returned.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the property valuation object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PropertyValuation"
                }
              }
            }
          },
          "400": {
            "description": "The loanId or propertyValuationId parameter is not a valid ID."
          },
          "404": {
            "description": "The property valuation requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "12. Entity - Property Valuations"
        ],
        "summary": "/loans/{loanId}/property-valuations/{propertyValuationId}",
        "description": "Patches an existing property valuation with the provided data.",
        "operationId": "PatchPropertyValuation",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan this property valuation is associated with.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "propertyValuationId",
            "in": "path",
            "required": true,
            "description": "The ID of the property valuation to be updated.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "input",
          "description": "Updated partial property valuation object.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PropertyValuation"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "Returns information about the updated entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResponse"
                }
              }
            }
          },
          "400": {
            "description": "The input was not well-formed."
          },
          "404": {
            "description": "The property valuation requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "12. Entity - Property Valuations"
        ],
        "summary": "/loans/{loanId}/property-valuations/{propertyValuationId}",
        "description": "Deletes a property valuation entity by ID and removes it from the loan.",
        "operationId": "DeletePropertyValuation",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan associated with the property valuation.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "propertyValuationId",
            "in": "path",
            "required": true,
            "description": "The ID of the property valuation to be deleted.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "The loanId or propertyValuationId parameter is not a valid ID."
          },
          "404": {
            "description": "The property valuation requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/property-valuations": {
      "get": {
        "tags": [
          "12. Entity - Property Valuations"
        ],
        "summary": "/loans/{loanId}/property-valuations",
        "description": "Gets the property valuations for the given loan.",
        "operationId": "GetPropertyValuations",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the loan's property valuation objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PropertyValuation"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid ID."
          },
          "404": {
            "description": "The loan requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "12. Entity - Property Valuations"
        ],
        "summary": "/loans/{loanId}/property-valuations",
        "description": "Creates a new property valuation object with the provided data.",
        "operationId": "PostPropertyValuation",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan this property valuation is associated with.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "input",
          "description": "The full property valuation data to be created. See the schema for more information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PropertyValuation"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Returns information about the created entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResponse"
                }
              }
            }
          },
          "400": {
            "description": "The input was not well-formed."
          },
          "404": {
            "description": "The specified loan was not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/prorations/{prorationId}": {
      "get": {
        "tags": [
          "13. Entity - Prorations"
        ],
        "summary": "/loans/{loanId}/prorations/{prorationId}",
        "description": "Gets a single proration by ID.",
        "operationId": "GetProration",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan associated with the proration.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "prorationId",
            "in": "path",
            "required": true,
            "description": "The ID of the proration to be returned.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the proration object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Proration"
                }
              }
            }
          },
          "400": {
            "description": "The loanId or prorationId parameter is not a valid ID."
          },
          "404": {
            "description": "The proration requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "13. Entity - Prorations"
        ],
        "summary": "/loans/{loanId}/prorations/{prorationId}",
        "description": "Patches an existing proration with the provided data.",
        "operationId": "PatchProration",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan this proration is associated with.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "prorationId",
            "in": "path",
            "required": true,
            "description": "The ID of the proration to be updated.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "input",
          "description": "Updated partial proration object.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Proration"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "Returns information about the updated entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResponse"
                }
              }
            }
          },
          "400": {
            "description": "The input was not well-formed."
          },
          "404": {
            "description": "The proration requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "13. Entity - Prorations"
        ],
        "summary": "/loans/{loanId}/prorations/{prorationId}",
        "description": "Deletes an proration entity by ID and removes it from the loan.",
        "operationId": "DeleteProration",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan associated with the proration.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "prorationId",
            "in": "path",
            "required": true,
            "description": "The ID of the proration to be deleted.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "The loanId or prorationId parameter is not a valid ID."
          },
          "404": {
            "description": "The proration requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/prorations": {
      "get": {
        "tags": [
          "13. Entity - Prorations"
        ],
        "summary": "/loans/{loanId}/prorations",
        "description": "Gets the prorations for the given loan.",
        "operationId": "GetProrations",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the loan's proration objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Proration"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid ID."
          },
          "404": {
            "description": "The loan requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "13. Entity - Prorations"
        ],
        "summary": "/loans/{loanId}/prorations",
        "description": "Creates a new proration object with the provided data.",
        "operationId": "PostProration",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan this proration is associated with.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "input",
          "description": "The full proration data to be created. See the schema for more information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Proration"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Returns information about the created entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResponse"
                }
              }
            }
          },
          "400": {
            "description": "The input was not well-formed."
          },
          "404": {
            "description": "The specified loan was not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/public-records/{publicRecordId}": {
      "get": {
        "tags": [
          "14. Entity - Public Records"
        ],
        "summary": "/loans/{loanId}/public-records/{publicRecordId}",
        "description": "Gets a single public record by ID.",
        "operationId": "GetPublicRecord",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan associated with the public record.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "publicRecordId",
            "in": "path",
            "required": true,
            "description": "The ID of the public record to be returned.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the public record object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicRecord"
                }
              }
            }
          },
          "400": {
            "description": "The loanId or publicRecordId parameter is not a valid ID."
          },
          "404": {
            "description": "The public record requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "14. Entity - Public Records"
        ],
        "summary": "/loans/{loanId}/public-records/{publicRecordId}",
        "description": "Patches an existing public record with the provided data.",
        "operationId": "PatchPublicRecord",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan this public record is associated with.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "publicRecordId",
            "in": "path",
            "required": true,
            "description": "The ID of the public record to be updated.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "input",
          "description": "Updated partial public record object.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicRecord"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "Returns information about the updated entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResponse"
                }
              }
            }
          },
          "400": {
            "description": "The input was not well-formed."
          },
          "404": {
            "description": "The public record requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "14. Entity - Public Records"
        ],
        "summary": "/loans/{loanId}/public-records/{publicRecordId}",
        "description": "Deletes a public record entity by ID and removes it from the loan.",
        "operationId": "DeletePublicRecord",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan associated with the public record.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "publicRecordId",
            "in": "path",
            "required": true,
            "description": "The ID of the public record to be deleted.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "The loanId or publicRecordId parameter is not a valid ID."
          },
          "404": {
            "description": "The public record requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/public-records": {
      "get": {
        "tags": [
          "14. Entity - Public Records"
        ],
        "summary": "/loans/{loanId}/public-records",
        "description": "Gets the public records for the given loan.",
        "operationId": "GetPublicRecords",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the loan's public record objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PublicRecord"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid ID."
          },
          "404": {
            "description": "The loan requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "14. Entity - Public Records"
        ],
        "summary": "/loans/{loanId}/public-records",
        "description": "Creates a new public record object with the provided data.",
        "operationId": "PostPublicRecord",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan this public record is associated with.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "input",
          "description": "The full public record data to be created. See the schema for more information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicRecord"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Returns information about the created entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResponse"
                }
              }
            }
          },
          "400": {
            "description": "The input was not well-formed."
          },
          "404": {
            "description": "The specified loan was not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/reporting/loans/{loanId}": {
      "get": {
        "tags": [
          "31. Reporting"
        ],
        "summary": "/reporting/loans/{loanId}",
        "description": "Get reporting events by loan ID",
        "operationId": "GetLoanReporting",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reporting events.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoanReportingResponse"
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid ID."
          },
          "404": {
            "description": "Loan not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/subject-property": {
      "get": {
        "tags": [
          "11. Entity - Properties"
        ],
        "summary": "/loans/{loanId}/subject-property",
        "description": "Gets a subject property",
        "operationId": "GetSubjectProperty",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan associated with the subject property.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the property object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Property"
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid ID."
          },
          "404": {
            "description": "The subject property requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "11. Entity - Properties"
        ],
        "summary": "/loans/{loanId}/subject-property",
        "description": "Patches a subject property with the provided data.",
        "operationId": "PatchSubjectProperty",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan this property is associated with.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "input",
          "description": "Updated partial subject property object.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Property"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Returns information about the updated entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResponse"
                }
              }
            }
          },
          "400": {
            "description": "The input was not well-formed."
          },
          "404": {
            "description": "The subject property does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/underwriter-decision/make-decision": {
      "post": {
        "tags": [
          "2. Entity - Loans"
        ],
        "summary": "/loans/{loanId}/underwriter-decision/make-decision",
        "description": "Makes an underwriting decision for a loan, using the provided user.",
        "operationId": "MakeUnderwriterDecision",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "description": "The request body, including the underwriter decision and other metadata.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnderwriterDecisionInput"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": "Successful requests return no content."
          },
          "400": {
            "description": "The input is invalid. The response text will include a descriptive error."
          },
          "404": {
            "description": "The loan or reviewer user was not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/underwriting-exceptions/{underwritingExceptionId}": {
      "get": {
        "tags": [
          "15. Entity - Underwriting Exceptions"
        ],
        "summary": "/loans/{loanId}/underwriting-exceptions/{underwritingExceptionId}",
        "description": "Gets a single underwriting exception record by ID.",
        "operationId": "GetUnderwritingException",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan associated with the underwriting exception.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "underwritingExceptionId",
            "in": "path",
            "required": true,
            "description": "The ID of the underwriting exception to be returned.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the underwriting exception object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnderwritingException"
                }
              }
            }
          },
          "400": {
            "description": "The loanId or underwritingExceptionId parameter is not a valid ID."
          },
          "404": {
            "description": "The underwriting exception requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "15. Entity - Underwriting Exceptions"
        ],
        "summary": "/loans/{loanId}/underwriting-exceptions/{underwritingExceptionId}",
        "description": "Patches an existing underwriting exception with the provided data.",
        "operationId": "PatchUnderwritingException",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan this underwriting exception is associated with.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "underwritingExceptionId",
            "in": "path",
            "required": true,
            "description": "The ID of the underwriting exception to be updated.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "input",
          "description": "Updated partial underwriting exception object.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnderwritingException"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "Returns information about the updated entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResponse"
                }
              }
            }
          },
          "400": {
            "description": "The input was not well-formed."
          },
          "404": {
            "description": "The underwriting exception requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "15. Entity - Underwriting Exceptions"
        ],
        "summary": "/loans/{loanId}/underwriting-exceptions/{underwritingExceptionId}",
        "description": "Deletes a underwriting exception entity by ID and removes it from the loan.",
        "operationId": "DeleteUnderwritingException",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan associated with the underwriting exception.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "underwritingExceptionId",
            "in": "path",
            "required": true,
            "description": "The ID of the underwriting exception to be deleted.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "The loanId or underwritingExceptionId parameter is not a valid ID."
          },
          "404": {
            "description": "The underwriting exception requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanId}/underwriting-exceptions": {
      "get": {
        "tags": [
          "15. Entity - Underwriting Exceptions"
        ],
        "summary": "/loans/{loanId}/underwriting-exceptions",
        "description": "Gets the underwriting exceptions for the given loan.",
        "operationId": "GetUnderwritingExceptions",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The loan ID.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the loan's underwriting exception objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnderwritingException"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The loanId parameter is not a valid ID."
          },
          "404": {
            "description": "The loan requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "15. Entity - Underwriting Exceptions"
        ],
        "summary": "/loans/{loanId}/underwriting-exceptions",
        "description": "Creates a new underwriting exception object with the provided data.",
        "operationId": "PostUnderwritingException",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "description": "The ID of the loan this underwriting exception is associated with.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "input",
          "description": "The full underwriting exception data to be created. See the schema for more information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnderwritingException"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Returns information about the created entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResponse"
                }
              }
            }
          },
          "400": {
            "description": "The input was not well-formed."
          },
          "404": {
            "description": "The specified loan was not found."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/users": {
      "get": {
        "tags": [
          "29. Users"
        ],
        "summary": "/users",
        "description": "Gets all users.",
        "operationId": "GetUsers",
        "parameters": [
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the list of User objects, or an empty list if none are found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserWithPipelineViews"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "29. Users"
        ],
        "summary": "/users",
        "description": "Creates a new user from the provided information.",
        "operationId": "PostNewUser",
        "parameters": [
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "input",
          "description": "The details of the user being created.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostUserInput"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Returns the created user object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "The input is malformed."
          },
          "409": {
            "description": "A user registered to this email address already exists."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": [
          "29. Users"
        ],
        "summary": "/users/{userId}",
        "description": "Gets a single user by ID.",
        "operationId": "GetUserById",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "The ID of the user to be returned.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "25.1",
              "enum": [
                "25.1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserWithPipelineViews"
                }
              }
            }
          },
          "400": {
            "description": "The userId parameter is not a valid ID."
          },
          "404": {
            "description": "The user requested does not exist."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AdditionalRefinanceBenefitType": {
        "type": "string",
        "example": "PreventLossDueToPreviousMortgage",
        "x-enumNames": [
          "PreventLossDueToPreviousMortgage",
          "ARMPaymentChangesHaveBeenConsidered",
          "Other",
          "ObtainNewLoanEvenIfTermsLessFavorable",
          "MortgageInsuranceRateSignificantlyReduced",
          "RemoveNegativeAmortization",
          "BonafidePersonalNeedOrCourtOrder",
          "ShortTimeToRecoupRefiCostsAndFees",
          "RecoupCostsAndReduceInterestRateOrTerm"
        ],
        "enum": [
          "PreventLossDueToPreviousMortgage",
          "ARMPaymentChangesHaveBeenConsidered",
          "Other",
          "ObtainNewLoanEvenIfTermsLessFavorable",
          "MortgageInsuranceRateSignificantlyReduced",
          "RemoveNegativeAmortization",
          "BonafidePersonalNeedOrCourtOrder",
          "ShortTimeToRecoupRefiCostsAndFees",
          "RecoupCostsAndReduceInterestRateOrTerm"
        ]
      },
      "Address": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "addressValidEnd": {
            "type": "string",
            "description": "End date",
            "format": "date",
            "nullable": true
          },
          "addressValidStart": {
            "type": "string",
            "description": "Start date",
            "format": "date",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "City",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "county": {
            "description": "County",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/County"
              },
              {
                "type": "null"
              }
            ]
          },
          "fipsCode": {
            "type": "string",
            "nullable": true
          },
          "fullStreetAddress": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "internationalIndicator": {
            "type": "boolean",
            "nullable": true
          },
          "isVerified": {
            "type": "boolean",
            "nullable": true
          },
          "landlordEmailAddress": {
            "type": "string",
            "description": "Landlord email address",
            "nullable": true
          },
          "landlordFullName": {
            "type": "string",
            "description": "Landlord full name",
            "nullable": true
          },
          "landlordPhoneNumber": {
            "type": "string",
            "description": "Landlord phone number",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "line": {
            "type": "string",
            "description": "Street address",
            "nullable": true
          },
          "line2": {
            "type": "string",
            "description": "Address line 2",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "monthlyRentAmount": {
            "type": "number",
            "description": "Monthly rent",
            "format": "decimal",
            "nullable": true
          },
          "numberOfUnits": {
            "type": "integer",
            "description": "Number of units in the address",
            "format": "int32",
            "nullable": true
          },
          "occupancyType": {
            "description": "Occupancy type",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/OccupancyType"
              }
            ]
          },
          "postalCode": {
            "type": "string",
            "description": "Postal code",
            "nullable": true
          },
          "province": {
            "type": "string",
            "description": "Province",
            "nullable": true
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          },
          "state": {
            "type": "string",
            "description": "State",
            "nullable": true
          },
          "stateCode": {
            "description": "State code",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/StateCode"
              }
            ]
          },
          "status": {
            "description": "Current or previous?",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AddressStatus"
              }
            ]
          },
          "types": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AddressType"
            }
          },
          "zipCode": {
            "type": "string",
            "description": "ZIP code",
            "nullable": true
          }
        }
      },
      "AddressStatus": {
        "type": "string",
        "example": "Current",
        "x-enumNames": [
          "Current",
          "Previous"
        ],
        "enum": [
          "Current",
          "Previous"
        ]
      },
      "AddressType": {
        "type": "string",
        "example": "Mailing",
        "x-enumNames": [
          "Mailing",
          "Residential",
          "Other"
        ],
        "enum": [
          "Mailing",
          "Residential",
          "Other"
        ]
      },
      "AdjustmentBasisIndex": {
        "type": "string",
        "example": "ThirtyDayAverageSOFR",
        "x-enumNames": [
          "ThirtyDayAverageSOFR",
          "FederalCostOfFunds",
          "MonthlyAverageCMT",
          "WeeklyAvePrimeRate",
          "WeeklyAverageCDRate",
          "WeeklyAverageCMT",
          "WeeklyAverageSMTI",
          "WeeklyAverageTAABD",
          "WeeklyAverageTAAI",
          "NinetyDayAverageSOFR",
          "OneHundredEightyDayAverageSOFR",
          "USOneMonthTreasury",
          "USThreeMonthTreasury",
          "USSixMonthTreasury",
          "USOneYearTreasury",
          "USThreeYearTreasury",
          "USFiveYearTreasury",
          "USTenYearTreasury"
        ],
        "enum": [
          "ThirtyDayAverageSOFR",
          "FederalCostOfFunds",
          "MonthlyAverageCMT",
          "WeeklyAvePrimeRate",
          "WeeklyAverageCDRate",
          "WeeklyAverageCMT",
          "WeeklyAverageSMTI",
          "WeeklyAverageTAABD",
          "WeeklyAverageTAAI",
          "NinetyDayAverageSOFR",
          "OneHundredEightyDayAverageSOFR",
          "USOneMonthTreasury",
          "USThreeMonthTreasury",
          "USSixMonthTreasury",
          "USOneYearTreasury",
          "USThreeYearTreasury",
          "USFiveYearTreasury",
          "USTenYearTreasury"
        ]
      },
      "AdminCategory": {
        "type": "string",
        "example": "Borrower",
        "x-enumNames": [
          "Borrower",
          "Credit",
          "Liability",
          "Income",
          "OwnedBusiness",
          "VOE",
          "Asset",
          "OwnedProperty",
          "TitleAndOwnership",
          "Appraisal",
          "HomeAndFloodInsurance",
          "Condo",
          "Loan",
          "PurchaseInformation",
          "FHA",
          "VA",
          "Disclosure",
          "Invoice",
          "Closing",
          "SubjectProperty",
          "FundingAndSecondary",
          "USDA",
          "Pricing"
        ],
        "enum": [
          "Borrower",
          "Credit",
          "Liability",
          "Income",
          "OwnedBusiness",
          "VOE",
          "Asset",
          "OwnedProperty",
          "TitleAndOwnership",
          "Appraisal",
          "HomeAndFloodInsurance",
          "Condo",
          "Loan",
          "PurchaseInformation",
          "FHA",
          "VA",
          "Disclosure",
          "Invoice",
          "Closing",
          "SubjectProperty",
          "FundingAndSecondary",
          "USDA",
          "Pricing"
        ]
      },
      "AffordableLoanDetails": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "fnmNeighborsMortgageEligibilityIndicator": {
            "type": "boolean",
            "description": "Is this loan eligible for the Fannie Mae Neighbors program?",
            "nullable": true
          },
          "hudIncomeLimitAdjustment": {
            "type": "number",
            "description": "The percentage by which the HUD Median Income can be exceeded in certain high cost areas.",
            "format": "decimal",
            "nullable": true
          },
          "hudLendingIncomeLimit": {
            "type": "number",
            "description": "The total dollar amount for HUD lending based on the median income and adjustment factors.",
            "format": "decimal",
            "nullable": true
          },
          "hudMedianIncomeAmount": {
            "type": "number",
            "description": "The HUD estimated median family incomes to determine borrower eligibility for all applications related to affordable lending products.",
            "format": "decimal",
            "nullable": true
          }
        }
      },
      "AffordableSecondLienRepaymentType": {
        "type": "string",
        "example": "DeferredFullyForgiven",
        "x-enumNames": [
          "DeferredFullyForgiven",
          "DeferredNotFullyForgiven",
          "NonDeferred",
          "Other"
        ],
        "enum": [
          "DeferredFullyForgiven",
          "DeferredNotFullyForgiven",
          "NonDeferred",
          "Other"
        ]
      },
      "AlternativeLoanLevelCreditScoreCalculationMethod": {
        "type": "string",
        "example": "LowestBorrowerMedian",
        "x-enumNames": [
          "LowestBorrowerMedian",
          "HighestBorrowerMedian",
          "BorrowerWithHighestIncomeMedian"
        ],
        "enum": [
          "LowestBorrowerMedian",
          "HighestBorrowerMedian",
          "BorrowerWithHighestIncomeMedian"
        ]
      },
      "AlternativeLoanOption": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "alternativeLoanOptionLender": {
            "type": "string",
            "description": "Name of the financial institution providing the loan",
            "nullable": true
          },
          "alternativeLoanOptionLoanAmortizationType": {
            "description": "Structure determining how principal and interest are paid over time",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanAmortizationType"
              }
            ]
          },
          "alternativeLoanOptionLoanDiscountPoints": {
            "type": "number",
            "description": "Upfront payment to reduce the loan's interest rate, expressed as a percentage of the loan amount",
            "format": "decimal",
            "nullable": true
          },
          "alternativeLoanOptionLoanFeatures": {
            "type": "array",
            "description": "Special characteristics or provisions that affect the loan's terms or repayment structure",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AlternativeLoanOptionFeature"
            }
          },
          "alternativeLoanOptionLoanOriginationFee": {
            "type": "number",
            "description": "Upfront fee charged by the lender or broker",
            "format": "decimal",
            "nullable": true
          },
          "alternativeLoanOptionLoanTermMonthsCount": {
            "type": "integer",
            "description": "Total duration of the loan expressed in months (e.g. 360 for a 30 year loan)",
            "nullable": true
          },
          "alternativeLoanOptionNoteRate": {
            "type": "number",
            "description": "Annual interest rate stated on the mortgage note",
            "format": "decimal",
            "nullable": true
          },
          "alternativeLoanOptionPrepaymentPenaltyAmount": {
            "type": "number",
            "description": "Fee charged for prepayment of principal",
            "format": "decimal",
            "nullable": true
          },
          "alternativeLoanOptionProgramName": {
            "type": "string",
            "description": "Product or program name used by the lender for this loan",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          }
        }
      },
      "AlternativeLoanOptionFeature": {
        "type": "string",
        "example": "BalloonPayment",
        "x-enumNames": [
          "BalloonPayment",
          "NegativeAmortization",
          "DemandFeature",
          "SharedEquity",
          "SharedAppreciation"
        ],
        "enum": [
          "BalloonPayment",
          "NegativeAmortization",
          "DemandFeature",
          "SharedEquity",
          "SharedAppreciation"
        ]
      },
      "AMBestRating": {
        "type": "string",
        "example": "APlusPlus",
        "x-enumNames": [
          "APlusPlus",
          "APlus",
          "A",
          "AMinus",
          "BPlusPlus",
          "BPlus",
          "B",
          "BMinus",
          "CPlusPlus",
          "CPlus",
          "C",
          "CMinus",
          "D",
          "E",
          "F",
          "S"
        ],
        "enum": [
          "APlusPlus",
          "APlus",
          "A",
          "AMinus",
          "BPlusPlus",
          "BPlus",
          "B",
          "BMinus",
          "CPlusPlus",
          "CPlus",
          "C",
          "CMinus",
          "D",
          "E",
          "F",
          "S"
        ]
      },
      "ApiVersion": {
        "title": "ApiVersion",
        "type": "string",
        "example": "experimental",
        "x-enumFlags": true,
        "x-enumNames": [
          "Experimental",
          "_244",
          "_251"
        ],
        "enum": [
          "experimental",
          "24.4",
          "25.1"
        ]
      },
      "ApplicationSubmitMethod": {
        "type": "string",
        "example": "Email",
        "x-enumNames": [
          "Email",
          "FaceToFace",
          "Fax",
          "Internet",
          "Mail",
          "Telephone"
        ],
        "enum": [
          "Email",
          "FaceToFace",
          "Fax",
          "Internet",
          "Mail",
          "Telephone"
        ]
      },
      "ApplyEstimationOverwriteRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "confirmedDisbursementTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EscrowDisbursementType"
            }
          }
        }
      },
      "ApplyEstimationResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "isUpdated": {
            "type": "boolean",
            "readOnly": true
          },
          "updatesToConfirm": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ApplyEstimationUpdate"
            }
          }
        }
      },
      "ApplyEstimationUpdate": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "disbursementType": {
            "readOnly": true,
            "$ref": "#/components/schemas/EscrowDisbursementType"
          },
          "totalAnnualAmount": {
            "type": "number",
            "readOnly": true,
            "format": "decimal"
          },
          "totalAnnualAmountEstimate": {
            "type": "number",
            "readOnly": true,
            "format": "decimal"
          }
        }
      },
      "AppraisalOrderStatus": {
        "type": "string",
        "example": "Pending",
        "x-enumNames": [
          "Pending",
          "OrderReceived",
          "Accepted",
          "Declined",
          "InspectionScheduled",
          "InspectionCompleted",
          "Completed",
          "OnHold",
          "Delayed",
          "Cancelled",
          "Error",
          "Other",
          "RequestedRevision",
          "RequestedReconsideration",
          "Approved",
          "ApprovedWithConditions",
          "AssignedToProvider",
          "DraftNotAcceptable",
          "DraftReceived",
          "CollateralSubmissionError",
          "Exception",
          "SubmittedToCollateralDataPortal",
          "AcceptWithConditions",
          "ReadyForReview",
          "ReviewInProcess"
        ],
        "enum": [
          "Pending",
          "OrderReceived",
          "Accepted",
          "Declined",
          "InspectionScheduled",
          "InspectionCompleted",
          "Completed",
          "OnHold",
          "Delayed",
          "Cancelled",
          "Error",
          "Other",
          "RequestedRevision",
          "RequestedReconsideration",
          "Approved",
          "ApprovedWithConditions",
          "AssignedToProvider",
          "DraftNotAcceptable",
          "DraftReceived",
          "CollateralSubmissionError",
          "Exception",
          "SubmittedToCollateralDataPortal",
          "AcceptWithConditions",
          "ReadyForReview",
          "ReviewInProcess"
        ]
      },
      "AppraisalPaymentStatus": {
        "type": "string",
        "example": "Unpaid",
        "x-enumNames": [
          "Unpaid",
          "PaymentReceived",
          "PaymentDeclined",
          "RefundIssued",
          "NoAmountDue",
          "Other"
        ],
        "enum": [
          "Unpaid",
          "PaymentReceived",
          "PaymentDeclined",
          "RefundIssued",
          "NoAmountDue",
          "Other"
        ]
      },
      "AppraisalPropertyCondition": {
        "type": "string",
        "example": "C1",
        "x-enumNames": [
          "C1",
          "C2",
          "C3",
          "C4",
          "C5",
          "C6"
        ],
        "enum": [
          "C1",
          "C2",
          "C3",
          "C4",
          "C5",
          "C6"
        ]
      },
      "AppraisalSource": {
        "type": "string",
        "example": "CoreLogic",
        "x-enumNames": [
          "CoreLogic",
          "Email",
          "UploadedUADXml",
          "ValueLink",
          "Manual",
          "CMS",
          "Reggora"
        ],
        "enum": [
          "CoreLogic",
          "Email",
          "UploadedUADXml",
          "ValueLink",
          "Manual",
          "CMS",
          "Reggora"
        ]
      },
      "AppraisalWaiver": {
        "type": "string",
        "example": "FnmaPiw",
        "x-enumNames": [
          "FnmaPiw",
          "FmacAce"
        ],
        "enum": [
          "FnmaPiw",
          "FmacAce"
        ]
      },
      "AppraiserCompany": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "appraiserLicenseNumber": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "city": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "contactType": {
            "readOnly": true,
            "$ref": "#/components/schemas/AppraiserContactType"
          },
          "email": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "phone": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "state": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "streetAddress": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          }
        }
      },
      "AppraiserContactType": {
        "type": "string",
        "example": "Appraiser",
        "x-enumNames": [
          "Appraiser",
          "AppraisalManagementCompany"
        ],
        "enum": [
          "Appraiser",
          "AppraisalManagementCompany"
        ]
      },
      "ArchiveReasonCategory": {
        "type": "string",
        "example": "Illegible",
        "x-enumNames": [
          "Illegible",
          "Incomplete",
          "WrongDocument",
          "NotAMortgageDocument",
          "ReplacedWithNewVersion",
          "Duplicate",
          "AssociatedToDifferentAspect",
          "Other",
          "MergedIntoNewDocument",
          "SplitIntoNewDocuments",
          "EntityDeleted",
          "DocumentExpired"
        ],
        "enum": [
          "Illegible",
          "Incomplete",
          "WrongDocument",
          "NotAMortgageDocument",
          "ReplacedWithNewVersion",
          "Duplicate",
          "AssociatedToDifferentAspect",
          "Other",
          "MergedIntoNewDocument",
          "SplitIntoNewDocuments",
          "EntityDeleted",
          "DocumentExpired"
        ]
      },
      "Asset": {
        "type": "object",
        "description": "The asset model.",
        "example": {
          "assetType": "SavingsAccount",
          "institutionName": "Chase",
          "assetValue": 239839,
          "accountIdentifier": "2245",
          "usableFundsAmount": 239839
        },
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "accountIdentifier": {
            "type": "string",
            "description": "Unique identifier if the asset is an account, typically last 4 digits of account number",
            "nullable": true
          },
          "accountOpenedDate": {
            "type": "string",
            "description": "Total funds usable for this loan transaction",
            "format": "date",
            "nullable": true
          },
          "amountUsedTowardsClosing": {
            "type": "number",
            "description": "The amount this asset will contribute to the cash to close the loan",
            "format": "decimal",
            "nullable": true
          },
          "assetDescription": {
            "type": "string",
            "description": "Description of asset, most often used for stocks/bonds",
            "nullable": true
          },
          "assetType": {
            "description": "A value from a MISMO prescribed list that specifies financial assets in a mortgage loan transaction.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AssetType"
              }
            ]
          },
          "assetValue": {
            "type": "number",
            "description": "The value of the asset, regardless of liquidity",
            "format": "decimal",
            "nullable": true
          },
          "associatedBusiness": {
            "writeOnly": true,
            "description": "This is a reference to the borrower-owned business that holds thsi asset, if it is a business asset",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BorrowerBusiness"
              }
            ]
          },
          "associatedBusinessId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "associatedBusinessRef": {
            "type": "string",
            "nullable": true
          },
          "borrowers": {
            "type": "array",
            "writeOnly": true,
            "description": "This is an array of references to the borrowers who are account holders on this asset",
            "items": {
              "$ref": "#/components/schemas/Borrower"
            }
          },
          "borrowersIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "guid"
            }
          },
          "borrowersRefs": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "capitalGainsIncome": {
            "writeOnly": true,
            "description": "The capital gains income that is associated with this account, if applicable",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Income"
              }
            ]
          },
          "capitalGainsIncomeId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "capitalGainsIncomeRef": {
            "type": "string",
            "nullable": true
          },
          "computedFields": {
            "type": "object",
            "x-ms-dynamic-schema": {
              "operationId": "GetDynamicSchema",
              "parameters": {
                "entityType": "Asset",
                "fieldType": "ComputedField",
                "processVersionId": {
                  "parameterResponseReference": "processVersionId"
                }
              }
            },
            "readOnly": true,
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "customFields": {
            "type": "object",
            "x-ms-dynamic-schema": {
              "operationId": "GetDynamicSchema",
              "parameters": {
                "entityType": "Asset",
                "fieldType": "CustomField",
                "processVersionId": {
                  "parameterResponseReference": "processVersionId"
                }
              }
            },
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "facts": {
            "type": "object",
            "x-ms-dynamic-schema": {
              "operationId": "GetDynamicSchema",
              "parameters": {
                "entityType": "Asset",
                "fieldType": "Fact",
                "processVersionId": {
                  "parameterResponseReference": "processVersionId"
                }
              }
            },
            "readOnly": true,
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "gifterOrGranterAddress": {
            "description": "The address of the person providing the gift",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ]
          },
          "gifterOrGranterEIN": {
            "type": "string",
            "description": "Donor employee identification number",
            "nullable": true
          },
          "gifterOrGranterName": {
            "type": "string",
            "description": "Full name of the person providing the gift",
            "nullable": true
          },
          "gifterOrGranterPhoneNumber": {
            "type": "string",
            "description": "The phone number of the person providing the gift",
            "nullable": true
          },
          "giftOrGrantDateOfTransfer": {
            "type": "string",
            "description": "The date the gift funds were transferred into the borrower's account",
            "format": "date",
            "nullable": true
          },
          "giftOrGrantIncludedInAssetAccount": {
            "type": "boolean",
            "description": "Indicates whether the gift funds have already been included as part of an asset account considered for the loan",
            "nullable": true
          },
          "giftOrGrantIsSellerFunded": {
            "type": "boolean",
            "description": "Indicates whether the gift is funded by the seller",
            "nullable": true
          },
          "giftOrGrantSource": {
            "description": "Relationship of the gift source to the borrower",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/GiftSource"
              }
            ]
          },
          "hasLargeDeposits": {
            "type": "boolean",
            "readOnly": true,
            "description": "Are there any large deposits in notable activities",
            "nullable": true
          },
          "hasOverdrafts": {
            "type": "boolean",
            "readOnly": true,
            "description": "Are there any overdrafts in notable activities",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "institutionAddress": {
            "description": "The address of the institution",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ]
          },
          "institutionEmailAddress": {
            "type": "string",
            "description": "The best email address to contact the institution",
            "nullable": true
          },
          "institutionName": {
            "type": "string",
            "description": "Financial institution holding the funding source, typically if it is an account of some kind",
            "nullable": true
          },
          "institutionPhoneNumber": {
            "type": "string",
            "description": "The best phone number to contact the institution",
            "nullable": true
          },
          "interestAndDividendsIncome": {
            "writeOnly": true,
            "description": "The interest and dividends income that is associated with this account, if applicable",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Income"
              }
            ]
          },
          "interestAndDividendsIncomeId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "interestAndDividendsIncomeRef": {
            "type": "string",
            "nullable": true
          },
          "isLiquidAsset": {
            "type": "boolean",
            "description": "Is this asset liquid?",
            "nullable": true
          },
          "liabilityAsCollateral": {
            "writeOnly": true,
            "description": "This is a liability that is using this asset as collateral",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Liability"
              }
            ]
          },
          "liabilityAsCollateralId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "liabilityAsCollateralRef": {
            "type": "string",
            "nullable": true
          },
          "nonBorrowerAccountHolderNames": {
            "type": "array",
            "description": "This is an array of full names of account holders who are not on the subject loan",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "notableActivities": {
            "type": "array",
            "description": "List of large deposits and NSFs/overdrafts that have been observed in the account and need to be explained",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/BankTransaction"
            }
          },
          "numberOfOptions": {
            "type": "integer",
            "description": "The number of vested stock options",
            "format": "int32",
            "nullable": true
          },
          "otherAssetType": {
            "type": "string",
            "description": "Further description of the asset type if it is not in the prescribed list",
            "nullable": true
          },
          "otherGiftOrGrantSource": {
            "type": "string",
            "description": "Further description of the gifter's relationship if not in the list of gift sources",
            "nullable": true
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          },
          "retirementIncome": {
            "writeOnly": true,
            "description": "The retirement income that is associated with this account, if applicable",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Income"
              }
            ]
          },
          "retirementIncomeId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "retirementIncomeRef": {
            "type": "string",
            "nullable": true
          },
          "stockOptionCurrentPrice": {
            "type": "number",
            "description": "The current price per share of the underlying stock for these vested stock options",
            "format": "decimal",
            "nullable": true
          },
          "stockOptionExercisePrice": {
            "type": "number",
            "description": "The price per share at which these vested stock options can be exercised into the underlying stock",
            "format": "decimal",
            "nullable": true
          },
          "trusteeName": {
            "type": "string",
            "description": "The legal name of the trustee for a trust account asset",
            "nullable": true
          },
          "usableFundsAmount": {
            "type": "number",
            "description": "Funds usable for this loan transaction, used for underwriting.",
            "format": "decimal",
            "nullable": true
          }
        }
      },
      "AssetType": {
        "type": "string",
        "example": "Bond",
        "x-enumNames": [
          "Bond",
          "BridgeLoanNotDeposited",
          "CertificateOfDepositTimeDeposit",
          "CheckingAccount",
          "IndividualDevelopmentAccount",
          "LifeInsurance",
          "MoneyMarketFund",
          "MutualFund",
          "RetirementFund",
          "SavingsAccount",
          "Stock",
          "StockOptions",
          "TrustAccount",
          "CashOnHand",
          "Other",
          "PendingNetSaleProceedsFromRealEstateAssets",
          "ProceedsFromSaleOfNonRealEstateAsset",
          "ProceedsFromSecuredLoan",
          "ProceedsFromUnsecuredLoan",
          "GiftOfCash",
          "Grant"
        ],
        "enum": [
          "Bond",
          "BridgeLoanNotDeposited",
          "CertificateOfDepositTimeDeposit",
          "CheckingAccount",
          "IndividualDevelopmentAccount",
          "LifeInsurance",
          "MoneyMarketFund",
          "MutualFund",
          "RetirementFund",
          "SavingsAccount",
          "Stock",
          "StockOptions",
          "TrustAccount",
          "CashOnHand",
          "Other",
          "PendingNetSaleProceedsFromRealEstateAssets",
          "ProceedsFromSaleOfNonRealEstateAsset",
          "ProceedsFromSecuredLoan",
          "ProceedsFromUnsecuredLoan",
          "GiftOfCash",
          "Grant"
        ]
      },
      "AssignableRole": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "roleId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "routingMethod": {
            "readOnly": true,
            "$ref": "#/components/schemas/LoanStageRoutingMethod"
          }
        }
      },
      "AssignedUsersInput": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "userIds"
        ],
        "properties": {
          "loanOriginatorId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "guid"
            }
          }
        }
      },
      "AssociateDocumentToConditionInput": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "documentId"
        ],
        "properties": {
          "documentId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "AusInstitution": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "partyType": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          }
        }
      },
      "AUSResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "aus": {
            "readOnly": true,
            "$ref": "#/components/schemas/AutomatedUnderwritingSystem"
          },
          "caseIdentifier": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "creditPullReferenceIds": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "initiatedAt": {
            "type": "string",
            "readOnly": true,
            "format": "date-time"
          },
          "otherResult": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "result": {
            "readOnly": true,
            "$ref": "#/components/schemas/AutomatedUnderwritingResult"
          },
          "vestaRequestId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          }
        }
      },
      "AuthMethod": {
        "type": "string",
        "example": "Basic",
        "x-enumNames": [
          "Basic",
          "SSO",
          "None"
        ],
        "enum": [
          "Basic",
          "SSO",
          "None"
        ]
      },
      "AutomatedActionStatus": {
        "type": "string",
        "example": "Ready",
        "x-enumNames": [
          "Ready",
          "RelevantNotReady",
          "InProgress",
          "Completed",
          "Failed",
          "Cancelled"
        ],
        "enum": [
          "Ready",
          "RelevantNotReady",
          "InProgress",
          "Completed",
          "Failed",
          "Cancelled"
        ]
      },
      "AutomatedActionType": {
        "type": "string",
        "example": "CreditPull",
        "x-enumNames": [
          "CreditPull",
          "EnableComplianceMonitoring",
          "Aus",
          "IncomeVerification",
          "ApproveRateLock",
          "OrderFloodCertificate",
          "RegisterWithMers",
          "OrderFraudReport",
          "UndisclosedDebtMonitor",
          "SendNoticeOfIncompleteness",
          "MortgageInsurance",
          "PushToServicingPlatform",
          "SubmitUcd",
          "InvestorQualityCheck",
          "OrderAppraisal",
          "ArchiveLoan",
          "ScenarioChange",
          "SendAdverseActionNotice",
          "TransitionLoanStage",
          "SendInitialDisclosure",
          "SendClosingDisclosure",
          "CancelAppraisal",
          "AddressVerification",
          "PullClosingCosts",
          "ApproveRateLockExtension",
          "ApprovePriceConcession",
          "ExtendRateLock",
          "CancelRateLock",
          "ApproveRelock",
          "ApproveReprice",
          "ApplyExpenseEstimation",
          "OrderTitle",
          "OrderMortgageInsurance",
          "CancelTitleOrder",
          "Reprice",
          "RunComplianceCheck",
          "RunFHACaseQuery",
          "RunFHACAIVRS",
          "RequestFHACaseNumber",
          "FHARefinanceAuthorization",
          "FHAAppraisalLogging",
          "CancelFHACase",
          "SubmitFHAInsuranceApplication",
          "ArchiveDocument",
          "DecisionLoan",
          "Submit4506C",
          "Update4506C",
          "Cancel4506C",
          "DynamicallyTransitionLoanStage",
          "SubmitIlapld"
        ],
        "enum": [
          "CreditPull",
          "EnableComplianceMonitoring",
          "Aus",
          "IncomeVerification",
          "ApproveRateLock",
          "OrderFloodCertificate",
          "RegisterWithMers",
          "OrderFraudReport",
          "UndisclosedDebtMonitor",
          "SendNoticeOfIncompleteness",
          "MortgageInsurance",
          "PushToServicingPlatform",
          "SubmitUcd",
          "InvestorQualityCheck",
          "OrderAppraisal",
          "ArchiveLoan",
          "ScenarioChange",
          "SendAdverseActionNotice",
          "TransitionLoanStage",
          "SendInitialDisclosure",
          "SendClosingDisclosure",
          "CancelAppraisal",
          "AddressVerification",
          "PullClosingCosts",
          "ApproveRateLockExtension",
          "ApprovePriceConcession",
          "ExtendRateLock",
          "CancelRateLock",
          "ApproveRelock",
          "ApproveReprice",
          "ApplyExpenseEstimation",
          "OrderTitle",
          "OrderMortgageInsurance",
          "CancelTitleOrder",
          "Reprice",
          "RunComplianceCheck",
          "RunFHACaseQuery",
          "RunFHACAIVRS",
          "RequestFHACaseNumber",
          "FHARefinanceAuthorization",
          "FHAAppraisalLogging",
          "CancelFHACase",
          "SubmitFHAInsuranceApplication",
          "ArchiveDocument",
          "DecisionLoan",
          "Submit4506C",
          "Update4506C",
          "Cancel4506C",
          "DynamicallyTransitionLoanStage",
          "SubmitIlapld"
        ]
      },
      "AutomatedActionWebhook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "entityId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "entityType": {
            "type": "string",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "loanChannel": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanChannel"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "retries": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "sourceType": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSourceType"
          },
          "templateId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "templateName": {
            "type": "string",
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSubscriptionType"
          },
          "userId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "version": {
            "readOnly": true,
            "$ref": "#/components/schemas/ApiVersion"
          }
        }
      },
      "AutomatedUnderwritingPolicy": {
        "type": "string",
        "example": "DesktopUnderwriterOrDesktopOriginator",
        "x-enumNames": [
          "DesktopUnderwriterOrDesktopOriginator",
          "LoanProductAdvisor",
          "Manual",
          "GuaranteedUnderwritingSystem",
          "Other"
        ],
        "enum": [
          "DesktopUnderwriterOrDesktopOriginator",
          "LoanProductAdvisor",
          "Manual",
          "GuaranteedUnderwritingSystem",
          "Other"
        ]
      },
      "AutomatedUnderwritingResult": {
        "type": "string",
        "example": "AcceptEligible",
        "x-enumNames": [
          "AcceptEligible",
          "AcceptIneligible",
          "CautionEligible",
          "CautionIneligible",
          "Invalid",
          "OutOfScope",
          "Error",
          "Other"
        ],
        "enum": [
          "AcceptEligible",
          "AcceptIneligible",
          "CautionEligible",
          "CautionIneligible",
          "Invalid",
          "OutOfScope",
          "Error",
          "Other"
        ]
      },
      "AutomatedUnderwritingSystem": {
        "type": "string",
        "example": "DesktopUnderwriter",
        "x-enumNames": [
          "DesktopUnderwriter",
          "DesktopOriginator",
          "LoanProductAdvisor",
          "GuaranteedUnderwritingSystem",
          "Other"
        ],
        "enum": [
          "DesktopUnderwriter",
          "DesktopOriginator",
          "LoanProductAdvisor",
          "GuaranteedUnderwritingSystem",
          "Other"
        ]
      },
      "AvailablePackageTypeResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "alias": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "alternatePackageNumber": {
            "type": "integer",
            "readOnly": true,
            "format": "int32",
            "nullable": true
          },
          "isVestaStandardPackageType": {
            "type": "boolean",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "AVMIndexType": {
        "type": "string",
        "example": "CoreLogic",
        "x-enumNames": [
          "CoreLogic",
          "FederalHousingFinanceAdministration",
          "LenderProcessingServices",
          "NationalAssociationRealtorsPendingHomeSale",
          "StandardsPoorCaseShiller",
          "Other"
        ],
        "enum": [
          "CoreLogic",
          "FederalHousingFinanceAdministration",
          "LenderProcessingServices",
          "NationalAssociationRealtorsPendingHomeSale",
          "StandardsPoorCaseShiller",
          "Other"
        ]
      },
      "AVMMethodType": {
        "type": "string",
        "example": "Assisted",
        "x-enumNames": [
          "Assisted",
          "HedonicModel",
          "Hybrid",
          "Interactive",
          "RepeatSalesModel",
          "Other"
        ],
        "enum": [
          "Assisted",
          "HedonicModel",
          "Hybrid",
          "Interactive",
          "RepeatSalesModel",
          "Other"
        ]
      },
      "AVMModelNameType": {
        "type": "string",
        "example": "Other",
        "x-enumNames": [
          "Other",
          "AutomatedPropertyService",
          "AVMax",
          "Casa",
          "CAValue",
          "CollateralMarketValue",
          "CollateralValuationModel",
          "HomePriceAnalyzer",
          "HomeValueExplorer",
          "IntellirealAVM",
          "IVal",
          "Pass",
          "PowerBase6",
          "RealAssessment",
          "RealtorValuationModel",
          "Relar",
          "SiteXValue",
          "ValueFinder",
          "ValuePoint",
          "ValuePoint4",
          "ValuePointPlus",
          "ValueSure",
          "VeroIndexPlus",
          "VeroValue",
          "VeroValueAdvantage",
          "VeroValuePreferred",
          "ValueWizard",
          "ValueWizardPlus",
          "FidelityHansen",
          "HomePriceIndex",
          "Indicator",
          "NetValue",
          "PropertySurveyAnalysisReport"
        ],
        "enum": [
          "Other",
          "AutomatedPropertyService",
          "AVMax",
          "Casa",
          "CAValue",
          "CollateralMarketValue",
          "CollateralValuationModel",
          "HomePriceAnalyzer",
          "HomeValueExplorer",
          "IntellirealAVM",
          "IVal",
          "Pass",
          "PowerBase6",
          "RealAssessment",
          "RealtorValuationModel",
          "Relar",
          "SiteXValue",
          "ValueFinder",
          "ValuePoint",
          "ValuePoint4",
          "ValuePointPlus",
          "ValueSure",
          "VeroIndexPlus",
          "VeroValue",
          "VeroValueAdvantage",
          "VeroValuePreferred",
          "ValueWizard",
          "ValueWizardPlus",
          "FidelityHansen",
          "HomePriceIndex",
          "Indicator",
          "NetValue",
          "PropertySurveyAnalysisReport"
        ]
      },
      "AVMOutcomeType": {
        "type": "string",
        "example": "IndicatedValue",
        "x-enumNames": [
          "IndicatedValue",
          "NetValue",
          "Other"
        ],
        "enum": [
          "IndicatedValue",
          "NetValue",
          "Other"
        ]
      },
      "Bankruptcy": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "bankruptcyCaseNumber": {
            "type": "string",
            "description": "The court-issued case number associated with the bankruptcy filing being reported.",
            "nullable": true
          },
          "bankruptcyChapterType": {
            "description": "The chapter under which the borrower filed their most recent bankruptcy",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BankruptcyChapterType"
              }
            ]
          },
          "bankruptcyCloseDate": {
            "type": "string",
            "description": "The date on which the bankruptcy case was closed",
            "format": "date",
            "nullable": true
          },
          "bankruptcyClosedType": {
            "description": "Whether the borrower's most recent bankruptcy was discharged or dismissed",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BankruptcyClosedType"
              }
            ]
          },
          "bankruptcyDischargedMortgageObligationIndicator": {
            "type": "boolean",
            "description": "Whether the borrower's bankruptcy discharged a mortgage obligation",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          }
        }
      },
      "BankruptcyChapterType": {
        "type": "string",
        "example": "ChapterEleven",
        "x-enumNames": [
          "ChapterEleven",
          "ChapterSeven",
          "ChapterThirteen",
          "ChapterTwelve"
        ],
        "enum": [
          "ChapterEleven",
          "ChapterSeven",
          "ChapterThirteen",
          "ChapterTwelve"
        ]
      },
      "BankruptcyClosedType": {
        "type": "string",
        "example": "Discharged",
        "x-enumNames": [
          "Discharged",
          "Dismissed"
        ],
        "enum": [
          "Discharged",
          "Dismissed"
        ]
      },
      "BankTransaction": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "activityType": {
            "description": "The type of activity for this transaction",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BankTransactionActivityType"
              }
            ]
          },
          "amount": {
            "type": "number",
            "description": "Amount debited or credited in the transaction. This should always be a positive value",
            "format": "decimal",
            "nullable": true
          },
          "date": {
            "type": "string",
            "description": "Date that the transaction was posted",
            "format": "date",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The transaction description as provided by the financial institution",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          },
          "sourcedAmount": {
            "type": "number",
            "description": "The sourced portion of a large deposit.",
            "format": "decimal",
            "nullable": true
          },
          "unsourcedAmount": {
            "type": "number",
            "readOnly": true,
            "description": "The unsourced portion of a large deposit.",
            "format": "decimal",
            "nullable": true
          }
        }
      },
      "BankTransactionActivityType": {
        "type": "string",
        "example": "Overdraft",
        "x-enumNames": [
          "Overdraft",
          "LargeDeposit"
        ],
        "enum": [
          "Overdraft",
          "LargeDeposit"
        ]
      },
      "Borrower": {
        "type": "object",
        "description": "The borrower model.",
        "example": {
          "firstName": "Alice",
          "lastName": "Freddie",
          "emailAddress": "alicetest@vestatech.io",
          "citizenshipType": "USCitizen",
          "intentToOccupy": true,
          "firstTimeHomebuyerIndicator": true
        },
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "addresses": {
            "type": "array",
            "description": "The borrower's previous residential addresses, with at least two years of history expected",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "ageAsOfClosing": {
            "type": "integer",
            "readOnly": true,
            "description": "The borrower's age as of the closing date on the loan",
            "format": "int32",
            "nullable": true
          },
          "aliases": {
            "type": "array",
            "description": "A list of all of the other full names a borrower might go by/that might appear on other documents",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "allTimeFirstTimeHomeBuyerIndicator": {
            "type": "boolean",
            "description": "Indicates whether the borrower has ever purchased a home in their lifetime (which is different than the first time home buyer indicator which only assesses the past 3 years).",
            "nullable": true
          },
          "applicationSubmitDate": {
            "type": "string",
            "description": "The date on which the borrower submitted their application",
            "format": "date-time",
            "nullable": true
          },
          "applicationSubmitMethod": {
            "description": "How the borrower submitted their application (online, phone, etc)",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ApplicationSubmitMethod"
              }
            ]
          },
          "assets": {
            "type": "array",
            "writeOnly": true,
            "items": {
              "$ref": "#/components/schemas/Asset"
            }
          },
          "assetsIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "guid"
            }
          },
          "assetsRefs": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "bankruptcies": {
            "type": "array",
            "description": "Bankruptcies",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Bankruptcy"
            }
          },
          "bankruptcyCount": {
            "type": "integer",
            "readOnly": true,
            "description": "The number of bankruptcies the borrower has declared in the last 7 years",
            "nullable": true
          },
          "bankruptcyIndicator": {
            "type": "boolean",
            "description": "Whether the borrower declares they declared bankruptcy in the last 7 years",
            "nullable": true
          },
          "bankruptcyLatestCloseDate": {
            "type": "string",
            "readOnly": true,
            "description": "The date on which the borrower's most recent bankruptcy case was closed",
            "format": "date",
            "nullable": true
          },
          "borrowerBusinesses": {
            "type": "array",
            "writeOnly": true,
            "items": {
              "$ref": "#/components/schemas/BorrowerBusiness"
            }
          },
          "borrowerBusinessesIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "guid"
            }
          },
          "borrowerBusinessesRefs": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "borrowerHasCoBorrowingSpouse": {
            "type": "boolean",
            "readOnly": true,
            "description": "Has a co-borrowing spouse"
          },
          "borrowerOnPreviousMortgageIndicator": {
            "type": "boolean",
            "description": "Indicates whether this borrower was a borrower on the previous mortgage that is being refinanced.",
            "nullable": true
          },
          "caivrsIdentifier": {
            "type": "string",
            "description": "The borrower's unique identifier in HUD's CAIVRS system",
            "nullable": true
          },
          "citizenshipType": {
            "description": "The borrower's citizenship status with respect to the United States",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CitizenshipType"
              }
            ]
          },
          "computedFields": {
            "type": "object",
            "x-ms-dynamic-schema": {
              "operationId": "GetDynamicSchema",
              "parameters": {
                "entityType": "Borrower",
                "fieldType": "ComputedField",
                "processVersionId": {
                  "parameterResponseReference": "processVersionId"
                }
              }
            },
            "readOnly": true,
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "concurrentFinancings": {
            "type": "array",
            "writeOnly": true,
            "items": {
              "$ref": "#/components/schemas/ConcurrentFinancing"
            }
          },
          "concurrentFinancingsIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "guid"
            }
          },
          "concurrentFinancingsRefs": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "countryOfCitizenship": {
            "type": "string",
            "description": "The borrower's country of citizenship, if they are not a citizen of the United States",
            "nullable": true
          },
          "creditConsentOptionType": {
            "description": "The type of credit pull the borrower has consented to, hard or soft",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CreditPullType"
              }
            ]
          },
          "creditInquiries": {
            "type": "array",
            "writeOnly": true,
            "items": {
              "$ref": "#/components/schemas/CreditInquiry"
            }
          },
          "creditInquiriesIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "guid"
            }
          },
          "creditInquiriesRefs": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "creditProvider": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CreditExternalProviderType"
              }
            ]
          },
          "creditPulledDate": {
            "type": "string",
            "description": "The date on which the borrower's credit was pulled",
            "format": "date-time",
            "nullable": true
          },
          "creditPullReportType": {
            "description": "Credit pull report type -- Merge, MergePlus, etc.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CreditPullReportType"
              }
            ]
          },
          "creditPullStatus": {
            "description": "The current status of the most recent credit pull report",
            "$ref": "#/components/schemas/CreditPullStatus"
          },
          "creditPullType": {
            "description": "Hard or soft credit pull",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CreditPullType"
              }
            ]
          },
          "creditReferenceNumber": {
            "type": "string",
            "description": "Reference number for the credit report, used to refresh the report, provided to DU/LPA, etc",
            "nullable": true
          },
          "creditReportIssuedDate": {
            "type": "string",
            "readOnly": true,
            "description": "The date the credit report was issued, updated only with a new credit pull but not with retrievals or upgrades.",
            "format": "date",
            "nullable": true
          },
          "creditReportType": {
            "description": "Credit request type - joint or individual",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CreditPullRequestType"
              }
            ]
          },
          "creditScores": {
            "type": "array",
            "description": "List of the credit scores provided by the various bureaus on the borrower",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CreditScore"
            }
          },
          "currentAddress": {
            "description": "The borrower's current residential address",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ]
          },
          "currentlyOwnedProperties": {
            "type": "array",
            "writeOnly": true,
            "items": {
              "$ref": "#/components/schemas/Property"
            }
          },
          "currentlyOwnedPropertiesIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "guid"
            }
          },
          "currentlyOwnedPropertiesRefs": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "customFields": {
            "type": "object",
            "x-ms-dynamic-schema": {
              "operationId": "GetDynamicSchema",
              "parameters": {
                "entityType": "Borrower",
                "fieldType": "CustomField",
                "processVersionId": {
                  "parameterResponseReference": "processVersionId"
                }
              }
            },
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "dateOfBirth": {
            "type": "string",
            "description": "The borrower's date of birth",
            "format": "date",
            "nullable": true
          },
          "debtMonitoringCancelDate": {
            "type": "string",
            "description": "The date on which the borrower's UDM was cancelled",
            "format": "date-time",
            "nullable": true
          },
          "debtMonitoringLastUpdatedAt": {
            "type": "string",
            "description": "The date on which the borrower's UDM doc was last queried",
            "format": "date-time",
            "nullable": true
          },
          "debtMonitoringOrderedDate": {
            "type": "string",
            "description": "The date on which the undisclosed debt monitoring order was initiated. This may not match the start date, because at order, a start date in the past can be selected",
            "format": "date-time",
            "nullable": true
          },
          "debtMonitoringReferenceNumber": {
            "type": "string",
            "description": "Reference number for the debt monitoring request, used to retrieve updates on the report",
            "nullable": true
          },
          "debtMonitoringStartDate": {
            "type": "string",
            "description": "The date from which any borrower credit activity will be monitored",
            "format": "date-time",
            "nullable": true
          },
          "debtMonitoringStatus": {
            "description": "Whether or not UDM is currently enabled for a borrower",
            "$ref": "#/components/schemas/DebtMonitoringStatus"
          },
          "deedInLieuLatestCompletionDate": {
            "type": "string",
            "description": "If the borrower conveyed a deed in lieu of foreclosure in the last seven years, the date on which the deed in lieu was completed",
            "format": "date",
            "nullable": true
          },
          "dependentAges": {
            "type": "array",
            "description": "A list of the ages of the borrower's dependents",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "derogatoryEventsExtenuatingCircumstancesIndicator": {
            "type": "boolean",
            "description": "Whether there were extenuating circumstances surrounding the derogatory events",
            "nullable": true
          },
          "domesticRelationshipIndicator": {
            "type": "boolean",
            "description": "Whether the borrower is in a domestic relationship",
            "nullable": true
          },
          "domesticRelationshipStateCode": {
            "description": "The state that recognizes the borrower's domestic relationship status",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/StateCode"
              }
            ]
          },
          "domesticRelationshipStatus": {
            "description": "The borrower's domestic relationship status, if recognized by the state",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DomesticRelationshipStatus"
              }
            ]
          },
          "dudoCreditOverrides": {
            "type": "array",
            "description": "Codes to tell DU/DO to disregard the derogatory credit event from the DU/DO eligibility assessment",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/DUDOCreditOverrideCode"
            }
          },
          "econsentCapturedOn": {
            "type": "string",
            "readOnly": true,
            "description": "Date the borrower provided econsent",
            "format": "date-time",
            "nullable": true
          },
          "econsentCaptureMethod": {
            "readOnly": true,
            "description": "Method in which the econsent was given (electronic, verbal)",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EconsentCaptureMethod"
              }
            ]
          },
          "econsentIpAddress": {
            "type": "string",
            "readOnly": true,
            "description": "IP address that was used to econsent",
            "nullable": true
          },
          "econsentStatus": {
            "readOnly": true,
            "description": "The status of the econsent (accept, decline, withdrawn)",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EconsentStatus"
              }
            ]
          },
          "emailAddress": {
            "type": "string",
            "description": "The borrower's primary email address",
            "nullable": true
          },
          "estimatedFederalTaxes": {
            "type": "number",
            "description": "Estimated federal taxes",
            "format": "decimal",
            "nullable": true
          },
          "estimatedRetirementDeductions": {
            "type": "number",
            "description": "Estimated retirement deductions",
            "format": "decimal",
            "nullable": true
          },
          "estimatedStateTaxes": {
            "type": "number",
            "description": "Estimated state taxes",
            "format": "decimal",
            "nullable": true
          },
          "excessPurchasePriceAwarenessType": {
            "description": "Borrower awareness of value below purchase price",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExcessPurchasePriceAwarenessType"
              }
            ]
          },
          "facts": {
            "type": "object",
            "x-ms-dynamic-schema": {
              "operationId": "GetDynamicSchema",
              "parameters": {
                "entityType": "Borrower",
                "fieldType": "Fact",
                "processVersionId": {
                  "parameterResponseReference": "processVersionId"
                }
              }
            },
            "readOnly": true,
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "filedPreDischargeClaimIndicator": {
            "type": "boolean",
            "description": "Does the user have a pre-discharge claim pending with the VA?",
            "nullable": true
          },
          "financialInterestInSubjectPropertyRentalUnitsDescription": {
            "type": "string",
            "description": "Whether the borrower has financial interest in the subject property's rental units.",
            "nullable": true
          },
          "financialInterestInSubjectPropertyRentalUnitsIndicator": {
            "type": "boolean",
            "description": "Whether the borrower has financial interest in the subject property's rental units.",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "The borrower's legal first name",
            "nullable": true
          },
          "firstTimeHomebuyerIndicator": {
            "type": "boolean",
            "description": "Whether the borrower is a first time homebuyer",
            "nullable": true
          },
          "firstTimeVAEntitlementIndicator": {
            "type": "boolean",
            "description": "Is this the borrower's first time using their VA entitlement?",
            "nullable": true
          },
          "fiveYearForeclosureExplanation": {
            "type": "string",
            "description": "Explanation for indication foreclosure or transfer in past five years",
            "nullable": true
          },
          "fiveYearForeclosureIndicator": {
            "type": "boolean",
            "description": "For VA loans",
            "nullable": true
          },
          "foreclosureLatestCompletionDate": {
            "type": "string",
            "description": "If the borrower was foreclosed on in the last seven years, the date on which the foreclosure was completed",
            "format": "date",
            "nullable": true
          },
          "form4506CSelections": {
            "description": "Form 4506C selections",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Form4506CSelections"
              }
            ]
          },
          "fullName": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "hardCreditConsentDate": {
            "type": "string",
            "description": "Indicates that the borrower has provided consent to have their hard credit pulled, and the date on which they consented. This field blocks hard credit pulls if not set",
            "format": "date-time",
            "nullable": true
          },
          "hardCreditConsentType": {
            "description": "What type of consent the borrower has provided to have their hard credit pulled",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CreditPullConsentType"
              }
            ]
          },
          "hmdaEthnicityDetails": {
            "description": "The borrower's self reported ethnicity information for HMDA purposes",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/HMDAEthnicityDetails"
              }
            ]
          },
          "hmdaGenderDetails": {
            "description": "The borrower's self reported gender information for HMDA purposes",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/HMDAGenderDetails"
              }
            ]
          },
          "hmdaRaceDetails": {
            "description": "The borrower's self reported race information for HMDA purposes",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/HMDARaceDetails"
              }
            ]
          },
          "homeownerPastThreeYears": {
            "type": "boolean",
            "description": "Whether the borrower declares they have owned a home in the past 3 years",
            "nullable": true
          },
          "housingCounselingSessions": {
            "type": "array",
            "description": "Details pertaining to the borrower's completion of housing counseling, should that be necessary. Includes the counseling agency details, date and method of completion, etc",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/HousingCounselingSession"
            }
          },
          "hudFhaRealEstatePastSixtyMonthsIndicator": {
            "type": "boolean",
            "description": "Whether the borrower owned or sold other real estate in the last 5 years with a HUD/FHA mortgage.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "incomes": {
            "type": "array",
            "writeOnly": true,
            "items": {
              "$ref": "#/components/schemas/Income"
            }
          },
          "incomesIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "guid"
            }
          },
          "incomesRefs": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "incomeVerificationConsentDate": {
            "type": "string",
            "description": "Indicates that the borrower has provided consent to have their income verified, and the date on which they consented.",
            "format": "date-time",
            "nullable": true
          },
          "incomeVerificationConsentType": {
            "description": "What type of consent the borrower has provided to have their income verified",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeVerificationConsentType"
              }
            ]
          },
          "indebtednessAuthorizationIndicator": {
            "type": "boolean",
            "description": "VA borrower indebtedness authorization",
            "nullable": true
          },
          "intentToOccupy": {
            "type": "boolean",
            "description": "Whether the borrower declares they will be occupying the property",
            "nullable": true
          },
          "isUsingVABenefitsIndicator": {
            "type": "boolean",
            "description": "Determines whether the borrower is using their VA benefits",
            "nullable": true
          },
          "languagePreferenceType": {
            "description": "If the borrower prefers a language other than English, the preferred language for the borrower",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LanguagePreferenceType"
              }
            ]
          },
          "lastName": {
            "type": "string",
            "description": "The borrower's legal last name",
            "nullable": true
          },
          "ldpgsaCheckDate": {
            "type": "string",
            "description": "Date that the lender checked this borrower against the limited denial of participation and general services administration lists",
            "format": "date",
            "nullable": true
          },
          "liabilities": {
            "type": "array",
            "writeOnly": true,
            "items": {
              "$ref": "#/components/schemas/Liability"
            }
          },
          "liabilitiesIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "guid"
            }
          },
          "liabilitiesRefs": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "mailingAddress": {
            "description": "The borrower's current mailing address",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ]
          },
          "maritalStatus": {
            "description": "The borrower's marital status",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaritalStatus"
              }
            ]
          },
          "medianCreditScore": {
            "readOnly": true,
            "description": "Median credit score",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CreditScore"
              }
            ]
          },
          "middleName": {
            "type": "string",
            "description": "The borrower's legal middle name",
            "nullable": true
          },
          "militaryDischargeType": {
            "description": "If the borrower is a veteran, this describes the nature of their discharge",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MilitaryDischargeType"
              }
            ]
          },
          "militaryServiceExpectedCompletionDate": {
            "type": "string",
            "description": "If the borrower is on active duty, this is the date their service is expected to end",
            "format": "date",
            "nullable": true
          },
          "militaryServicePeriods": {
            "type": "array",
            "description": "Military history",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/MilitaryServicePeriod"
            }
          },
          "militaryStatusType": {
            "description": "Describes the borrower's military service, if applicable. If the borrower is a spouse eligible for VA benefits, this field will describe their spouse's military service instead.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MilitaryStatusType"
              }
            ]
          },
          "monthlyFederalTaxAmount": {
            "type": "number",
            "description": "Estimated monthly taxes for this borrower",
            "format": "decimal",
            "nullable": true
          },
          "mortgageChargeOffLatestCompletionDate": {
            "type": "string",
            "description": "If the borrower had a mortgage charged off in the last seven years, the date on which this occurred",
            "format": "date",
            "nullable": true
          },
          "mostRecentlyOwnedPropertyAddress": {
            "description": "For borrowers who have owned a property in their lifetime, provide their address.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ]
          },
          "mostRecentTradelineOpenDate": {
            "type": "string",
            "readOnly": true,
            "description": "The most recent date on which any of the borrower's tradeline accounts was opened",
            "format": "date",
            "nullable": true
          },
          "nearestLivingRelativeAddress": {
            "description": "Address of the veteran's nearest living relative",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ]
          },
          "nearestLivingRelativeFirstName": {
            "type": "string",
            "description": "First name of the veteran's nearest living relative",
            "nullable": true
          },
          "nearestLivingRelativeLastName": {
            "type": "string",
            "description": "Last name of the veteran's nearest living relative",
            "nullable": true
          },
          "nearestLivingRelativeMiddleName": {
            "type": "string",
            "description": "Middle name of the veteran's nearest living relative",
            "nullable": true
          },
          "nearestLivingRelativePhoneNumber": {
            "type": "string",
            "description": "Phone number of the veteran's nearest living relative",
            "nullable": true
          },
          "nearestLivingRelativeRelationship": {
            "type": "string",
            "description": "Relationship of the nearest living relative to the veteran",
            "nullable": true
          },
          "nearestLivingRelativeSuffixName": {
            "type": "string",
            "description": "Suffix of the veteran's nearest living relative",
            "nullable": true
          },
          "nickname": {
            "type": "string",
            "description": "A nickname the borrower uses in place of their full name, for communication with the borrower",
            "nullable": true
          },
          "occupyingPersons": {
            "type": "array",
            "description": "Occupying persons",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/OccupyingPersonsType"
            }
          },
          "openTradelines": {
            "type": "integer",
            "readOnly": true,
            "description": "Number indicating the count of tradelines",
            "format": "int32",
            "nullable": true
          },
          "otherDeductions": {
            "type": "number",
            "description": "Other deductions",
            "format": "decimal",
            "nullable": true
          },
          "otherDomesticRelationshipStatus": {
            "type": "string",
            "description": "Further detail about the borrower's domestic relationship status, if not in the prescribed dropdown",
            "nullable": true
          },
          "otherLanguagePreference": {
            "type": "string",
            "description": "If the borrower prefers a language other than English and that is not in the prescribed dropdown, the preferred language for the borrower",
            "nullable": true
          },
          "outstandingJudgmentsIndicator": {
            "type": "boolean",
            "description": "Whether the borrower declares they are subject to outstanding judgements",
            "nullable": true
          },
          "partyToLawsuitIndicator": {
            "type": "boolean",
            "description": "Whether the borrower declares they are currently party to a lawsuit",
            "nullable": true
          },
          "phoneNumbers": {
            "type": "array",
            "description": "A list of the borrower's phone numbers and their types (mobile, home, etc)",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TelephoneNumber"
            }
          },
          "positiveRentalHistoryIndicator": {
            "type": "boolean",
            "description": "Whether the borrower has on-time payment of all rental payments in the previous 12 months.",
            "nullable": true
          },
          "powerOfAttorneyAgentFirstName": {
            "type": "string",
            "description": "The first name of the borrower's agent for closing",
            "nullable": true
          },
          "powerOfAttorneyAgentLastName": {
            "type": "string",
            "description": "The last name of the borrower's agent for closing",
            "nullable": true
          },
          "powerOfAttorneyAgentMiddleName": {
            "type": "string",
            "description": "The middle name of the borrower's agent for closing",
            "nullable": true
          },
          "powerOfAttorneyApprovedIndicator": {
            "type": "boolean",
            "description": "Indicates the lender has reviewed and approved the power of attorney for closing",
            "nullable": true
          },
          "powerOfAttorneySignatureText": {
            "type": "string",
            "description": "Power of attorney signature text",
            "nullable": true
          },
          "prefersNonEnglishLanguageIndicator": {
            "type": "boolean",
            "description": "Indicates that the borrower prefers to communciate about this transaction in a language other than English",
            "nullable": true
          },
          "presentlyDelinquentIndicator": {
            "type": "boolean",
            "description": "Whether the borrower declares they are presently delinquent on a federal debt",
            "nullable": true
          },
          "previousHudFhaPropertyAddress": {
            "description": "Address of previous HUD/FHA-financed property.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ]
          },
          "previousHudFhaPropertyOriginalMortgageAmount": {
            "type": "number",
            "description": "Original mortgage amount of previous HUD/FHA-financed property.",
            "format": "decimal",
            "nullable": true
          },
          "previousHudFhaPropertyOwnedIndicator": {
            "type": "boolean",
            "description": "Whether the borrower still owns their previous HUD/FHA-financed property.",
            "nullable": true
          },
          "previousHudFhaPropertySalePrice": {
            "type": "number",
            "description": "Sale price of previous HUD/FHA-financed property.",
            "format": "decimal",
            "nullable": true
          },
          "previouslyOccupiedIndicator": {
            "type": "boolean",
            "description": "For VA IRRRL loans, whether this borrower previously occupied the subject propery",
            "nullable": true
          },
          "previouslyOccupyingPersons": {
            "type": "array",
            "description": "Previously occupying persons",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/OccupyingPersonsType"
            }
          },
          "previousVALoans": {
            "type": "array",
            "description": "Previous VA Loans",
            "items": {
              "$ref": "#/components/schemas/PreviousVALoan"
            }
          },
          "priorMortgageChargeOffIndicator": {
            "type": "boolean",
            "description": "Whether the borrower declares they had a mortgage charged off in the last 7 years",
            "nullable": true
          },
          "priorPropertyDeedInLieuConveyedIndicator": {
            "type": "boolean",
            "description": "Whether the borrower declares they have conveyed a deed in lieu of foreclosure in the last 7 years",
            "nullable": true
          },
          "priorPropertyForeclosureCompletedIndicator": {
            "type": "boolean",
            "description": "Whether the borrower declares they completed foreclosure in the last 7 years",
            "nullable": true
          },
          "priorPropertyShortSaleCompletedIndicator": {
            "type": "boolean",
            "description": "Whether the borrower declares they completed a short sale in the last 7 years",
            "nullable": true
          },
          "priorPropertyTitleType": {
            "description": "If the borrower indicated they owned a home in the past 3 years, how they held title to that property",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PriorPropertyTitleType"
              }
            ]
          },
          "priorPropertyUsageType": {
            "description": "If the borrower indicated they owned a home in the past 3 years, how they used that property",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PriorPropertyUsageType"
              }
            ]
          },
          "propertySubjectToPriorityLienIndicator": {
            "type": "boolean",
            "description": "Whether the borrower declares the subject property is subject to another lien that could take priority over the subject mortgage. This question must be answered by each borrower",
            "nullable": true
          },
          "publicRecords": {
            "type": "array",
            "writeOnly": true,
            "items": {
              "$ref": "#/components/schemas/PublicRecord"
            }
          },
          "publicRecordsIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "guid"
            }
          },
          "publicRecordsRefs": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          },
          "relationshipWithRDEmployeeIndicator": {
            "type": "boolean",
            "description": "Indicates that this borrower has a relationship with a current Rural Development employee. Relevant for USDA loans",
            "nullable": true
          },
          "shortSaleLatestCompletionDate": {
            "type": "string",
            "description": "If the borrower completed a short sale in the last seven years, the date on which the short sale was completed",
            "format": "date",
            "nullable": true
          },
          "softCreditConsentDate": {
            "type": "string",
            "description": "Indicates that the borrower has provided consent to have their soft credit pulled, and the date on which they consented. This field blocks soft credit pulls if not set",
            "format": "date-time",
            "nullable": true
          },
          "softCreditConsentType": {
            "description": "What type of consent the borrower has provided to have their soft credit pulled",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CreditPullConsentType"
              }
            ]
          },
          "specialBorrowerSellerRelationshipIndicator": {
            "type": "boolean",
            "description": "Whether the borrower declares they have a special relationship with the seller of the property in a purchase",
            "nullable": true
          },
          "spouse": {
            "writeOnly": true,
            "description": "A reference to the borrower's spouse if the spouse is also on the loan",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Borrower"
              }
            ]
          },
          "spouseEligibleForVABenefits": {
            "type": "boolean",
            "description": "Indicates whether the borrower is receiving VA surviving spouse benefits",
            "nullable": true
          },
          "spouseFullNameIfNonBorrower": {
            "type": "string",
            "description": "The full name of the borrower's spouse if that person is not on the mortgage application",
            "nullable": true
          },
          "spouseId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "spouseIsCoBorrowerIndicator": {
            "type": "boolean",
            "description": "Determines whether the borrower's spouse is a co-borrower on the loan or not a borrower for this loan at all",
            "nullable": true
          },
          "spouseOccupyActiveDutyIndicator": {
            "type": "boolean",
            "description": "Will your spouse or dependent occupy the property because you are on active duty?",
            "nullable": true
          },
          "spousePreviouslyOccupyActiveDutyIndicator": {
            "type": "boolean",
            "description": "Did your spouse or dependent occupy the property because you were on active duty?",
            "nullable": true
          },
          "spouseRef": {
            "type": "string",
            "nullable": true
          },
          "spouseTaxpayerIdentifierNumber": {
            "type": "string",
            "description": "The spouse taxpayer identifier number",
            "nullable": true
          },
          "suffixName": {
            "type": "string",
            "description": "The borrower's legal suffix name, if applicable",
            "nullable": true
          },
          "taxIdentifier": {
            "type": "string",
            "description": "The borrower's tax identifier number, most typically an SSN",
            "nullable": true
          },
          "taxIdentifierType": {
            "description": "What type of tax identifier number the borrower has",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaxIdentifierType"
              }
            ]
          },
          "totalHousingExpenses": {
            "type": "number",
            "readOnly": true,
            "description": "Monthly housing expenses and debt",
            "format": "decimal",
            "nullable": true
          },
          "totalNetIncome": {
            "type": "number",
            "readOnly": true,
            "description": "Total net income",
            "format": "decimal",
            "nullable": true
          },
          "totalNonTaxableIncome": {
            "type": "number",
            "readOnly": true,
            "description": "Non-taxable income",
            "format": "decimal",
            "nullable": true
          },
          "totalQualifiedMonthlyIncome": {
            "type": "number",
            "readOnly": true,
            "description": "Total qualified monthly income",
            "format": "decimal",
            "nullable": true
          },
          "totalTaxableIncome": {
            "type": "number",
            "readOnly": true,
            "description": "Total taxable income",
            "format": "decimal",
            "nullable": true
          },
          "undisclosedBorrowedFundsAmount": {
            "type": "number",
            "description": "If the borrower indicated the use of other undisclosed borrowed funds, the amount of those funds",
            "format": "decimal",
            "nullable": true
          },
          "undisclosedBorrowedFundsIndicator": {
            "type": "boolean",
            "description": "Whether the borrower declares they are using other, undisclosed borrowed funds for cash to close",
            "nullable": true
          },
          "undisclosedComakerOfNoteIndicator": {
            "type": "boolean",
            "description": "Whether the borrower declares they are a cosigner or guarantor on undisclosed debt",
            "nullable": true
          },
          "undisclosedCreditApplicationIndicator": {
            "type": "boolean",
            "description": "Whether the borrower declares they will apply for another loan before closing",
            "nullable": true
          },
          "undisclosedMortgageApplicationIndicator": {
            "type": "boolean",
            "description": "Whether the borrower declares they will apply for another mortgage before closing",
            "nullable": true
          },
          "usingPowerOfAttorneyIndicator": {
            "type": "boolean",
            "description": "Whether the borrower would like to provide an agent with power of attorney for closing",
            "nullable": true
          },
          "vaCreditRecordSatisfactoryIndicator": {
            "type": "boolean",
            "description": "Is the borrower's credit record satisfactory?",
            "nullable": true
          },
          "vaCreditStandardsMetIndicator": {
            "type": "boolean",
            "description": "Does the loan meet VA credit standards?",
            "nullable": true
          },
          "vaEntitlementIdentifier": {
            "type": "string",
            "description": "VA entitlement identifier",
            "nullable": true
          },
          "vaFundingFeeExemptionIndicator": {
            "type": "boolean",
            "description": "Is this borrower exempt from the VA funding fee?",
            "nullable": true
          },
          "vaPurpleHeartIndicator": {
            "type": "boolean",
            "description": "Does the borrower have a Purple Heart award?",
            "nullable": true
          },
          "vaRemainingEntitlementLevel": {
            "type": "number",
            "description": "VA remaining entitlement level",
            "format": "decimal",
            "nullable": true
          },
          "verificationProviders": {
            "type": "array",
            "description": "Agencies and reports used to verify borrower information such as income",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/VerificationProvider"
            }
          }
        }
      },
      "BorrowerBusiness": {
        "type": "object",
        "description": "The borrower business model.",
        "example": {
          "name": "Mom and Pop Sweets",
          "address": {
            "line": "123 Candy Ln",
            "city": "Rochester",
            "state": "Michigan",
            "zipCode": "48307"
          },
          "foundedDate": "2015-10-23"
        },
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "address": {
            "description": "Legal address of the business - this may not be the office where the borrower works",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ]
          },
          "assets": {
            "type": "array",
            "writeOnly": true,
            "description": "The business assets on the loan that are associated with this business",
            "items": {
              "$ref": "#/components/schemas/Asset"
            }
          },
          "assetsIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "guid"
            }
          },
          "assetsRefs": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "borrowers": {
            "type": "array",
            "writeOnly": true,
            "description": "The borrowers on the loan who own this business",
            "items": {
              "$ref": "#/components/schemas/Borrower"
            }
          },
          "borrowersIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "guid"
            }
          },
          "borrowersRefs": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "businessType": {
            "description": "The business corporate structure",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BusinessType"
              }
            ]
          },
          "cashflowSupportsUseOfIncomeIndicator": {
            "type": "boolean",
            "description": "Indicates that somebody has determined that the business cashflows suggest that the business is likely to continue to exist, and therefore that the associated self employment income is likely to continue",
            "nullable": true
          },
          "computedFields": {
            "type": "object",
            "x-ms-dynamic-schema": {
              "operationId": "GetDynamicSchema",
              "parameters": {
                "entityType": "BorrowerBusiness",
                "fieldType": "ComputedField",
                "processVersionId": {
                  "parameterResponseReference": "processVersionId"
                }
              }
            },
            "readOnly": true,
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "currentAssetValue": {
            "type": "number",
            "description": "Current total assets of the business, including inventory",
            "format": "decimal",
            "nullable": true
          },
          "currentLiabilitiesValue": {
            "type": "number",
            "description": "The total outstanding liabilities of the business",
            "format": "decimal",
            "nullable": true
          },
          "currentRatio": {
            "type": "number",
            "description": "Current assets divided by current liabilities. This measures the liquidity of a business, and is a calculated field. This is used for businesses that don't carry inventory",
            "format": "decimal",
            "nullable": true
          },
          "customFields": {
            "type": "object",
            "x-ms-dynamic-schema": {
              "operationId": "GetDynamicSchema",
              "parameters": {
                "entityType": "BorrowerBusiness",
                "fieldType": "CustomField",
                "processVersionId": {
                  "parameterResponseReference": "processVersionId"
                }
              }
            },
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "employerIdentificationNumber": {
            "type": "string",
            "description": "Nine-digit business employer identification number",
            "nullable": true
          },
          "expensesHistory": {
            "type": "array",
            "description": "A timeseries of the total expense amounts for this business over the last few years",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "facts": {
            "type": "object",
            "x-ms-dynamic-schema": {
              "operationId": "GetDynamicSchema",
              "parameters": {
                "entityType": "BorrowerBusiness",
                "fieldType": "Fact",
                "processVersionId": {
                  "parameterResponseReference": "processVersionId"
                }
              }
            },
            "readOnly": true,
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "form4506CSelections": {
            "description": "The borrower business selections for Form 4506-C, which authorizes the lender to request a transcript of the borrower's tax return from the IRS.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Form4506CSelections"
              }
            ]
          },
          "foundedDate": {
            "type": "string",
            "description": "The date the business was founded/incorporated",
            "format": "date",
            "nullable": true
          },
          "grossIncomeHistory": {
            "type": "array",
            "description": "A timeseries of the gross income amounts for this business over the last few years",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "hasInventoryIndicator": {
            "type": "boolean",
            "description": "Indicates that this is a business that carries inventory",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "incomes": {
            "type": "array",
            "writeOnly": true,
            "description": "The self employment incomes on the loan that are associated with this business",
            "items": {
              "$ref": "#/components/schemas/Income"
            }
          },
          "incomesIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "guid"
            }
          },
          "incomesRefs": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "inventoryAssetValue": {
            "type": "number",
            "description": "The total value of the business's current inventory, Schedule L, Line 3, Col d",
            "format": "decimal",
            "nullable": true
          },
          "liquiditySupportsUseOfAssetsIndicator": {
            "type": "boolean",
            "description": "Indicates that somebody has determined, based on the quick or current ratio, that the business has sufficient liquidity to support the use of business assets towards the mortgage cash to close",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The legal name of the business",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "description": "Contact phone number for the business",
            "nullable": true
          },
          "quickRatio": {
            "type": "number",
            "description": "Current assets minus inventory, divided by current liabilities. This measures the liquidity of a business, and is a calculated field. This is used for businesses that carry inventory",
            "format": "decimal",
            "nullable": true
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          },
          "taxableIncomeHistory": {
            "type": "array",
            "description": "A timeseries of the taxable income amounts for this business over the last few years",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "verificationLenderVerifierFullName": {
            "type": "string",
            "nullable": true
          },
          "verificationLenderVerifierTitle": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "BorrowerEconsentInput": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "econsentCaptureMethod",
          "econsentEmail",
          "econsentStatus"
        ],
        "properties": {
          "econsentCaptureMethod": {
            "$ref": "#/components/schemas/EconsentCaptureMethod"
          },
          "econsentEmail": {
            "type": "string"
          },
          "econsentIpAddress": {
            "type": "string",
            "nullable": true
          },
          "econsentStatus": {
            "$ref": "#/components/schemas/EconsentStatus"
          }
        }
      },
      "BorrowerOrNonBorrower": {
        "type": "object",
        "description": "Id is specified by the user and thus collections of this type when PATCHed\nreplace the collection instead of updating by id.",
        "additionalProperties": false,
        "required": [
          "id",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "type": {
            "$ref": "#/components/schemas/BorrowerOrNonBorrowerType"
          }
        }
      },
      "BorrowerOrNonBorrowerType": {
        "type": "string",
        "example": "Borrower",
        "x-enumNames": [
          "Borrower",
          "NonBorrower"
        ],
        "enum": [
          "Borrower",
          "NonBorrower"
        ]
      },
      "BorrowerReceiptEvent": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "borrowerId"
        ],
        "properties": {
          "borrowerId": {
            "type": "string",
            "format": "guid"
          },
          "expiredTimestamp": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "receivedTimestamp": {
            "type": "string",
            "description": "Actual received date",
            "format": "date-time",
            "nullable": true
          },
          "signedTimestamp": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "Branch": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "address": {
            "readOnly": true,
            "$ref": "#/components/schemas/Address"
          },
          "branchName": {
            "type": "string",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          }
        }
      },
      "BrokerUnderwriteSubmissionStage": {
        "type": "string",
        "example": "Preliminary",
        "x-enumNames": [
          "Preliminary",
          "Interim",
          "Final",
          "PostClosingQualityControl"
        ],
        "enum": [
          "Preliminary",
          "Interim",
          "Final",
          "PostClosingQualityControl"
        ]
      },
      "BusinessType": {
        "type": "string",
        "example": "SoleProprietorship",
        "x-enumNames": [
          "SoleProprietorship",
          "LLC",
          "SCorp",
          "CCorp",
          "Partnership",
          "Corporation"
        ],
        "enum": [
          "SoleProprietorship",
          "LLC",
          "SCorp",
          "CCorp",
          "Partnership",
          "Corporation"
        ]
      },
      "CaliforniaLicenseType": {
        "type": "string",
        "example": "FinanceLendersLawBroker",
        "x-enumNames": [
          "FinanceLendersLawBroker",
          "FinanceLendersLawLender",
          "ResidentialMortgageLendingAct",
          "RealEstateBrokerMLOEndorsement",
          "RealEstateCorporationMLOEndorsement"
        ],
        "enum": [
          "FinanceLendersLawBroker",
          "FinanceLendersLawLender",
          "ResidentialMortgageLendingAct",
          "RealEstateBrokerMLOEndorsement",
          "RealEstateCorporationMLOEndorsement"
        ]
      },
      "CancelObjectiveRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "cancellationReason"
        ],
        "properties": {
          "cancellationReason": {
            "$ref": "#/components/schemas/ObjectiveManualCancellationReason"
          },
          "cancellationReasonDescription": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CancelObjectiveResponse": {
        "type": "object",
        "additionalProperties": false
      },
      "CancelObjectiveTaskRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "cancellationReason": {
            "$ref": "#/components/schemas/ObjectiveTaskCancellationReason"
          },
          "cancellationReasonDescription": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CancelObjectiveTaskResponse": {
        "type": "object",
        "additionalProperties": false
      },
      "CancelReason": {
        "type": "string",
        "example": "NotRelevant",
        "x-enumNames": [
          "NotRelevant",
          "NotFeasible",
          "Duplicate",
          "NoLongerNeed",
          "AddedByMistake",
          "CompletedByOtherMeans",
          "Other",
          "AutomaticallyCancelled"
        ],
        "enum": [
          "NotRelevant",
          "NotFeasible",
          "Duplicate",
          "NoLongerNeed",
          "AddedByMistake",
          "CompletedByOtherMeans",
          "Other",
          "AutomaticallyCancelled"
        ]
      },
      "CancelTaskInput": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "note"
        ],
        "properties": {
          "note": {
            "type": "string"
          }
        }
      },
      "CancelTaskResponse": {
        "type": "object",
        "additionalProperties": false
      },
      "CapitalPartnerIntegrationType": {
        "type": "string",
        "example": "Manual",
        "x-enumNames": [
          "Manual"
        ],
        "enum": [
          "Manual"
        ]
      },
      "CapitalPartnerType": {
        "type": "string",
        "example": "WarehouseLender",
        "x-enumNames": [
          "WarehouseLender",
          "InvestorCorrespondentBuyer",
          "Wholesaler",
          "Investor",
          "CorrespondentBuyer"
        ],
        "enum": [
          "WarehouseLender",
          "InvestorCorrespondentBuyer",
          "Wholesaler",
          "Investor",
          "CorrespondentBuyer"
        ]
      },
      "ChangeInCircumstanceReason": {
        "type": "string",
        "example": "ChangedCircumstanceAffectingSettlementCharges",
        "x-enumNames": [
          "ChangedCircumstanceAffectingSettlementCharges",
          "ChangedCircumstanceAffectingEligibility",
          "RevisionsRequestedByConsumer",
          "InterestRateDependentCharges",
          "ExpirationOfInitialLoanEstimate",
          "DelayedSettlementDateOnConstructionLoan",
          "Other"
        ],
        "enum": [
          "ChangedCircumstanceAffectingSettlementCharges",
          "ChangedCircumstanceAffectingEligibility",
          "RevisionsRequestedByConsumer",
          "InterestRateDependentCharges",
          "ExpirationOfInitialLoanEstimate",
          "DelayedSettlementDateOnConstructionLoan",
          "Other"
        ]
      },
      "ChangeInCircumstancesReason": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "closingCostId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "isTotalLenderCredit": {
            "type": "boolean",
            "nullable": true
          },
          "reason": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ChangeInCircumstanceReason"
              }
            ]
          }
        }
      },
      "ChangeInCircumstancesResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "availablePackageTypes": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AvailablePackageTypeResponse"
            }
          },
          "disclosureId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "feeChanges": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/FeeChange"
            }
          },
          "fieldChanges": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/FieldChange"
            }
          }
        }
      },
      "CitizenshipType": {
        "type": "string",
        "example": "USCitizen",
        "x-enumNames": [
          "USCitizen",
          "PermanentResidentAlien",
          "NonPermanentResidentAlien",
          "NonResidentAlien"
        ],
        "enum": [
          "USCitizen",
          "PermanentResidentAlien",
          "NonPermanentResidentAlien",
          "NonResidentAlien"
        ]
      },
      "ClosingAdjustment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "amount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "closingAdjustmentType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ClosingAdjustmentType"
              }
            ]
          },
          "closingAdjustmentTypeOtherDescription": {
            "type": "string",
            "description": "Further description of the closing adjustment type if it is not in the prescribed list",
            "nullable": true
          },
          "counterParty": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ClosingAdjustmentCounterparty"
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "managedLenderCreditName": {
            "type": "string",
            "nullable": true
          },
          "paidToOrFromBorrower": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaidToOrFromBorrower"
              }
            ]
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          },
          "toleranceCuresIncludeInLenderCredit": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "ClosingAdjustmentCounterparty": {
        "type": "string",
        "example": "Seller",
        "x-enumNames": [
          "Seller",
          "Lender",
          "Builder",
          "Broker",
          "RealEstateAgent",
          "Correspondent",
          "Other",
          "Employer",
          "BuilderDeveloper",
          "EmployerAffiliate",
          "LenderAffiliate",
          "OtherInterestedParty"
        ],
        "enum": [
          "Seller",
          "Lender",
          "Builder",
          "Broker",
          "RealEstateAgent",
          "Correspondent",
          "Other",
          "Employer",
          "BuilderDeveloper",
          "EmployerAffiliate",
          "LenderAffiliate",
          "OtherInterestedParty"
        ]
      },
      "ClosingAdjustmentType": {
        "type": "string",
        "example": "FuelCosts",
        "x-enumNames": [
          "FuelCosts",
          "LenderCredit",
          "RentFromSubjectProperty",
          "RepairCompletionEscrowHoldback",
          "Repairs",
          "SatisfactionOfSubordinateLien",
          "SellersEscrowAssumption",
          "SellersMortgageInsuranceAssumption",
          "SellersReserveAccountAssumption",
          "Services",
          "TenantSecurityDeposit",
          "UnpaidUtilityEscrowHoldback",
          "Other",
          "RebateCredit",
          "SubordinateFinancingProceeds",
          "LenderCreditToleranceCures",
          "LenderCreditPoints",
          "AdditionalSaleOfSellerProperty",
          "GiftOfEquity",
          "RelocationFunds",
          "SweatEquity",
          "TradeEquity",
          "ManagedLenderCredit",
          "LenderCreditConcession",
          "EmployerAssistedHousing",
          "LeasePurchaseFund",
          "LotEquity"
        ],
        "enum": [
          "FuelCosts",
          "LenderCredit",
          "RentFromSubjectProperty",
          "RepairCompletionEscrowHoldback",
          "Repairs",
          "SatisfactionOfSubordinateLien",
          "SellersEscrowAssumption",
          "SellersMortgageInsuranceAssumption",
          "SellersReserveAccountAssumption",
          "Services",
          "TenantSecurityDeposit",
          "UnpaidUtilityEscrowHoldback",
          "Other",
          "RebateCredit",
          "SubordinateFinancingProceeds",
          "LenderCreditToleranceCures",
          "LenderCreditPoints",
          "AdditionalSaleOfSellerProperty",
          "GiftOfEquity",
          "RelocationFunds",
          "SweatEquity",
          "TradeEquity",
          "ManagedLenderCredit",
          "LenderCreditConcession",
          "EmployerAssistedHousing",
          "LeasePurchaseFund",
          "LotEquity"
        ]
      },
      "ClosingCost": {
        "type": "object",
        "description": "The closing cost model.",
        "example": {
          "isAPRFeeIndicator": false,
          "feePaidToType": "ThirdPartyProvider",
          "feeCategory": "Prepaids",
          "prepaidExpenseType": "HomeownersInsurancePremium"
        },
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "anyAmountFinanced": {
            "type": "boolean",
            "description": "Indicates that this fee is partially financed by the borrower",
            "nullable": true
          },
          "borrowerCanShopForIndicator": {
            "type": "boolean",
            "description": "Indicates that the borrower can shop for this third party service",
            "nullable": true
          },
          "borrowerDidShopForIndicator": {
            "type": "boolean",
            "description": "Indicates that the borrower did shop for this third party service",
            "nullable": true
          },
          "borrowerPayments": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ClosingCostPayment"
              }
            ]
          },
          "brokerPayments": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ClosingCostPayment"
              }
            ]
          },
          "calculatedTotalFeeAmount": {
            "type": "number",
            "readOnly": true,
            "description": "Calculated total amount of the fee if calculable",
            "format": "decimal",
            "nullable": true
          },
          "calculatedTotalFeeAmountEstimate": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "calculationMethod": {
            "description": "Whether the closing cost is a fixed amount, percentage of the loan, or days of interest",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/FeeCalculationMethod"
              }
            ]
          },
          "cdSnapshotAmount": {
            "type": "number",
            "readOnly": true,
            "description": "The amount of that was disclosed for this closing cost on the closing disclosure. If multiple CDs were sent, this reflects the most recent",
            "format": "decimal",
            "nullable": true
          },
          "computedFields": {
            "type": "object",
            "x-ms-dynamic-schema": {
              "operationId": "GetDynamicSchema",
              "parameters": {
                "entityType": "ClosingCost",
                "fieldType": "ComputedField",
                "processVersionId": {
                  "parameterResponseReference": "processVersionId"
                }
              }
            },
            "readOnly": true,
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "customFields": {
            "type": "object",
            "x-ms-dynamic-schema": {
              "operationId": "GetDynamicSchema",
              "parameters": {
                "entityType": "ClosingCost",
                "fieldType": "CustomField",
                "processVersionId": {
                  "parameterResponseReference": "processVersionId"
                }
              }
            },
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "description": {
            "type": "string",
            "description": "Description of the closing cost",
            "nullable": true
          },
          "facts": {
            "type": "object",
            "x-ms-dynamic-schema": {
              "operationId": "GetDynamicSchema",
              "parameters": {
                "entityType": "ClosingCost",
                "fieldType": "Fact",
                "processVersionId": {
                  "parameterResponseReference": "processVersionId"
                }
              }
            },
            "readOnly": true,
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "feeCategory": {
            "description": "What category this fee falls into. These map similarly but not perfectly to the sections on the loan estimate/closing disclosure",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/FeeCategory"
              }
            ]
          },
          "feePaidToName": {
            "type": "string",
            "description": "Who the fee is paid to",
            "nullable": true
          },
          "feePaidToType": {
            "description": "What type of party is receiving the fee - lender, settlement service provider, etc",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/FeePaidToParty"
              }
            ]
          },
          "feePaymentDueDate": {
            "type": "string",
            "description": "Fee payment due date",
            "format": "date",
            "nullable": true
          },
          "feeRefundType": {
            "description": "Fee refund type",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/FeeRefundType"
              }
            ]
          },
          "feeType": {
            "description": "Fee type",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ClosingFeeType"
              }
            ]
          },
          "fileContactOnSSPL": {
            "type": "boolean",
            "readOnly": true,
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "initialEscrowPaymentType": {
            "description": "Initial escrow payment type",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/InitialEscrowPaymentType"
              }
            ]
          },
          "isAPRFeeIndicator": {
            "type": "boolean",
            "description": "Indicates that this fee should be used in calculating APR",
            "nullable": true
          },
          "isManuallyEdited": {
            "type": "boolean",
            "readOnly": true,
            "nullable": true
          },
          "lastValidBaseline": {
            "type": "number",
            "readOnly": true,
            "description": "The amount of that was disclosed for this closing cost that was most recently a valid baseline.",
            "format": "decimal",
            "nullable": true
          },
          "lenderPayments": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ClosingCostPayment"
              }
            ]
          },
          "leSnapshotAmount": {
            "type": "number",
            "readOnly": true,
            "description": "The amount of that was disclosed for this closing cost on the loan estimate. If multiple LEs were sent, this reflects the most recent",
            "format": "decimal",
            "nullable": true
          },
          "otherPayments": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ClosingCostPayment"
              }
            ]
          },
          "paidByOthers": {
            "type": "boolean",
            "description": "Indicates that this fee is paid by a non-borrower/lender party",
            "nullable": true
          },
          "percentOfLoanAmount": {
            "type": "number",
            "description": "If the closing cost is calculated as a percent of the loan amount, what percentage it is",
            "format": "decimal",
            "nullable": true
          },
          "perDiemCalculationMethod": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PerDiemCalculationMethod"
              }
            ]
          },
          "prepaidExpenseType": {
            "description": "Prepaid expense type",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PrepaidExpenseType"
              }
            ]
          },
          "prepaidInterestDailyAmount": {
            "type": "number",
            "description": "Prepaid interest daily amount",
            "format": "decimal",
            "nullable": true
          },
          "prepaidInterestPaidFromDate": {
            "type": "string",
            "description": "Prepaid interest paid from",
            "format": "date",
            "nullable": true
          },
          "prepaidInterestPaidThroughDate": {
            "type": "string",
            "description": "Prepaid interest paid through",
            "format": "date",
            "nullable": true
          },
          "prepaidOrInitialEscrowMonthlyAmount": {
            "type": "number",
            "readOnly": true,
            "description": "Monthly amount",
            "format": "decimal",
            "nullable": true
          },
          "prepaidOrInitialEscrowMonthlyAmountEstimate": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "prepaidOrInitialEscrowMonthsPaid": {
            "type": "integer",
            "readOnly": true,
            "description": "Months prepaid",
            "nullable": true
          },
          "prepaidOrInitialEscrowMonthsPaidEstimate": {
            "type": "integer",
            "nullable": true
          },
          "prepaidOrInitialEscrowPaymentTypeOtherDescription": {
            "type": "string",
            "description": "Other prepaid or initial escrow payment type description",
            "nullable": true
          },
          "propertyValuationId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "provider": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/FeesProvider"
              }
            ]
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          },
          "refundabilityConditions": {
            "type": "string",
            "description": "Fee refundability conditions",
            "nullable": true
          },
          "refundableIndicator": {
            "type": "boolean",
            "description": "Indicates that this fee is refundable",
            "nullable": true
          },
          "sellerPayments": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ClosingCostPayment"
              }
            ]
          },
          "toleranceCure": {
            "type": "number",
            "readOnly": true,
            "description": "Tolerance cure",
            "format": "decimal",
            "nullable": true
          },
          "toleranceCureBucket": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ToleranceCureBucket"
              }
            ]
          },
          "toleranceCureEstimate": {
            "type": "number",
            "description": "Tolerance cure",
            "format": "decimal",
            "nullable": true
          },
          "totalBorrowerPaidAmount": {
            "type": "number",
            "readOnly": true,
            "description": "The total amount of the fee that the borrower is paying, including both before and at closing",
            "format": "decimal",
            "nullable": true
          },
          "totalFeeAmount": {
            "type": "number",
            "description": "The total fixed amount of the fee",
            "format": "decimal",
            "nullable": true
          },
          "totalFeeAmountEstimate": {
            "type": "number",
            "description": "Total fixed fee amount estimate",
            "format": "decimal",
            "nullable": true
          }
        }
      },
      "ClosingCostPayment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "interestedPartyContribution": {
            "type": "boolean",
            "nullable": true
          },
          "paidAtClose": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "paidAtCloseEstimate": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "paidBeforeClose": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          },
          "toleranceCure": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "ClosingFeeType": {
        "type": "string",
        "example": "Other",
        "x-enumNames": [
          "Other",
          "ApplicationFee",
          "AppraisalDeskReviewFee",
          "AttorneyFee",
          "CommitmentFee",
          "LenderCourierFee",
          "EscrowHoldbackFee",
          "EscrowWaiverFee",
          "LendersAttorneyFee",
          "LoanOriginationFee",
          "MortgageBrokerFee",
          "PayoffRequestFee",
          "ProcessingFee",
          "RateLockFee",
          "SubordinationFee",
          "UnderwritingFee",
          "WireTransferFee",
          "LenderCertificationFee",
          "LenderCopyOrFaxFee",
          "LenderDocumentPreparationFee",
          "LenderElectronicDocumentDeliveryFee",
          "LenderFilingFee",
          "LockExtensionFee",
          "Points",
          "HomeInspectionFee",
          "HomeownersAssociationDues",
          "HomeownersAssociationServiceFee",
          "HomeownersAssociationSpecialAssessment",
          "HomeWarrantyFee",
          "RealEstateCommissionBuyersBroker",
          "RealEstateCommissionSellersBroker",
          "TitleOwnersCoveragePremium",
          "TemporaryBuydownPoints",
          "BorrowerElectedSurveyFee",
          "RecordingFeeForAssignment",
          "RecordingFeeForDeed",
          "RecordingFeeForMortgage",
          "RecordingFeeForMunicipalLienCertificate",
          "RecordingFeeForOtherDocument",
          "RecordingFeeForRelease",
          "RecordingFeeForSubordination",
          "TaxStampForCityDeed",
          "TaxStampForCityMortgage",
          "TaxStampForCountyDeed",
          "TaxStampForCountyMortgage",
          "TaxStampForStateDeed",
          "TaxStampForStateMortgage",
          "TransferTaxTotal",
          "PowerOfAttorneyRecordingFee",
          "OtherRecordingFee",
          "OtherTransferTax",
          "RecordingServiceFee",
          "AppraisalFee",
          "AppraisalManagementCompanyFee",
          "BankruptcyMonitoringFee",
          "CreditReportFee",
          "FloodCertification",
          "FloodCertificationLifeOfLoan",
          "MERSRegistrationFee",
          "PestInspectionFee",
          "TitleRecordingServiceFee",
          "ReinspectionFee",
          "SurveyFee",
          "TaxServiceFee",
          "TaxStatusResearchFee",
          "TitleAbstractFee",
          "TitleBorrowerClosingProtectionLetterFee",
          "TitleCertificationFee",
          "TitleClosingCoordinationFee",
          "TitleClosingFee",
          "TitleClosingProtectionLetterFee",
          "TitleDocumentPreparationFee",
          "TitleEndorsementFee",
          "TitleExaminationFee",
          "TitleFinalPolicyShortFormFee",
          "TitleInsuranceBinderFee",
          "TitleInsuranceFee",
          "TitleLendersCoveragePremium",
          "TitleNotaryFee",
          "TitleServicesSalesTax",
          "TitleUnderwritingIssueResolutionFee",
          "USDARuralDevelopmentGuaranteeFee",
          "VAFundingFee",
          "VerificationOfAssetsFee",
          "VerificationOfEmploymentFee",
          "VerificationOfIncomeFee",
          "VerificationOfResidencyStatusFee",
          "VerificationOfTaxpayerIdentificationFee",
          "VerificationOfTaxReturnFee",
          "TitleCopyOrFaxFee",
          "TitleElectronicDocumentDeliveryFee",
          "TitleFilingFee",
          "TitleCourierFee",
          "EscrowServiceFee",
          "TitleAttorneyFee",
          "TitleProcessingFee",
          "TitleWireTransferFee",
          "TitleDeedPreparationFee",
          "MunicipalLienCertificateFee",
          "TitleReconveyanceFee",
          "MIUpfrontPremium",
          "AttorneyDocumentPreparationFee",
          "ERecordingFee",
          "PrepaidInterest",
          "MIInitialPremium",
          "TitleUpdate203K",
          "AppraisalFieldReviewFee",
          "AsbestosInspectionFee",
          "ElectronicDocumentDeliveryFee",
          "HeatingCoolingInspectionFee",
          "LeadInspectionFee",
          "MoldInspectionFee",
          "TitlePowerOfAttorneyPreparationFee",
          "RadonInspectionFee",
          "RoofInspectionFee",
          "TitleSettlementFee",
          "StateTitleInsuranceFee",
          "StructuralInspectionFee",
          "SepticInspectionFee",
          "Consultants203K",
          "TitleSubEscrowFee"
        ],
        "enum": [
          "Other",
          "ApplicationFee",
          "AppraisalDeskReviewFee",
          "AttorneyFee",
          "CommitmentFee",
          "LenderCourierFee",
          "EscrowHoldbackFee",
          "EscrowWaiverFee",
          "LendersAttorneyFee",
          "LoanOriginationFee",
          "MortgageBrokerFee",
          "PayoffRequestFee",
          "ProcessingFee",
          "RateLockFee",
          "SubordinationFee",
          "UnderwritingFee",
          "WireTransferFee",
          "LenderCertificationFee",
          "LenderCopyOrFaxFee",
          "LenderDocumentPreparationFee",
          "LenderElectronicDocumentDeliveryFee",
          "LenderFilingFee",
          "LockExtensionFee",
          "Points",
          "HomeInspectionFee",
          "HomeownersAssociationDues",
          "HomeownersAssociationServiceFee",
          "HomeownersAssociationSpecialAssessment",
          "HomeWarrantyFee",
          "RealEstateCommissionBuyersBroker",
          "RealEstateCommissionSellersBroker",
          "TitleOwnersCoveragePremium",
          "TemporaryBuydownPoints",
          "BorrowerElectedSurveyFee",
          "RecordingFeeForAssignment",
          "RecordingFeeForDeed",
          "RecordingFeeForMortgage",
          "RecordingFeeForMunicipalLienCertificate",
          "RecordingFeeForOtherDocument",
          "RecordingFeeForRelease",
          "RecordingFeeForSubordination",
          "TaxStampForCityDeed",
          "TaxStampForCityMortgage",
          "TaxStampForCountyDeed",
          "TaxStampForCountyMortgage",
          "TaxStampForStateDeed",
          "TaxStampForStateMortgage",
          "TransferTaxTotal",
          "PowerOfAttorneyRecordingFee",
          "OtherRecordingFee",
          "OtherTransferTax",
          "RecordingServiceFee",
          "AppraisalFee",
          "AppraisalManagementCompanyFee",
          "BankruptcyMonitoringFee",
          "CreditReportFee",
          "FloodCertification",
          "FloodCertificationLifeOfLoan",
          "MERSRegistrationFee",
          "PestInspectionFee",
          "TitleRecordingServiceFee",
          "ReinspectionFee",
          "SurveyFee",
          "TaxServiceFee",
          "TaxStatusResearchFee",
          "TitleAbstractFee",
          "TitleBorrowerClosingProtectionLetterFee",
          "TitleCertificationFee",
          "TitleClosingCoordinationFee",
          "TitleClosingFee",
          "TitleClosingProtectionLetterFee",
          "TitleDocumentPreparationFee",
          "TitleEndorsementFee",
          "TitleExaminationFee",
          "TitleFinalPolicyShortFormFee",
          "TitleInsuranceBinderFee",
          "TitleInsuranceFee",
          "TitleLendersCoveragePremium",
          "TitleNotaryFee",
          "TitleServicesSalesTax",
          "TitleUnderwritingIssueResolutionFee",
          "USDARuralDevelopmentGuaranteeFee",
          "VAFundingFee",
          "VerificationOfAssetsFee",
          "VerificationOfEmploymentFee",
          "VerificationOfIncomeFee",
          "VerificationOfResidencyStatusFee",
          "VerificationOfTaxpayerIdentificationFee",
          "VerificationOfTaxReturnFee",
          "TitleCopyOrFaxFee",
          "TitleElectronicDocumentDeliveryFee",
          "TitleFilingFee",
          "TitleCourierFee",
          "EscrowServiceFee",
          "TitleAttorneyFee",
          "TitleProcessingFee",
          "TitleWireTransferFee",
          "TitleDeedPreparationFee",
          "MunicipalLienCertificateFee",
          "TitleReconveyanceFee",
          "MIUpfrontPremium",
          "AttorneyDocumentPreparationFee",
          "ERecordingFee",
          "PrepaidInterest",
          "MIInitialPremium",
          "TitleUpdate203K",
          "AppraisalFieldReviewFee",
          "AsbestosInspectionFee",
          "ElectronicDocumentDeliveryFee",
          "HeatingCoolingInspectionFee",
          "LeadInspectionFee",
          "MoldInspectionFee",
          "TitlePowerOfAttorneyPreparationFee",
          "RadonInspectionFee",
          "RoofInspectionFee",
          "TitleSettlementFee",
          "StateTitleInsuranceFee",
          "StructuralInspectionFee",
          "SepticInspectionFee",
          "Consultants203K",
          "TitleSubEscrowFee"
        ]
      },
      "ClosingInstruction": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "instruction"
        ],
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "instruction": {
            "type": "string"
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          }
        }
      },
      "ClosingSigningMethod": {
        "type": "string",
        "example": "WetSignedDocuments",
        "x-enumNames": [
          "WetSignedDocuments",
          "ESignedDocuments"
        ],
        "enum": [
          "WetSignedDocuments",
          "ESignedDocuments"
        ]
      },
      "CollectionAction": {
        "type": "string",
        "example": "Add",
        "x-enumNames": [
          "Add",
          "Remove"
        ],
        "enum": [
          "Add",
          "Remove"
        ]
      },
      "ColoradoLicenseType": {
        "type": "string",
        "example": "MortgageCompanyRegistration",
        "x-enumNames": [
          "MortgageCompanyRegistration",
          "SupervisedLenderLicense"
        ],
        "enum": [
          "MortgageCompanyRegistration",
          "SupervisedLenderLicense"
        ]
      },
      "CompensationPaidByType": {
        "type": "string",
        "example": "Borrower",
        "x-enumNames": [
          "Borrower",
          "Lender"
        ],
        "enum": [
          "Borrower",
          "Lender"
        ]
      },
      "ComplianceProvider": {
        "type": "string",
        "example": "Asurity",
        "x-enumNames": [
          "Asurity",
          "ComplianceEase"
        ],
        "enum": [
          "Asurity",
          "ComplianceEase"
        ]
      },
      "ComplianceReport": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "deliveryId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "pdfDocumentId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "provider": {
            "readOnly": true,
            "$ref": "#/components/schemas/ComplianceProvider"
          },
          "result": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComplianceTestResult"
              }
            ]
          },
          "riskLevel": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "sections": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ComplianceReportSection"
            }
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time"
          },
          "warnings": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ComplianceReportSection": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "result": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComplianceTestResult"
              }
            ]
          },
          "subsections": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ComplianceReportSubsection"
            }
          }
        }
      },
      "ComplianceReportSubsection": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "result": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComplianceTestResult"
              }
            ]
          },
          "resultText": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "tests": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ComplianceReportTest"
            }
          }
        }
      },
      "ComplianceReportTest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "explanation": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "result": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComplianceTestResult"
              }
            ]
          }
        }
      },
      "ComplianceTestResult": {
        "type": "string",
        "example": "NotApplicable",
        "x-enumNames": [
          "NotApplicable",
          "Pass",
          "Warn",
          "Fail",
          "NoTestResult",
          "Error"
        ],
        "enum": [
          "NotApplicable",
          "Pass",
          "Warn",
          "Fail",
          "NoTestResult",
          "Error"
        ]
      },
      "ComputedFieldMetadataBoolean": {
        "title": "ComputedFieldMetadataBoolean",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "isOverridden": {
            "type": "boolean",
            "nullable": true
          },
          "overrideDescription": {
            "type": "string",
            "nullable": true
          },
          "overrideValue": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "ComputedFieldMetadataDateOnly": {
        "title": "ComputedFieldMetadataDateOnly",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "isOverridden": {
            "type": "boolean",
            "nullable": true
          },
          "overrideDescription": {
            "type": "string",
            "nullable": true
          },
          "overrideValue": {
            "type": "string",
            "format": "date",
            "nullable": true
          }
        }
      },
      "ComputedFieldMetadataDecimal": {
        "title": "ComputedFieldMetadataDecimal",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "isOverridden": {
            "type": "boolean",
            "nullable": true
          },
          "overrideDescription": {
            "type": "string",
            "nullable": true
          },
          "overrideValue": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          }
        }
      },
      "ComputedFieldMetadataFundingType": {
        "title": "ComputedFieldMetadataFundingType",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "isOverridden": {
            "type": "boolean",
            "nullable": true
          },
          "overrideDescription": {
            "type": "string",
            "nullable": true
          },
          "overrideValue": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/FundingType"
              }
            ]
          }
        }
      },
      "ComputedFieldMetadataUInt16": {
        "title": "ComputedFieldMetadataUInt16",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "isOverridden": {
            "type": "boolean",
            "nullable": true
          },
          "overrideDescription": {
            "type": "string",
            "nullable": true
          },
          "overrideValue": {
            "type": "integer",
            "nullable": true
          }
        }
      },
      "ComputeStatusRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "mode"
        ],
        "properties": {
          "fields": {
            "type": "array",
            "description": "A list of fields to check compute status, provided with the same JSONPath format as given in webhooks (see \"Data webhook paths\") for details.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "groups": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ComputeStatusRequestGroupItem"
            }
          },
          "mode": {
            "$ref": "#/components/schemas/ComputeStatusRequestMode"
          }
        }
      },
      "ComputeStatusRequestGroupItem": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type"
        ],
        "properties": {
          "names": {
            "type": "array",
            "description": "When provided, limit the status check to the given names. Otherwise, all items of the given type are checked.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "type": {
            "$ref": "#/components/schemas/ComputeStatusRequestGroupType"
          }
        }
      },
      "ComputeStatusRequestGroupType": {
        "type": "string",
        "example": "Validations",
        "x-enumNames": [
          "Validations",
          "LoanStages"
        ],
        "enum": [
          "Validations",
          "LoanStages"
        ]
      },
      "ComputeStatusRequestMode": {
        "type": "string",
        "example": "Blocking",
        "x-enumNames": [
          "Blocking"
        ],
        "enum": [
          "Blocking"
        ]
      },
      "ComputeStatusResponse": {
        "type": "object",
        "additionalProperties": false
      },
      "ConcurrentFinancing": {
        "type": "object",
        "description": "The concurrent financing model.",
        "example": {
          "loanAmount": 12500,
          "monthlyPaymentAmount": 250,
          "helocIndicator": true,
          "mortgageType": "Conventional"
        },
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "affordableConcurrentFinancingRepaymentType": {
            "description": "The repayment type of an affordable loan second lien program if other",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AffordableSecondLienRepaymentType"
              }
            ]
          },
          "affordableConcurrentFinancingRepaymentTypeOtherDescription": {
            "type": "string",
            "description": "The repayment type of an affordable loan program if other",
            "nullable": true
          },
          "amountUsedTowardsClosing": {
            "type": "number",
            "description": "The amount this concurrent financing will contribute to the cash to close the loan",
            "format": "decimal",
            "nullable": true
          },
          "belowMarketSubordinateFinancingIndicator": {
            "type": "boolean",
            "description": "Indicates that this concurrent financing is part of an affordable seconds program",
            "nullable": true
          },
          "borrowers": {
            "type": "array",
            "writeOnly": true,
            "description": "This is an array of references to the borrowers who are liable for this concurrent financing",
            "items": {
              "$ref": "#/components/schemas/Borrower"
            }
          },
          "borrowersIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "guid"
            }
          },
          "borrowersRefs": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "computedFields": {
            "type": "object",
            "x-ms-dynamic-schema": {
              "operationId": "GetDynamicSchema",
              "parameters": {
                "entityType": "ConcurrentFinancing",
                "fieldType": "ComputedField",
                "processVersionId": {
                  "parameterResponseReference": "processVersionId"
                }
              }
            },
            "readOnly": true,
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "customFields": {
            "type": "object",
            "x-ms-dynamic-schema": {
              "operationId": "GetDynamicSchema",
              "parameters": {
                "entityType": "ConcurrentFinancing",
                "fieldType": "CustomField",
                "processVersionId": {
                  "parameterResponseReference": "processVersionId"
                }
              }
            },
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "facts": {
            "type": "object",
            "x-ms-dynamic-schema": {
              "operationId": "GetDynamicSchema",
              "parameters": {
                "entityType": "ConcurrentFinancing",
                "fieldType": "Fact",
                "processVersionId": {
                  "parameterResponseReference": "processVersionId"
                }
              }
            },
            "readOnly": true,
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "helocAnnualFee": {
            "type": "number",
            "description": "HELOC annual fee",
            "format": "decimal",
            "nullable": true
          },
          "helocCurrentBalance": {
            "type": "number",
            "description": "HELOC current balance",
            "format": "decimal",
            "nullable": true
          },
          "helocIndicator": {
            "type": "boolean",
            "description": "Is this concurrent financing a HELOC?",
            "nullable": true
          },
          "helocMaximumAPR": {
            "type": "number",
            "description": "HELOC maximum APR",
            "format": "decimal",
            "nullable": true
          },
          "helocMaximumBalance": {
            "type": "number",
            "description": "HELOC maximum balance",
            "format": "decimal",
            "nullable": true
          },
          "helocMinimumPaymentAmount": {
            "type": "number",
            "description": "HELOC minimum payment amount",
            "format": "decimal",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "institutionAddress": {
            "description": "The address of the institution",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ]
          },
          "institutionEmailAddress": {
            "type": "string",
            "description": "The best email address to contact the institution",
            "nullable": true
          },
          "institutionName": {
            "type": "string",
            "description": "Financial institution holding the funding source, typically if it is an account of some kind",
            "nullable": true
          },
          "institutionPhoneNumber": {
            "type": "string",
            "description": "The best phone number to contact the institution",
            "nullable": true
          },
          "interestRate": {
            "type": "number",
            "description": "Interest rate",
            "format": "decimal",
            "nullable": true
          },
          "lienPriorityType": {
            "description": "Lien priority type",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConcurrentFinancingLienPriorityType"
              }
            ]
          },
          "loanAmount": {
            "type": "number",
            "description": "Loan amount",
            "format": "decimal",
            "nullable": true
          },
          "monthlyPaymentAmount": {
            "type": "number",
            "description": "Monthly payment",
            "format": "decimal",
            "nullable": true
          },
          "mortgageType": {
            "description": "If this is a concurrent mortgage, what type of mortgage is it",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MortgageType"
              }
            ]
          },
          "paymentDeferredFiveYearsIndicator": {
            "type": "boolean",
            "description": "Indicates whether the payment is deferred for 5 years. Used by Freddie Mac Affordable loan products.",
            "nullable": true
          },
          "providerOfFinancing": {
            "description": "Provider of financing",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProviderOfFinancing"
              }
            ]
          },
          "providerOfFinancingId": {
            "type": "string",
            "description": "The ID for the provider of the concurrent financing. This ID may be provided by investors like Fannie Mae or Freddie Mac.",
            "nullable": true
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          }
        }
      },
      "ConcurrentFinancingLienPriorityType": {
        "type": "string",
        "example": "FirstLien",
        "x-enumNames": [
          "FirstLien",
          "SecondLien",
          "ThirdLien",
          "FourthLien",
          "Other"
        ],
        "enum": [
          "FirstLien",
          "SecondLien",
          "ThirdLien",
          "FourthLien",
          "Other"
        ]
      },
      "Condition": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "category": {
            "readOnly": true,
            "$ref": "#/components/schemas/AdminCategory"
          },
          "completedAt": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "completionTiming": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConditionCompletionTiming"
              }
            ]
          },
          "completionType": {
            "readOnly": true,
            "$ref": "#/components/schemas/ConditionCompletionType"
          },
          "conditionTemplateExternalIdentifier": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "conditionTemplateId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "conditionTemplateName": {
            "type": "string",
            "readOnly": true
          },
          "documentIds": {
            "type": "array",
            "readOnly": true,
            "items": {
              "type": "string",
              "format": "guid"
            }
          },
          "entityId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "entityType": {
            "type": "string",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "isManual": {
            "type": "boolean",
            "readOnly": true
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "message": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "readOnly": true
          },
          "notes": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/Note"
            }
          },
          "openedAt": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "removedAt": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "readOnly": true,
            "$ref": "#/components/schemas/ConditionStatus"
          },
          "taskIds": {
            "type": "array",
            "readOnly": true,
            "items": {
              "type": "string",
              "format": "guid"
            }
          }
        }
      },
      "ConditionCompletionTiming": {
        "type": "string",
        "example": "PriorToClosing",
        "x-enumNames": [
          "PriorToClosing",
          "PriorToFunding",
          "None"
        ],
        "enum": [
          "PriorToClosing",
          "PriorToFunding",
          "None"
        ]
      },
      "ConditionCompletionType": {
        "type": "string",
        "example": "Manual",
        "x-enumNames": [
          "Manual",
          "Automatic",
          "ManualAndAutomatic"
        ],
        "enum": [
          "Manual",
          "Automatic",
          "ManualAndAutomatic"
        ]
      },
      "ConditionCreatedWebhook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "conditionId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "entityId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "entityType": {
            "type": "string",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "loanChannel": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanChannel"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "retries": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "sourceType": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSourceType"
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSubscriptionType"
          },
          "userId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "version": {
            "readOnly": true,
            "$ref": "#/components/schemas/ApiVersion"
          }
        }
      },
      "ConditionNoteAddedWebhook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "conditionId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "entityId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "entityType": {
            "type": "string",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "loanChannel": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanChannel"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "noteType": {
            "readOnly": true,
            "$ref": "#/components/schemas/NoteType"
          },
          "retries": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "sourceType": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSourceType"
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSubscriptionType"
          },
          "userId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "version": {
            "readOnly": true,
            "$ref": "#/components/schemas/ApiVersion"
          }
        }
      },
      "ConditionOfAppraisal": {
        "type": "string",
        "example": "AsIs",
        "x-enumNames": [
          "AsIs",
          "SubjectToCompletionPerPlans",
          "SubjectToRepairsAndConditions",
          "Other"
        ],
        "enum": [
          "AsIs",
          "SubjectToCompletionPerPlans",
          "SubjectToRepairsAndConditions",
          "Other"
        ]
      },
      "ConditionStatus": {
        "type": "string",
        "example": "Open",
        "x-enumNames": [
          "Open",
          "Completed",
          "Cancelled",
          "Removed",
          "Pending3rdParty"
        ],
        "enum": [
          "Open",
          "Completed",
          "Cancelled",
          "Removed",
          "Pending3rdParty"
        ]
      },
      "ConditionStatusChangedWebhook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "conditionId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "entityId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "entityType": {
            "type": "string",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "loanChannel": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanChannel"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "retries": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "sourceType": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSourceType"
          },
          "status": {
            "readOnly": true,
            "$ref": "#/components/schemas/ConditionStatus"
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSubscriptionType"
          },
          "userId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "version": {
            "readOnly": true,
            "$ref": "#/components/schemas/ApiVersion"
          }
        }
      },
      "ConflictSharedInterest": {
        "type": "string",
        "example": "SharedHoldingCompany",
        "x-enumNames": [
          "SharedHoldingCompany",
          "SharedOfficer",
          "SharedOfficeSpace"
        ],
        "enum": [
          "SharedHoldingCompany",
          "SharedOfficer",
          "SharedOfficeSpace"
        ]
      },
      "ConnecticutLicenseType": {
        "type": "string",
        "example": "MortgageLenderLicense",
        "x-enumNames": [
          "MortgageLenderLicense",
          "ConsumerCollectionAgencyLicense"
        ],
        "enum": [
          "MortgageLenderLicense",
          "ConsumerCollectionAgencyLicense"
        ]
      },
      "ConstructionLoanDetails": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "certificateOfOccupancyDate": {
            "type": "string",
            "description": "Certificate of occupancy date",
            "format": "date",
            "nullable": true
          },
          "constructionCompletionDate": {
            "type": "string",
            "description": "Construction completion date",
            "format": "date",
            "nullable": true
          },
          "constructionImprovementCostsAmount": {
            "type": "number",
            "description": "The cost of the improvements to the lot - e.g. of the actual construction work being done",
            "format": "decimal",
            "nullable": true
          },
          "constructionLoanInterestReserveAmount": {
            "type": "number",
            "description": "The reserve amount required by the lender to pay interest on advance amount used for construction. For construction loans",
            "format": "decimal",
            "nullable": true
          },
          "constructionLoanMultipleDrawIndicator": {
            "type": "boolean",
            "description": "Whether there are multiple advances provided during the construction period on the loan.",
            "nullable": true
          },
          "constructionLoanTotalTermMonthsCount": {
            "type": "integer",
            "readOnly": true,
            "description": "The total term of a construction loan, including the construction phase plus the fully amortizing phase.",
            "nullable": true
          },
          "constructionLoanType": {
            "description": "The type of construction loan - e.g. construction to perm, number of closings, etc",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConstructionLoanType"
              }
            ]
          },
          "constructionPeriodInterestRatePercent": {
            "type": "number",
            "description": "The interest rate to be used for calculations during construction period.",
            "format": "decimal",
            "nullable": true
          },
          "constructionPeriodNumberOfMonthsCount": {
            "type": "integer",
            "description": "The number of months construction is expected to take to complete",
            "nullable": true
          },
          "constructionPhaseInterestPaymentFrequencyType": {
            "description": "How frequently interest payments are due during the construction phase.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConstructionPhaseInterestPaymentFrequencyType"
              }
            ]
          },
          "constructionPhaseInterestPaymentMethodType": {
            "description": "How are the construction phase interest payments paid.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConstructionPhaseInterestPaymentMethodType"
              }
            ]
          },
          "constructionPhaseInterestPaymentType": {
            "description": "Represents whether interest is payable periodically or at the end of construction.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConstructionPhaseInterestPaymentType"
              }
            ]
          },
          "constructionStartDate": {
            "type": "string",
            "description": "Construction start date",
            "format": "date",
            "nullable": true
          },
          "constructionStatusType": {
            "description": "Specifies the physical status of the structure. For construction loans.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConstructionStatusType"
              }
            ]
          },
          "constructionToPermanentClosingFeatureType": {
            "description": "The type of feature associated with closing for the construction to permanent loan.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConstructionToPermanentClosingFeatureType"
              }
            ]
          },
          "constructionToPermanentFirstPaymentDueDate": {
            "type": "string",
            "description": "The due date of the first payment of the permanent mortgage phase of a construction to permanent loan.",
            "format": "date",
            "nullable": true
          },
          "constructionToPermanentRecertificationDate": {
            "type": "string",
            "description": "The date when the value of the property is re-certified upon completion of the construction as part of the conversion to permanent financing.",
            "format": "date",
            "nullable": true
          },
          "constructionToPermanentRecertificationValueAmount": {
            "type": "number",
            "description": "The re-certified property value upon completion of the construction as part of the conversion to permanent financing.",
            "format": "decimal",
            "nullable": true
          },
          "estimatedInterestCalculationMethodType": {
            "description": "Determines whether half the loan value or the entire loan value is used to calculate the estimated interest amount",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConstructionLoanEstimatedInterestCalculationMethodType"
              }
            ]
          },
          "landAppraisedValue": {
            "type": "number",
            "description": "The value of the lot as most recently appraised",
            "format": "decimal",
            "nullable": true
          },
          "landEstimatedValueAmount": {
            "type": "number",
            "description": "This is the estimated present value of the land at the time of the loan application.",
            "format": "decimal",
            "nullable": true
          },
          "landOriginalCostAmount": {
            "type": "number",
            "description": "The cost of the lot when it was originally acquired",
            "format": "decimal",
            "nullable": true
          },
          "useLandAppraisedValue": {
            "type": "boolean",
            "description": "Indicates whether land appraised value should be used to calculate acquisition cost. This will affect the LTV calculation. ",
            "nullable": true
          }
        }
      },
      "ConstructionLoanEstimatedInterestCalculationMethodType": {
        "type": "string",
        "example": "FullLoanCommitment",
        "x-enumNames": [
          "FullLoanCommitment",
          "HalfLoanCommitment"
        ],
        "enum": [
          "FullLoanCommitment",
          "HalfLoanCommitment"
        ]
      },
      "ConstructionLoanType": {
        "type": "string",
        "example": "ConstructionToPermanentOneClosing",
        "x-enumNames": [
          "ConstructionToPermanentOneClosing",
          "ConstructionToPermanentTwoClosings",
          "ConstructionOnly"
        ],
        "enum": [
          "ConstructionToPermanentOneClosing",
          "ConstructionToPermanentTwoClosings",
          "ConstructionOnly"
        ]
      },
      "ConstructionMethodType": {
        "type": "string",
        "example": "Manufactured",
        "x-enumNames": [
          "Manufactured",
          "MHAdvantage",
          "SiteBuilt",
          "MobileHome",
          "Modular",
          "OnFrameModular",
          "Other"
        ],
        "enum": [
          "Manufactured",
          "MHAdvantage",
          "SiteBuilt",
          "MobileHome",
          "Modular",
          "OnFrameModular",
          "Other"
        ]
      },
      "ConstructionPhaseInterestPaymentFrequencyType": {
        "type": "string",
        "example": "Biweekly",
        "x-enumNames": [
          "Biweekly",
          "Monthly"
        ],
        "enum": [
          "Biweekly",
          "Monthly"
        ]
      },
      "ConstructionPhaseInterestPaymentMethodType": {
        "type": "string",
        "example": "AddToPermanentLoanAmount",
        "x-enumNames": [
          "AddToPermanentLoanAmount",
          "BilledToBorrower",
          "Other"
        ],
        "enum": [
          "AddToPermanentLoanAmount",
          "BilledToBorrower",
          "Other"
        ]
      },
      "ConstructionPhaseInterestPaymentType": {
        "type": "string",
        "example": "InterestPaidAtEndOfConstruction",
        "x-enumNames": [
          "InterestPaidAtEndOfConstruction",
          "InterestPaidPeriodically"
        ],
        "enum": [
          "InterestPaidAtEndOfConstruction",
          "InterestPaidPeriodically"
        ]
      },
      "ConstructionStatusType": {
        "type": "string",
        "example": "Planned",
        "x-enumNames": [
          "Planned",
          "Proposed",
          "UnderConstruction"
        ],
        "enum": [
          "Planned",
          "Proposed",
          "UnderConstruction"
        ]
      },
      "ConstructionToPermanentClosingFeatureType": {
        "type": "string",
        "example": "AutomaticConversion",
        "x-enumNames": [
          "AutomaticConversion",
          "ConvertibleARM",
          "ModificationAgreement",
          "NewNote",
          "Other"
        ],
        "enum": [
          "AutomaticConversion",
          "ConvertibleARM",
          "ModificationAgreement",
          "NewNote",
          "Other"
        ]
      },
      "ConversionScheduleType": {
        "type": "string",
        "example": "FirstAndSecond",
        "x-enumNames": [
          "FirstAndSecond",
          "FirstThroughFifth",
          "FirstThroughThird",
          "SecondThroughTenth",
          "ThirdThroughFifth"
        ],
        "enum": [
          "FirstAndSecond",
          "FirstThroughFifth",
          "FirstThroughThird",
          "SecondThroughTenth",
          "ThirdThroughFifth"
        ]
      },
      "County": {
        "type": "string",
        "example": "Abbeville County",
        "x-enumNames": [
          "AbbevilleCounty",
          "AcadiaParish",
          "AccomackCounty",
          "AdaCounty",
          "AdairCounty",
          "AdamsCounty",
          "AddisonCounty",
          "AdjuntasMunicipio",
          "AguadaMunicipio",
          "AguadillaMunicipio",
          "AguasBuenasMunicipio",
          "AibonitoMunicipio",
          "AikenCounty",
          "AitkinCounty",
          "AlachuaCounty",
          "AlamanceCounty",
          "AlamedaCounty",
          "AlamosaCounty",
          "AlbanyCounty",
          "AlbemarleCounty",
          "AlconaCounty",
          "AlcornCounty",
          "AleutiansEastBorough",
          "AleutiansWestCensusArea",
          "AlexanderCounty",
          "Alexandriacity",
          "AlfalfaCounty",
          "AlgerCounty",
          "AllamakeeCounty",
          "AlleganCounty",
          "AlleganyCounty",
          "AlleghanyCounty",
          "AlleghenyCounty",
          "AllenCounty",
          "AllenParish",
          "AllendaleCounty",
          "AlpenaCounty",
          "AlpineCounty",
          "AmadorCounty",
          "AmeliaCounty",
          "AmherstCounty",
          "AmiteCounty",
          "AnascoMunicipio",
          "AnchorageMunicipality",
          "AndersonCounty",
          "AndrewCounty",
          "AndrewsCounty",
          "AndroscogginCounty",
          "AngelinaCounty",
          "AnneArundelCounty",
          "AnokaCounty",
          "AnsonCounty",
          "AntelopeCounty",
          "AntrimCounty",
          "ApacheCounty",
          "AppanooseCounty",
          "ApplingCounty",
          "AppomattoxCounty",
          "AransasCounty",
          "ArapahoeCounty",
          "ArcherCounty",
          "ArchuletaCounty",
          "AreciboMunicipio",
          "ArenacCounty",
          "ArkansasCounty",
          "ArlingtonCounty",
          "ArmstrongCounty",
          "AroostookCounty",
          "ArroyoMunicipio",
          "ArthurCounty",
          "AscensionParish",
          "AsheCounty",
          "AshlandCounty",
          "AshleyCounty",
          "AshtabulaCounty",
          "AsotinCounty",
          "AssumptionParish",
          "AtascosaCounty",
          "AtchisonCounty",
          "AthensCounty",
          "AtkinsonCounty",
          "AtlanticCounty",
          "AtokaCounty",
          "AttalaCounty",
          "AudrainCounty",
          "AudubonCounty",
          "AuglaizeCounty",
          "AugustaCounty",
          "AuroraCounty",
          "AustinCounty",
          "AutaugaCounty",
          "AveryCounty",
          "AvoyellesParish",
          "BacaCounty",
          "BaconCounty",
          "BaileyCounty",
          "BakerCounty",
          "BaldwinCounty",
          "BallardCounty",
          "BaltimoreCounty",
          "Baltimorecity",
          "BambergCounty",
          "BanderaCounty",
          "BanksCounty",
          "BannerCounty",
          "BannockCounty",
          "BaragaCounty",
          "BarberCounty",
          "BarbourCounty",
          "BarcelonetaMunicipio",
          "BarnesCounty",
          "BarnstableCounty",
          "BarnwellCounty",
          "BarranquitasMunicipio",
          "BarrenCounty",
          "BarronCounty",
          "BarrowCounty",
          "BarryCounty",
          "BartholomewCounty",
          "BartonCounty",
          "BartowCounty",
          "BastropCounty",
          "BatesCounty",
          "BathCounty",
          "BaxterCounty",
          "BayCounty",
          "BayamonMunicipio",
          "BayfieldCounty",
          "BaylorCounty",
          "BeadleCounty",
          "BearLakeCounty",
          "BeaufortCounty",
          "BeauregardParish",
          "BeaverCounty",
          "BeaverheadCounty",
          "BeckerCounty",
          "BeckhamCounty",
          "BedfordCounty",
          "BeeCounty",
          "BelknapCounty",
          "BellCounty",
          "BelmontCounty",
          "BeltramiCounty",
          "BenHillCounty",
          "BenewahCounty",
          "BennettCounty",
          "BenningtonCounty",
          "BensonCounty",
          "BentCounty",
          "BentonCounty",
          "BenzieCounty",
          "BergenCounty",
          "BerkeleyCounty",
          "BerksCounty",
          "BerkshireCounty",
          "BernalilloCounty",
          "BerrienCounty",
          "BertieCounty",
          "BethelCensusArea",
          "BexarCounty",
          "BibbCounty",
          "BienvilleParish",
          "BigHornCounty",
          "BigStoneCounty",
          "BillingsCounty",
          "BinghamCounty",
          "BlackHawkCounty",
          "BlackfordCounty",
          "BladenCounty",
          "BlaineCounty",
          "BlairCounty",
          "BlancoCounty",
          "BlandCounty",
          "BleckleyCounty",
          "BledsoeCounty",
          "BlountCounty",
          "BlueEarthCounty",
          "BoiseCounty",
          "BolivarCounty",
          "BollingerCounty",
          "BonHommeCounty",
          "BondCounty",
          "BonnerCounty",
          "BonnevilleCounty",
          "BooneCounty",
          "BordenCounty",
          "BosqueCounty",
          "BossierParish",
          "BotetourtCounty",
          "BottineauCounty",
          "BoulderCounty",
          "BoundaryCounty",
          "BourbonCounty",
          "BowieCounty",
          "BowmanCounty",
          "BoxButteCounty",
          "BoxElderCounty",
          "BoydCounty",
          "BoyleCounty",
          "BrackenCounty",
          "BradfordCounty",
          "BradleyCounty",
          "BranchCounty",
          "BrantleyCounty",
          "BraxtonCounty",
          "BrazoriaCounty",
          "BrazosCounty",
          "BreathittCounty",
          "BreckinridgeCounty",
          "BremerCounty",
          "BrevardCounty",
          "BrewsterCounty",
          "BriscoeCounty",
          "BristolBayBorough",
          "BristolCounty",
          "Bristolcity",
          "BroadwaterCounty",
          "BronxCounty",
          "BrookeCounty",
          "BrookingsCounty",
          "BrooksCounty",
          "BroomeCounty",
          "BroomfieldCounty",
          "BrowardCounty",
          "BrownCounty",
          "BruleCounty",
          "BrunswickCounty",
          "BryanCounty",
          "BuchananCounty",
          "BuckinghamCounty",
          "BucksCounty",
          "BuenaVistaCounty",
          "BuenaVistacity",
          "BuffaloCounty",
          "BullittCounty",
          "BullochCounty",
          "BullockCounty",
          "BuncombeCounty",
          "BureauCounty",
          "BurkeCounty",
          "BurleighCounty",
          "BurlesonCounty",
          "BurlingtonCounty",
          "BurnetCounty",
          "BurnettCounty",
          "BurtCounty",
          "ButlerCounty",
          "ButteCounty",
          "ButtsCounty",
          "CabarrusCounty",
          "CabellCounty",
          "CaboRojoMunicipio",
          "CacheCounty",
          "CaddoCounty",
          "CaddoParish",
          "CaguasMunicipio",
          "CalaverasCounty",
          "CalcasieuParish",
          "CaldwellCounty",
          "CaldwellParish",
          "CaledoniaCounty",
          "CalhounCounty",
          "CallahanCounty",
          "CallawayCounty",
          "CallowayCounty",
          "CalumetCounty",
          "CalvertCounty",
          "CamasCounty",
          "CambriaCounty",
          "CamdenCounty",
          "CameronCounty",
          "CameronParish",
          "CampCounty",
          "CampbellCounty",
          "CamuyMunicipio",
          "CanadianCounty",
          "CandlerCounty",
          "CannonCounty",
          "CanovanasMunicipio",
          "CanyonCounty",
          "CapeGirardeauCounty",
          "CapeMayCounty",
          "CarbonCounty",
          "CaribouCounty",
          "CarlisleCounty",
          "CarltonCounty",
          "CarolinaMunicipio",
          "CarolineCounty",
          "CarrollCounty",
          "CarsonCity",
          "CarsonCounty",
          "CarterCounty",
          "CarteretCounty",
          "CarverCounty",
          "CascadeCounty",
          "CaseyCounty",
          "CassCounty",
          "CassiaCounty",
          "CastroCounty",
          "CaswellCounty",
          "CatahoulaParish",
          "CatanoMunicipio",
          "CatawbaCounty",
          "CatoosaCounty",
          "CatronCounty",
          "CattaraugusCounty",
          "CavalierCounty",
          "CayeyMunicipio",
          "CayugaCounty",
          "CecilCounty",
          "CedarCounty",
          "CeibaMunicipio",
          "CentreCounty",
          "CerroGordoCounty",
          "ChaffeeCounty",
          "ChambersCounty",
          "ChampaignCounty",
          "CharitonCounty",
          "CharlesCityCounty",
          "CharlesCounty",
          "CharlesMixCounty",
          "CharlestonCounty",
          "CharlevoixCounty",
          "CharlotteCounty",
          "Charlottesvillecity",
          "CharltonCounty",
          "ChaseCounty",
          "ChathamCounty",
          "ChattahoocheeCounty",
          "ChattoogaCounty",
          "ChautauquaCounty",
          "ChavesCounty",
          "CheathamCounty",
          "CheboyganCounty",
          "ChelanCounty",
          "ChemungCounty",
          "ChenangoCounty",
          "CherokeeCounty",
          "CherryCounty",
          "Chesapeakecity",
          "CheshireCounty",
          "ChesterCounty",
          "ChesterfieldCounty",
          "CheyenneCounty",
          "ChickasawCounty",
          "ChicotCounty",
          "ChildressCounty",
          "ChiltonCounty",
          "ChippewaCounty",
          "ChisagoCounty",
          "ChittendenCounty",
          "ChoctawCounty",
          "ChouteauCounty",
          "ChowanCounty",
          "ChristianCounty",
          "ChugachCensusArea",
          "ChurchillCounty",
          "CialesMunicipio",
          "CibolaCounty",
          "CidraMunicipio",
          "CimarronCounty",
          "CitrusCounty",
          "ClackamasCounty",
          "ClaiborneCounty",
          "ClaiborneParish",
          "ClallamCounty",
          "ClareCounty",
          "ClarendonCounty",
          "ClarionCounty",
          "ClarkCounty",
          "ClarkeCounty",
          "ClatsopCounty",
          "ClayCounty",
          "ClaytonCounty",
          "ClearCreekCounty",
          "ClearfieldCounty",
          "ClearwaterCounty",
          "CleburneCounty",
          "ClermontCounty",
          "ClevelandCounty",
          "ClinchCounty",
          "ClintonCounty",
          "CloudCounty",
          "CoahomaCounty",
          "CoalCounty",
          "CoamoMunicipio",
          "CobbCounty",
          "CochiseCounty",
          "CochranCounty",
          "CockeCounty",
          "CoconinoCounty",
          "CodingtonCounty",
          "CoffeeCounty",
          "CoffeyCounty",
          "CokeCounty",
          "ColbertCounty",
          "ColeCounty",
          "ColemanCounty",
          "ColesCounty",
          "ColfaxCounty",
          "ColletonCounty",
          "CollierCounty",
          "CollinCounty",
          "CollingsworthCounty",
          "ColonialHeightscity",
          "ColoradoCounty",
          "ColquittCounty",
          "ColumbiaCounty",
          "ColumbianaCounty",
          "ColumbusCounty",
          "ColusaCounty",
          "ComalCounty",
          "ComancheCounty",
          "ComerioMunicipio",
          "ConchoCounty",
          "ConcordiaParish",
          "ConecuhCounty",
          "ConejosCounty",
          "ContraCostaCounty",
          "ConverseCounty",
          "ConwayCounty",
          "CookCounty",
          "CookeCounty",
          "CooperCounty",
          "CoosCounty",
          "CoosaCounty",
          "CopiahCounty",
          "CopperRiverCensusArea",
          "CorozalMunicipio",
          "CorsonCounty",
          "CortlandCounty",
          "CoryellCounty",
          "CoshoctonCounty",
          "CostillaCounty",
          "CottleCounty",
          "CottonCounty",
          "CottonwoodCounty",
          "CovingtonCounty",
          "Covingtoncity",
          "CowetaCounty",
          "CowleyCounty",
          "CowlitzCounty",
          "CraigCounty",
          "CraigheadCounty",
          "CraneCounty",
          "CravenCounty",
          "CrawfordCounty",
          "CreekCounty",
          "CrenshawCounty",
          "CrispCounty",
          "CrittendenCounty",
          "CrockettCounty",
          "CrookCounty",
          "CrosbyCounty",
          "CrossCounty",
          "CrowWingCounty",
          "CrowleyCounty",
          "CulbersonCounty",
          "CulebraMunicipio",
          "CullmanCounty",
          "CulpeperCounty",
          "CumberlandCounty",
          "CumingCounty",
          "CurrituckCounty",
          "CurryCounty",
          "CusterCounty",
          "CuyahogaCounty",
          "DadeCounty",
          "DaggettCounty",
          "DakotaCounty",
          "DaleCounty",
          "DallamCounty",
          "DallasCounty",
          "DaneCounty",
          "DanielsCounty",
          "Danvillecity",
          "DareCounty",
          "DarkeCounty",
          "DarlingtonCounty",
          "DauphinCounty",
          "DavidsonCounty",
          "DavieCounty",
          "DaviessCounty",
          "DavisCounty",
          "DavisonCounty",
          "DawesCounty",
          "DawsonCounty",
          "DayCounty",
          "DeBacaCounty",
          "DeKalbCounty",
          "DeSotoCounty",
          "DeSotoParish",
          "DeWittCounty",
          "DeafSmithCounty",
          "DearbornCounty",
          "DecaturCounty",
          "DeerLodgeCounty",
          "DefianceCounty",
          "DelNorteCounty",
          "DelawareCounty",
          "DeltaCounty",
          "DenaliBorough",
          "DentCounty",
          "DentonCounty",
          "DenverCounty",
          "DesMoinesCounty",
          "DeschutesCounty",
          "DeshaCounty",
          "DeuelCounty",
          "DeweyCounty",
          "DickensCounty",
          "DickensonCounty",
          "DickeyCounty",
          "DickinsonCounty",
          "DicksonCounty",
          "DillinghamCensusArea",
          "DillonCounty",
          "DimmitCounty",
          "DinwiddieCounty",
          "DistrictofColumbia",
          "DivideCounty",
          "DixieCounty",
          "DixonCounty",
          "DoddridgeCounty",
          "DodgeCounty",
          "DoloresCounty",
          "DonaAnaCounty",
          "DoniphanCounty",
          "DonleyCounty",
          "DoolyCounty",
          "DoorCounty",
          "DoradoMunicipio",
          "DorchesterCounty",
          "DoughertyCounty",
          "DouglasCounty",
          "DrewCounty",
          "DuPageCounty",
          "DuboisCounty",
          "DubuqueCounty",
          "DuchesneCounty",
          "DukesCounty",
          "DundyCounty",
          "DunklinCounty",
          "DunnCounty",
          "DuplinCounty",
          "DurhamCounty",
          "DutchessCounty",
          "DuvalCounty",
          "DyerCounty",
          "EagleCounty",
          "EarlyCounty",
          "EastBatonRougeParish",
          "EastCarrollParish",
          "EastFelicianaParish",
          "EastlandCounty",
          "EatonCounty",
          "EauClaireCounty",
          "EcholsCounty",
          "EctorCounty",
          "EddyCounty",
          "EdgarCounty",
          "EdgecombeCounty",
          "EdgefieldCounty",
          "EdmonsonCounty",
          "EdmundsCounty",
          "EdwardsCounty",
          "EffinghamCounty",
          "ElDoradoCounty",
          "ElPasoCounty",
          "ElbertCounty",
          "ElkCounty",
          "ElkhartCounty",
          "ElkoCounty",
          "ElliottCounty",
          "EllisCounty",
          "EllsworthCounty",
          "ElmoreCounty",
          "EmanuelCounty",
          "EmeryCounty",
          "EmmetCounty",
          "EmmonsCounty",
          "Emporiacity",
          "ErathCounty",
          "ErieCounty",
          "EscambiaCounty",
          "EsmeraldaCounty",
          "EssexCounty",
          "EstillCounty",
          "EtowahCounty",
          "EurekaCounty",
          "EvangelineParish",
          "EvansCounty",
          "FairbanksNorthStarBorough",
          "FairfaxCounty",
          "Fairfaxcity",
          "FairfieldCounty",
          "FajardoMunicipio",
          "FallRiverCounty",
          "FallonCounty",
          "FallsChurchcity",
          "FallsCounty",
          "FanninCounty",
          "FaribaultCounty",
          "FaulkCounty",
          "FaulknerCounty",
          "FauquierCounty",
          "FayetteCounty",
          "FentressCounty",
          "FergusCounty",
          "FerryCounty",
          "FillmoreCounty",
          "FinneyCounty",
          "FisherCounty",
          "FlaglerCounty",
          "FlatheadCounty",
          "FlemingCounty",
          "FlorenceCounty",
          "FloridaMunicipio",
          "FloydCounty",
          "FluvannaCounty",
          "FoardCounty",
          "FondduLacCounty",
          "FordCounty",
          "ForestCounty",
          "ForrestCounty",
          "ForsythCounty",
          "FortBendCounty",
          "FosterCounty",
          "FountainCounty",
          "FranklinCounty",
          "FranklinParish",
          "Franklincity",
          "FrederickCounty",
          "Fredericksburgcity",
          "FreebornCounty",
          "FreestoneCounty",
          "FremontCounty",
          "FresnoCounty",
          "FrioCounty",
          "FrontierCounty",
          "FultonCounty",
          "FurnasCounty",
          "GadsdenCounty",
          "GageCounty",
          "GainesCounty",
          "Galaxcity",
          "GallatinCounty",
          "GalliaCounty",
          "GalvestonCounty",
          "GardenCounty",
          "GarfieldCounty",
          "GarlandCounty",
          "GarrardCounty",
          "GarrettCounty",
          "GarvinCounty",
          "GarzaCounty",
          "GasconadeCounty",
          "GastonCounty",
          "GatesCounty",
          "GearyCounty",
          "GeaugaCounty",
          "GemCounty",
          "GeneseeCounty",
          "GenevaCounty",
          "GentryCounty",
          "GeorgeCounty",
          "GeorgetownCounty",
          "GibsonCounty",
          "GilaCounty",
          "GilchristCounty",
          "GilesCounty",
          "GillespieCounty",
          "GilliamCounty",
          "GilmerCounty",
          "GilpinCounty",
          "GlacierCounty",
          "GladesCounty",
          "GladwinCounty",
          "GlascockCounty",
          "GlasscockCounty",
          "GlennCounty",
          "GloucesterCounty",
          "GlynnCounty",
          "GogebicCounty",
          "GoldenValleyCounty",
          "GoliadCounty",
          "GonzalesCounty",
          "GoochlandCounty",
          "GoodhueCounty",
          "GoodingCounty",
          "GordonCounty",
          "GoshenCounty",
          "GosperCounty",
          "GoveCounty",
          "GradyCounty",
          "GraftonCounty",
          "GrahamCounty",
          "GraingerCounty",
          "GrandCounty",
          "GrandForksCounty",
          "GrandIsleCounty",
          "GrandTraverseCounty",
          "GraniteCounty",
          "GrantCounty",
          "GrantParish",
          "GranvilleCounty",
          "GratiotCounty",
          "GravesCounty",
          "GrayCounty",
          "GraysHarborCounty",
          "GraysonCounty",
          "GreeleyCounty",
          "GreenCounty",
          "GreenLakeCounty",
          "GreenbrierCounty",
          "GreeneCounty",
          "GreenleeCounty",
          "GreensvilleCounty",
          "GreenupCounty",
          "GreenvilleCounty",
          "GreenwoodCounty",
          "GreerCounty",
          "GreggCounty",
          "GregoryCounty",
          "GrenadaCounty",
          "GriggsCounty",
          "GrimesCounty",
          "GrundyCounty",
          "GuadalupeCounty",
          "GuanicaMunicipio",
          "GuayamaMunicipio",
          "GuayanillaMunicipio",
          "GuaynaboMunicipio",
          "GuernseyCounty",
          "GuilfordCounty",
          "GulfCounty",
          "GunnisonCounty",
          "GuraboMunicipio",
          "GuthrieCounty",
          "GwinnettCounty",
          "HaakonCounty",
          "HabershamCounty",
          "HainesBorough",
          "HaleCounty",
          "HalifaxCounty",
          "HallCounty",
          "HamblenCounty",
          "HamiltonCounty",
          "HamlinCounty",
          "HampdenCounty",
          "HampshireCounty",
          "HamptonCounty",
          "Hamptoncity",
          "HancockCounty",
          "HandCounty",
          "HanoverCounty",
          "HansfordCounty",
          "HansonCounty",
          "HaralsonCounty",
          "HardeeCounty",
          "HardemanCounty",
          "HardinCounty",
          "HardingCounty",
          "HardyCounty",
          "HarfordCounty",
          "HarlanCounty",
          "HarmonCounty",
          "HarnettCounty",
          "HarneyCounty",
          "HarperCounty",
          "HarrisCounty",
          "HarrisonCounty",
          "Harrisonburgcity",
          "HartCounty",
          "HartfordCounty",
          "HartleyCounty",
          "HarveyCounty",
          "HaskellCounty",
          "HatilloMunicipio",
          "HawaiiCounty",
          "HawkinsCounty",
          "HayesCounty",
          "HaysCounty",
          "HaywoodCounty",
          "HeardCounty",
          "HemphillCounty",
          "HempsteadCounty",
          "HendersonCounty",
          "HendricksCounty",
          "HendryCounty",
          "HennepinCounty",
          "HenricoCounty",
          "HenryCounty",
          "HerkimerCounty",
          "HernandoCounty",
          "HertfordCounty",
          "HettingerCounty",
          "HickmanCounty",
          "HickoryCounty",
          "HidalgoCounty",
          "HighlandCounty",
          "HighlandsCounty",
          "HillCounty",
          "HillsboroughCounty",
          "HillsdaleCounty",
          "HindsCounty",
          "HinsdaleCounty",
          "HitchcockCounty",
          "HockingCounty",
          "HockleyCounty",
          "HodgemanCounty",
          "HokeCounty",
          "HolmesCounty",
          "HoltCounty",
          "HonoluluCounty",
          "HoodCounty",
          "HoodRiverCounty",
          "HookerCounty",
          "HoonahAngoonCensusArea",
          "Hopewellcity",
          "HopkinsCounty",
          "HormiguerosMunicipio",
          "HorryCounty",
          "HotSpringCounty",
          "HotSpringsCounty",
          "HoughtonCounty",
          "HoustonCounty",
          "HowardCounty",
          "HowellCounty",
          "HubbardCounty",
          "HudsonCounty",
          "HudspethCounty",
          "HuerfanoCounty",
          "HughesCounty",
          "HumacaoMunicipio",
          "HumboldtCounty",
          "HumphreysCounty",
          "HuntCounty",
          "HunterdonCounty",
          "HuntingdonCounty",
          "HuntingtonCounty",
          "HuronCounty",
          "HutchinsonCounty",
          "HydeCounty",
          "IberiaParish",
          "IbervilleParish",
          "IdaCounty",
          "IdahoCounty",
          "ImperialCounty",
          "IndependenceCounty",
          "IndianRiverCounty",
          "IndianaCounty",
          "InghamCounty",
          "InyoCounty",
          "IoniaCounty",
          "IoscoCounty",
          "IowaCounty",
          "IredellCounty",
          "IrionCounty",
          "IronCounty",
          "IroquoisCounty",
          "IrwinCounty",
          "IsabelaMunicipio",
          "IsabellaCounty",
          "IsantiCounty",
          "IslandCounty",
          "IsleofWightCounty",
          "IssaquenaCounty",
          "ItascaCounty",
          "ItawambaCounty",
          "IzardCounty",
          "JackCounty",
          "JacksonCounty",
          "JacksonParish",
          "JamesCityCounty",
          "JasperCounty",
          "JayCounty",
          "JayuyaMunicipio",
          "JeffDavisCounty",
          "JeffersonCounty",
          "JeffersonDavisCounty",
          "JeffersonDavisParish",
          "JeffersonParish",
          "JenkinsCounty",
          "JenningsCounty",
          "JerauldCounty",
          "JeromeCounty",
          "JerseyCounty",
          "JessamineCounty",
          "JewellCounty",
          "JimHoggCounty",
          "JimWellsCounty",
          "JoDaviessCounty",
          "JohnsonCounty",
          "JohnstonCounty",
          "JonesCounty",
          "JosephineCounty",
          "JuabCounty",
          "JuanaDiazMunicipio",
          "JudithBasinCounty",
          "JuncosMunicipio",
          "JuneauCityandBorough",
          "JuneauCounty",
          "JuniataCounty",
          "KalamazooCounty",
          "KalawaoCounty",
          "KalkaskaCounty",
          "KanabecCounty",
          "KanawhaCounty",
          "KandiyohiCounty",
          "KaneCounty",
          "KankakeeCounty",
          "KarnesCounty",
          "KauaiCounty",
          "KaufmanCounty",
          "KayCounty",
          "KearneyCounty",
          "KearnyCounty",
          "KeithCounty",
          "KemperCounty",
          "KenaiPeninsulaBorough",
          "KendallCounty",
          "KenedyCounty",
          "KennebecCounty",
          "KenoshaCounty",
          "KentCounty",
          "KentonCounty",
          "KeokukCounty",
          "KernCounty",
          "KerrCounty",
          "KershawCounty",
          "KetchikanGatewayBorough",
          "KewauneeCounty",
          "KeweenawCounty",
          "KeyaPahaCounty",
          "KidderCounty",
          "KimballCounty",
          "KimbleCounty",
          "KingCounty",
          "KingGeorgeCounty",
          "KingWilliamCounty",
          "KingandQueenCounty",
          "KingfisherCounty",
          "KingmanCounty",
          "KingsCounty",
          "KingsburyCounty",
          "KinneyCounty",
          "KiowaCounty",
          "KitCarsonCounty",
          "KitsapCounty",
          "KittitasCounty",
          "KittsonCounty",
          "KlamathCounty",
          "KlebergCounty",
          "KlickitatCounty",
          "KnottCounty",
          "KnoxCounty",
          "KodiakIslandBorough",
          "KoochichingCounty",
          "KootenaiCounty",
          "KosciuskoCounty",
          "KossuthCounty",
          "KusilvakCensusArea",
          "LaCrosseCounty",
          "LaGrangeCounty",
          "LaMoureCounty",
          "LaPazCounty",
          "LaPlataCounty",
          "LaPorteCounty",
          "LaSalleCounty",
          "LaSalleParish",
          "LabetteCounty",
          "LackawannaCounty",
          "LacledeCounty",
          "LacquiParleCounty",
          "LafayetteCounty",
          "LafayetteParish",
          "LafourcheParish",
          "LajasMunicipio",
          "LakeCounty",
          "LakeandPeninsulaBorough",
          "LakeoftheWoodsCounty",
          "LamarCounty",
          "LambCounty",
          "LamoilleCounty",
          "LampasasCounty",
          "LancasterCounty",
          "LanderCounty",
          "LaneCounty",
          "LangladeCounty",
          "LanierCounty",
          "LapeerCounty",
          "LaramieCounty",
          "LaresMunicipio",
          "LarimerCounty",
          "LarueCounty",
          "LasAnimasCounty",
          "LasMariasMunicipio",
          "LasPiedrasMunicipio",
          "LassenCounty",
          "LatahCounty",
          "LatimerCounty",
          "LauderdaleCounty",
          "LaurelCounty",
          "LaurensCounty",
          "LavacaCounty",
          "LawrenceCounty",
          "LeFloreCounty",
          "LeSueurCounty",
          "LeaCounty",
          "LeakeCounty",
          "LeavenworthCounty",
          "LebanonCounty",
          "LeeCounty",
          "LeelanauCounty",
          "LehighCounty",
          "LemhiCounty",
          "LenaweeCounty",
          "LenoirCounty",
          "LeonCounty",
          "LeslieCounty",
          "LetcherCounty",
          "LevyCounty",
          "LewisCounty",
          "LewisandClarkCounty",
          "LexingtonCounty",
          "Lexingtoncity",
          "LibertyCounty",
          "LickingCounty",
          "LimestoneCounty",
          "LincolnCounty",
          "LincolnParish",
          "LinnCounty",
          "LipscombCounty",
          "LitchfieldCounty",
          "LittleRiverCounty",
          "LiveOakCounty",
          "LivingstonCounty",
          "LivingstonParish",
          "LlanoCounty",
          "LoganCounty",
          "LoizaMunicipio",
          "LongCounty",
          "LonokeCounty",
          "LorainCounty",
          "LosAlamosCounty",
          "LosAngelesCounty",
          "LoudonCounty",
          "LoudounCounty",
          "LouisaCounty",
          "LoupCounty",
          "LoveCounty",
          "LovingCounty",
          "LowndesCounty",
          "LubbockCounty",
          "LucasCounty",
          "LuceCounty",
          "LumpkinCounty",
          "LunaCounty",
          "LunenburgCounty",
          "LuquilloMunicipio",
          "LuzerneCounty",
          "LycomingCounty",
          "LymanCounty",
          "Lynchburgcity",
          "LynnCounty",
          "LyonCounty",
          "MackinacCounty",
          "MacombCounty",
          "MaconCounty",
          "MacoupinCounty",
          "MaderaCounty",
          "MadisonCounty",
          "MadisonParish",
          "MagoffinCounty",
          "MahaskaCounty",
          "MahnomenCounty",
          "MahoningCounty",
          "MajorCounty",
          "MalheurCounty",
          "ManassasParkcity",
          "Manassascity",
          "ManateeCounty",
          "ManatiMunicipio",
          "ManisteeCounty",
          "ManitowocCounty",
          "MarathonCounty",
          "MarengoCounty",
          "MaricaoMunicipio",
          "MaricopaCounty",
          "MariesCounty",
          "MarinCounty",
          "MarinetteCounty",
          "MarionCounty",
          "MariposaCounty",
          "MarlboroCounty",
          "MarquetteCounty",
          "MarshallCounty",
          "MartinCounty",
          "Martinsvillecity",
          "MasonCounty",
          "MassacCounty",
          "MatagordaCounty",
          "MatanuskaSusitnaBorough",
          "MathewsCounty",
          "MauiCounty",
          "MaunaboMunicipio",
          "MauryCounty",
          "MaverickCounty",
          "MayaguezMunicipio",
          "MayesCounty",
          "McClainCounty",
          "McConeCounty",
          "McCookCounty",
          "McCormickCounty",
          "McCrackenCounty",
          "McCrearyCounty",
          "McCullochCounty",
          "McCurtainCounty",
          "McDonaldCounty",
          "McDonoughCounty",
          "McDowellCounty",
          "McDuffieCounty",
          "McHenryCounty",
          "McIntoshCounty",
          "McKeanCounty",
          "McKenzieCounty",
          "McKinleyCounty",
          "McLeanCounty",
          "McLennanCounty",
          "McLeodCounty",
          "McMinnCounty",
          "McMullenCounty",
          "McNairyCounty",
          "McPhersonCounty",
          "MeadeCounty",
          "MeagherCounty",
          "MecklenburgCounty",
          "MecostaCounty",
          "MedinaCounty",
          "MeekerCounty",
          "MeigsCounty",
          "MelletteCounty",
          "MenardCounty",
          "MendocinoCounty",
          "MenifeeCounty",
          "MenomineeCounty",
          "MercedCounty",
          "MercerCounty",
          "MeriwetherCounty",
          "MerrickCounty",
          "MerrimackCounty",
          "MesaCounty",
          "MetcalfeCounty",
          "MiamiDadeCounty",
          "MiamiCounty",
          "MiddlesexCounty",
          "MidlandCounty",
          "MifflinCounty",
          "MilamCounty",
          "MillardCounty",
          "MilleLacsCounty",
          "MillerCounty",
          "MillsCounty",
          "MilwaukeeCounty",
          "MinerCounty",
          "MineralCounty",
          "MingoCounty",
          "MinidokaCounty",
          "MinnehahaCounty",
          "MissaukeeCounty",
          "MississippiCounty",
          "MissoulaCounty",
          "MitchellCounty",
          "MobileCounty",
          "MocaMunicipio",
          "ModocCounty",
          "MoffatCounty",
          "MohaveCounty",
          "MoniteauCounty",
          "MonmouthCounty",
          "MonoCounty",
          "MononaCounty",
          "MonongaliaCounty",
          "MonroeCounty",
          "MontagueCounty",
          "MontcalmCounty",
          "MontereyCounty",
          "MontezumaCounty",
          "MontgomeryCounty",
          "MontmorencyCounty",
          "MontourCounty",
          "MontroseCounty",
          "MoodyCounty",
          "MooreCounty",
          "MoraCounty",
          "MorehouseParish",
          "MorganCounty",
          "MorovisMunicipio",
          "MorrillCounty",
          "MorrisCounty",
          "MorrisonCounty",
          "MorrowCounty",
          "MortonCounty",
          "MotleyCounty",
          "MoultrieCounty",
          "MountrailCounty",
          "MowerCounty",
          "MuhlenbergCounty",
          "MultnomahCounty",
          "MurrayCounty",
          "MuscatineCounty",
          "MuscogeeCounty",
          "MuskegonCounty",
          "MuskingumCounty",
          "MuskogeeCounty",
          "MusselshellCounty",
          "NacogdochesCounty",
          "NaguaboMunicipio",
          "NanceCounty",
          "NantucketCounty",
          "NapaCounty",
          "NaranjitoMunicipio",
          "NashCounty",
          "NassauCounty",
          "NatchitochesParish",
          "NatronaCounty",
          "NavajoCounty",
          "NavarroCounty",
          "NelsonCounty",
          "NemahaCounty",
          "NeoshoCounty",
          "NeshobaCounty",
          "NessCounty",
          "NevadaCounty",
          "NewCastleCounty",
          "NewHanoverCounty",
          "NewHavenCounty",
          "NewKentCounty",
          "NewLondonCounty",
          "NewMadridCounty",
          "NewYorkCounty",
          "NewaygoCounty",
          "NewberryCounty",
          "NewportCounty",
          "NewportNewscity",
          "NewtonCounty",
          "NezPerceCounty",
          "NiagaraCounty",
          "NicholasCounty",
          "NicolletCounty",
          "NiobraraCounty",
          "NobleCounty",
          "NoblesCounty",
          "NodawayCounty",
          "NolanCounty",
          "NomeCensusArea",
          "NorfolkCounty",
          "Norfolkcity",
          "NormanCounty",
          "NorthSlopeBorough",
          "NorthamptonCounty",
          "NorthumberlandCounty",
          "NorthwestArcticBorough",
          "NortonCounty",
          "Nortoncity",
          "NottowayCounty",
          "NowataCounty",
          "NoxubeeCounty",
          "NuckollsCounty",
          "NuecesCounty",
          "NyeCounty",
          "OBrienCounty",
          "OaklandCounty",
          "ObionCounty",
          "OceanCounty",
          "OceanaCounty",
          "OchiltreeCounty",
          "OconeeCounty",
          "OcontoCounty",
          "OgemawCounty",
          "OglalaLakotaCounty",
          "OgleCounty",
          "OglethorpeCounty",
          "OhioCounty",
          "OkaloosaCounty",
          "OkanoganCounty",
          "OkeechobeeCounty",
          "OkfuskeeCounty",
          "OklahomaCounty",
          "OkmulgeeCounty",
          "OktibbehaCounty",
          "OldhamCounty",
          "OliverCounty",
          "OlmstedCounty",
          "OneidaCounty",
          "OnondagaCounty",
          "OnslowCounty",
          "OntarioCounty",
          "OntonagonCounty",
          "OrangeCounty",
          "OrangeburgCounty",
          "OregonCounty",
          "OrleansCounty",
          "OrleansParish",
          "OrocovisMunicipio",
          "OsageCounty",
          "OsborneCounty",
          "OsceolaCounty",
          "OscodaCounty",
          "OswegoCounty",
          "OteroCounty",
          "OtoeCounty",
          "OtsegoCounty",
          "OttawaCounty",
          "OtterTailCounty",
          "OuachitaCounty",
          "OuachitaParish",
          "OurayCounty",
          "OutagamieCounty",
          "OvertonCounty",
          "OwenCounty",
          "OwsleyCounty",
          "OwyheeCounty",
          "OxfordCounty",
          "OzarkCounty",
          "OzaukeeCounty",
          "PacificCounty",
          "PageCounty",
          "PalmBeachCounty",
          "PaloAltoCounty",
          "PaloPintoCounty",
          "PamlicoCounty",
          "PanolaCounty",
          "ParkCounty",
          "ParkeCounty",
          "ParkerCounty",
          "ParmerCounty",
          "PascoCounty",
          "PasquotankCounty",
          "PassaicCounty",
          "PatillasMunicipio",
          "PatrickCounty",
          "PauldingCounty",
          "PawneeCounty",
          "PayetteCounty",
          "PayneCounty",
          "PeachCounty",
          "PearlRiverCounty",
          "PecosCounty",
          "PembinaCounty",
          "PemiscotCounty",
          "PendOreilleCounty",
          "PenderCounty",
          "PendletonCounty",
          "PenningtonCounty",
          "PenobscotCounty",
          "PenuelasMunicipio",
          "PeoriaCounty",
          "PepinCounty",
          "PerkinsCounty",
          "PerquimansCounty",
          "PerryCounty",
          "PershingCounty",
          "PersonCounty",
          "PetersburgBorough",
          "Petersburgcity",
          "PetroleumCounty",
          "PettisCounty",
          "PhelpsCounty",
          "PhiladelphiaCounty",
          "PhillipsCounty",
          "PiattCounty",
          "PickawayCounty",
          "PickensCounty",
          "PickettCounty",
          "PierceCounty",
          "PikeCounty",
          "PimaCounty",
          "PinalCounty",
          "PineCounty",
          "PinellasCounty",
          "PipestoneCounty",
          "PiscataquisCounty",
          "PitkinCounty",
          "PittCounty",
          "PittsburgCounty",
          "PittsylvaniaCounty",
          "PiuteCounty",
          "PlacerCounty",
          "PlaqueminesParish",
          "PlatteCounty",
          "PleasantsCounty",
          "PlumasCounty",
          "PlymouthCounty",
          "PocahontasCounty",
          "PoinsettCounty",
          "PointeCoupeeParish",
          "PolkCounty",
          "PonceMunicipio",
          "PonderaCounty",
          "PontotocCounty",
          "PopeCounty",
          "Poquosoncity",
          "PortageCounty",
          "PorterCounty",
          "Portsmouthcity",
          "PoseyCounty",
          "PottawatomieCounty",
          "PottawattamieCounty",
          "PotterCounty",
          "PowderRiverCounty",
          "PowellCounty",
          "PowerCounty",
          "PoweshiekCounty",
          "PowhatanCounty",
          "PrairieCounty",
          "PrattCounty",
          "PrebleCounty",
          "PrentissCounty",
          "PresidioCounty",
          "PresqueIsleCounty",
          "PrestonCounty",
          "PriceCounty",
          "PrinceEdwardCounty",
          "PrinceGeorgesCounty",
          "PrinceGeorgeCounty",
          "PrinceWilliamCounty",
          "PrinceofWalesHyderCensusArea",
          "ProvidenceCounty",
          "ProwersCounty",
          "PuebloCounty",
          "PulaskiCounty",
          "PushmatahaCounty",
          "PutnamCounty",
          "QuayCounty",
          "QuebradillasMunicipio",
          "QueenAnnesCounty",
          "QueensCounty",
          "QuitmanCounty",
          "RabunCounty",
          "RacineCounty",
          "Radfordcity",
          "RainsCounty",
          "RaleighCounty",
          "RallsCounty",
          "RamseyCounty",
          "RandallCounty",
          "RandolphCounty",
          "RankinCounty",
          "RansomCounty",
          "RapidesParish",
          "RappahannockCounty",
          "RavalliCounty",
          "RawlinsCounty",
          "RayCounty",
          "ReaganCounty",
          "RealCounty",
          "RedLakeCounty",
          "RedRiverCounty",
          "RedRiverParish",
          "RedWillowCounty",
          "RedwoodCounty",
          "ReevesCounty",
          "RefugioCounty",
          "RenoCounty",
          "RensselaerCounty",
          "RenvilleCounty",
          "RepublicCounty",
          "ReynoldsCounty",
          "RheaCounty",
          "RiceCounty",
          "RichCounty",
          "RichardsonCounty",
          "RichlandCounty",
          "RichlandParish",
          "RichmondCounty",
          "Richmondcity",
          "RileyCounty",
          "RinconMunicipio",
          "RinggoldCounty",
          "RioArribaCounty",
          "RioBlancoCounty",
          "RioGrandeCounty",
          "RioGrandeMunicipio",
          "RipleyCounty",
          "RitchieCounty",
          "RiversideCounty",
          "RoaneCounty",
          "RoanokeCounty",
          "Roanokecity",
          "RobertsCounty",
          "RobertsonCounty",
          "RobesonCounty",
          "RockCounty",
          "RockIslandCounty",
          "RockbridgeCounty",
          "RockcastleCounty",
          "RockdaleCounty",
          "RockinghamCounty",
          "RocklandCounty",
          "RockwallCounty",
          "RogerMillsCounty",
          "RogersCounty",
          "RoletteCounty",
          "RooksCounty",
          "RooseveltCounty",
          "RoscommonCounty",
          "RoseauCounty",
          "RosebudCounty",
          "RossCounty",
          "RouttCounty",
          "RowanCounty",
          "RunnelsCounty",
          "RushCounty",
          "RuskCounty",
          "RussellCounty",
          "RutherfordCounty",
          "RutlandCounty",
          "SabanaGrandeMunicipio",
          "SabineCounty",
          "SabineParish",
          "SacCounty",
          "SacramentoCounty",
          "SagadahocCounty",
          "SaginawCounty",
          "SaguacheCounty",
          "SalemCounty",
          "Salemcity",
          "SalinasMunicipio",
          "SalineCounty",
          "SaltLakeCounty",
          "SaludaCounty",
          "SampsonCounty",
          "SanAugustineCounty",
          "SanBenitoCounty",
          "SanBernardinoCounty",
          "SanDiegoCounty",
          "SanFranciscoCounty",
          "SanGermanMunicipio",
          "SanJacintoCounty",
          "SanJoaquinCounty",
          "SanJuanCounty",
          "SanJuanMunicipio",
          "SanLorenzoMunicipio",
          "SanLuisObispoCounty",
          "SanMateoCounty",
          "SanMiguelCounty",
          "SanPatricioCounty",
          "SanSabaCounty",
          "SanSebastianMunicipio",
          "SanbornCounty",
          "SandersCounty",
          "SandovalCounty",
          "SanduskyCounty",
          "SangamonCounty",
          "SanilacCounty",
          "SanpeteCounty",
          "SantaBarbaraCounty",
          "SantaClaraCounty",
          "SantaCruzCounty",
          "SantaFeCounty",
          "SantaIsabelMunicipio",
          "SantaRosaCounty",
          "SarasotaCounty",
          "SaratogaCounty",
          "SargentCounty",
          "SarpyCounty",
          "SaukCounty",
          "SaundersCounty",
          "SawyerCounty",
          "SchenectadyCounty",
          "SchleicherCounty",
          "SchleyCounty",
          "SchoharieCounty",
          "SchoolcraftCounty",
          "SchuylerCounty",
          "SchuylkillCounty",
          "SciotoCounty",
          "ScotlandCounty",
          "ScottCounty",
          "ScottsBluffCounty",
          "ScrevenCounty",
          "ScurryCounty",
          "SearcyCounty",
          "SebastianCounty",
          "SedgwickCounty",
          "SeminoleCounty",
          "SenecaCounty",
          "SequatchieCounty",
          "SequoyahCounty",
          "SevierCounty",
          "SewardCounty",
          "ShackelfordCounty",
          "ShannonCounty",
          "SharkeyCounty",
          "SharpCounty",
          "ShastaCounty",
          "ShawanoCounty",
          "ShawneeCounty",
          "SheboyganCounty",
          "ShelbyCounty",
          "ShenandoahCounty",
          "SherburneCounty",
          "SheridanCounty",
          "ShermanCounty",
          "ShiawasseeCounty",
          "ShoshoneCounty",
          "SibleyCounty",
          "SierraCounty",
          "SilverBowCounty",
          "SimpsonCounty",
          "SiouxCounty",
          "SiskiyouCounty",
          "SitkaCityandBorough",
          "SkagitCounty",
          "SkagwayMunicipality",
          "SkamaniaCounty",
          "SlopeCounty",
          "SmithCounty",
          "SmythCounty",
          "SnohomishCounty",
          "SnyderCounty",
          "SocorroCounty",
          "SolanoCounty",
          "SomersetCounty",
          "SomervellCounty",
          "SonomaCounty",
          "SouthamptonCounty",
          "SoutheastFairbanksCensusArea",
          "SpaldingCounty",
          "SpartanburgCounty",
          "SpencerCounty",
          "SpinkCounty",
          "SpokaneCounty",
          "SpotsylvaniaCounty",
          "StBernardParish",
          "StCharlesCounty",
          "StCharlesParish",
          "StClairCounty",
          "StCroixCounty",
          "StFrancisCounty",
          "StFrancoisCounty",
          "StHelenaParish",
          "StJamesParish",
          "StJohnsCounty",
          "StJohntheBaptistParish",
          "StJosephCounty",
          "StLandryParish",
          "StLawrenceCounty",
          "StLouisCounty",
          "StLouiscity",
          "StLucieCounty",
          "StMartinParish",
          "StMarysCounty",
          "StMaryParish",
          "StTammanyParish",
          "StaffordCounty",
          "StanislausCounty",
          "StanleyCounty",
          "StanlyCounty",
          "StantonCounty",
          "StarkCounty",
          "StarkeCounty",
          "StarrCounty",
          "Stauntoncity",
          "SteGenevieveCounty",
          "StearnsCounty",
          "SteeleCounty",
          "StephensCounty",
          "StephensonCounty",
          "SterlingCounty",
          "SteubenCounty",
          "StevensCounty",
          "StewartCounty",
          "StillwaterCounty",
          "StoddardCounty",
          "StokesCounty",
          "StoneCounty",
          "StonewallCounty",
          "StoreyCounty",
          "StoryCounty",
          "StraffordCounty",
          "StutsmanCounty",
          "SubletteCounty",
          "SuffolkCounty",
          "Suffolkcity",
          "SullivanCounty",
          "SullyCounty",
          "SummersCounty",
          "SummitCounty",
          "SumnerCounty",
          "SumterCounty",
          "SunflowerCounty",
          "SurryCounty",
          "SusquehannaCounty",
          "SussexCounty",
          "SutterCounty",
          "SuttonCounty",
          "SuwanneeCounty",
          "SwainCounty",
          "SweetGrassCounty",
          "SweetwaterCounty",
          "SwiftCounty",
          "SwisherCounty",
          "SwitzerlandCounty",
          "TalbotCounty",
          "TaliaferroCounty",
          "TalladegaCounty",
          "TallahatchieCounty",
          "TallapoosaCounty",
          "TamaCounty",
          "TaneyCounty",
          "TangipahoaParish",
          "TaosCounty",
          "TarrantCounty",
          "TateCounty",
          "TattnallCounty",
          "TaylorCounty",
          "TazewellCounty",
          "TehamaCounty",
          "TelfairCounty",
          "TellerCounty",
          "TensasParish",
          "TerrebonneParish",
          "TerrellCounty",
          "TerryCounty",
          "TetonCounty",
          "TexasCounty",
          "ThayerCounty",
          "ThomasCounty",
          "ThrockmortonCounty",
          "ThurstonCounty",
          "TiftCounty",
          "TillamookCounty",
          "TillmanCounty",
          "TiogaCounty",
          "TippahCounty",
          "TippecanoeCounty",
          "TiptonCounty",
          "TishomingoCounty",
          "TitusCounty",
          "ToaAltaMunicipio",
          "ToaBajaMunicipio",
          "ToddCounty",
          "TollandCounty",
          "TomGreenCounty",
          "TompkinsCounty",
          "TooeleCounty",
          "TooleCounty",
          "ToombsCounty",
          "TorranceCounty",
          "TownerCounty",
          "TownsCounty",
          "TraillCounty",
          "TransylvaniaCounty",
          "TraverseCounty",
          "TravisCounty",
          "TreasureCounty",
          "TregoCounty",
          "TrempealeauCounty",
          "TreutlenCounty",
          "TriggCounty",
          "TrimbleCounty",
          "TrinityCounty",
          "TrippCounty",
          "TroupCounty",
          "TrousdaleCounty",
          "TrujilloAltoMunicipio",
          "TrumbullCounty",
          "TuckerCounty",
          "TulareCounty",
          "TulsaCounty",
          "TunicaCounty",
          "TuolumneCounty",
          "TurnerCounty",
          "TuscaloosaCounty",
          "TuscarawasCounty",
          "TuscolaCounty",
          "TwiggsCounty",
          "TwinFallsCounty",
          "TylerCounty",
          "TyrrellCounty",
          "UintaCounty",
          "UintahCounty",
          "UlsterCounty",
          "UmatillaCounty",
          "UnicoiCounty",
          "UnionCounty",
          "UnionParish",
          "UpshurCounty",
          "UpsonCounty",
          "UptonCounty",
          "UtahCounty",
          "UtuadoMunicipio",
          "UvaldeCounty",
          "ValVerdeCounty",
          "ValenciaCounty",
          "ValleyCounty",
          "VanBurenCounty",
          "VanWertCounty",
          "VanZandtCounty",
          "VanceCounty",
          "VanderburghCounty",
          "VegaAltaMunicipio",
          "VegaBajaMunicipio",
          "VenangoCounty",
          "VenturaCounty",
          "VermilionCounty",
          "VermilionParish",
          "VermillionCounty",
          "VernonCounty",
          "VernonParish",
          "VictoriaCounty",
          "ViequesMunicipio",
          "VigoCounty",
          "VilasCounty",
          "VillalbaMunicipio",
          "VintonCounty",
          "VirginiaBeachcity",
          "VolusiaCounty",
          "WabashCounty",
          "WabashaCounty",
          "WabaunseeCounty",
          "WadenaCounty",
          "WagonerCounty",
          "WahkiakumCounty",
          "WakeCounty",
          "WakullaCounty",
          "WaldoCounty",
          "WalkerCounty",
          "WallaWallaCounty",
          "WallaceCounty",
          "WallerCounty",
          "WallowaCounty",
          "WalshCounty",
          "WalthallCounty",
          "WaltonCounty",
          "WalworthCounty",
          "WapelloCounty",
          "WardCounty",
          "WareCounty",
          "WarrenCounty",
          "WarrickCounty",
          "WasatchCounty",
          "WascoCounty",
          "WasecaCounty",
          "WashakieCounty",
          "WashburnCounty",
          "WashingtonCounty",
          "WashingtonParish",
          "WashitaCounty",
          "WashoeCounty",
          "WashtenawCounty",
          "WataugaCounty",
          "WatonwanCounty",
          "WaukeshaCounty",
          "WaupacaCounty",
          "WausharaCounty",
          "WayneCounty",
          "Waynesborocity",
          "WeakleyCounty",
          "WebbCounty",
          "WeberCounty",
          "WebsterCounty",
          "WebsterParish",
          "WeldCounty",
          "WellsCounty",
          "WestBatonRougeParish",
          "WestCarrollParish",
          "WestFelicianaParish",
          "WestchesterCounty",
          "WestmorelandCounty",
          "WestonCounty",
          "WetzelCounty",
          "WexfordCounty",
          "WhartonCounty",
          "WhatcomCounty",
          "WheatlandCounty",
          "WheelerCounty",
          "WhiteCounty",
          "WhitePineCounty",
          "WhitesideCounty",
          "WhitfieldCounty",
          "WhitleyCounty",
          "WhitmanCounty",
          "WibauxCounty",
          "WichitaCounty",
          "WicomicoCounty",
          "WilbargerCounty",
          "WilcoxCounty",
          "WilkesCounty",
          "WilkinCounty",
          "WilkinsonCounty",
          "WillCounty",
          "WillacyCounty",
          "WilliamsCounty",
          "WilliamsburgCounty",
          "Williamsburgcity",
          "WilliamsonCounty",
          "WilsonCounty",
          "Winchestercity",
          "WindhamCounty",
          "WindsorCounty",
          "WinklerCounty",
          "WinnParish",
          "WinnebagoCounty",
          "WinneshiekCounty",
          "WinonaCounty",
          "WinstonCounty",
          "WirtCounty",
          "WiseCounty",
          "WolfeCounty",
          "WoodCounty",
          "WoodburyCounty",
          "WoodfordCounty",
          "WoodruffCounty",
          "WoodsCounty",
          "WoodsonCounty",
          "WoodwardCounty",
          "WorcesterCounty",
          "WorthCounty",
          "WrangellCityandBorough",
          "WrightCounty",
          "WyandotCounty",
          "WyandotteCounty",
          "WyomingCounty",
          "WytheCounty",
          "YabucoaMunicipio",
          "YadkinCounty",
          "YakimaCounty",
          "YakutatCityandBorough",
          "YalobushaCounty",
          "YamhillCounty",
          "YanceyCounty",
          "YanktonCounty",
          "YatesCounty",
          "YaucoMunicipio",
          "YavapaiCounty",
          "YazooCounty",
          "YellCounty",
          "YellowMedicineCounty",
          "YellowstoneCounty",
          "YoakumCounty",
          "YoloCounty",
          "YorkCounty",
          "YoungCounty",
          "YubaCounty",
          "YumaCounty",
          "ZapataCounty",
          "ZavalaCounty",
          "ZiebachCounty",
          "YukonKoyukukCensusArea",
          "Guam",
          "EasternDistrict",
          "ManuaDistrict",
          "RoseIsland",
          "SwainsIsland",
          "WesternDistrict",
          "NorthernIslandsMunicipality",
          "RotaMunicipality",
          "SaipanMunicipality",
          "TinianMunicipality",
          "StCroixIsland",
          "StJohnIsland",
          "StThomasIsland"
        ],
        "enum": [
          "Abbeville County",
          "Acadia Parish",
          "Accomack County",
          "Ada County",
          "Adair County",
          "Adams County",
          "Addison County",
          "Adjuntas Municipio",
          "Aguada Municipio",
          "Aguadilla Municipio",
          "Aguas Buenas Municipio",
          "Aibonito Municipio",
          "Aiken County",
          "Aitkin County",
          "Alachua County",
          "Alamance County",
          "Alameda County",
          "Alamosa County",
          "Albany County",
          "Albemarle County",
          "Alcona County",
          "Alcorn County",
          "Aleutians East Borough",
          "Aleutians West Census Area",
          "Alexander County",
          "Alexandria city",
          "Alfalfa County",
          "Alger County",
          "Allamakee County",
          "Allegan County",
          "Allegany County",
          "Alleghany County",
          "Allegheny County",
          "Allen County",
          "Allen Parish",
          "Allendale County",
          "Alpena County",
          "Alpine County",
          "Amador County",
          "Amelia County",
          "Amherst County",
          "Amite County",
          "Añasco Municipio",
          "Anchorage Municipality",
          "Anderson County",
          "Andrew County",
          "Andrews County",
          "Androscoggin County",
          "Angelina County",
          "Anne Arundel County",
          "Anoka County",
          "Anson County",
          "Antelope County",
          "Antrim County",
          "Apache County",
          "Appanoose County",
          "Appling County",
          "Appomattox County",
          "Aransas County",
          "Arapahoe County",
          "Archer County",
          "Archuleta County",
          "Arecibo Municipio",
          "Arenac County",
          "Arkansas County",
          "Arlington County",
          "Armstrong County",
          "Aroostook County",
          "Arroyo Municipio",
          "Arthur County",
          "Ascension Parish",
          "Ashe County",
          "Ashland County",
          "Ashley County",
          "Ashtabula County",
          "Asotin County",
          "Assumption Parish",
          "Atascosa County",
          "Atchison County",
          "Athens County",
          "Atkinson County",
          "Atlantic County",
          "Atoka County",
          "Attala County",
          "Audrain County",
          "Audubon County",
          "Auglaize County",
          "Augusta County",
          "Aurora County",
          "Austin County",
          "Autauga County",
          "Avery County",
          "Avoyelles Parish",
          "Baca County",
          "Bacon County",
          "Bailey County",
          "Baker County",
          "Baldwin County",
          "Ballard County",
          "Baltimore County",
          "Baltimore city",
          "Bamberg County",
          "Bandera County",
          "Banks County",
          "Banner County",
          "Bannock County",
          "Baraga County",
          "Barber County",
          "Barbour County",
          "Barceloneta Municipio",
          "Barnes County",
          "Barnstable County",
          "Barnwell County",
          "Barranquitas Municipio",
          "Barren County",
          "Barron County",
          "Barrow County",
          "Barry County",
          "Bartholomew County",
          "Barton County",
          "Bartow County",
          "Bastrop County",
          "Bates County",
          "Bath County",
          "Baxter County",
          "Bay County",
          "Bayamón Municipio",
          "Bayfield County",
          "Baylor County",
          "Beadle County",
          "Bear Lake County",
          "Beaufort County",
          "Beauregard Parish",
          "Beaver County",
          "Beaverhead County",
          "Becker County",
          "Beckham County",
          "Bedford County",
          "Bee County",
          "Belknap County",
          "Bell County",
          "Belmont County",
          "Beltrami County",
          "Ben Hill County",
          "Benewah County",
          "Bennett County",
          "Bennington County",
          "Benson County",
          "Bent County",
          "Benton County",
          "Benzie County",
          "Bergen County",
          "Berkeley County",
          "Berks County",
          "Berkshire County",
          "Bernalillo County",
          "Berrien County",
          "Bertie County",
          "Bethel Census Area",
          "Bexar County",
          "Bibb County",
          "Bienville Parish",
          "Big Horn County",
          "Big Stone County",
          "Billings County",
          "Bingham County",
          "Black Hawk County",
          "Blackford County",
          "Bladen County",
          "Blaine County",
          "Blair County",
          "Blanco County",
          "Bland County",
          "Bleckley County",
          "Bledsoe County",
          "Blount County",
          "Blue Earth County",
          "Boise County",
          "Bolivar County",
          "Bollinger County",
          "Bon Homme County",
          "Bond County",
          "Bonner County",
          "Bonneville County",
          "Boone County",
          "Borden County",
          "Bosque County",
          "Bossier Parish",
          "Botetourt County",
          "Bottineau County",
          "Boulder County",
          "Boundary County",
          "Bourbon County",
          "Bowie County",
          "Bowman County",
          "Box Butte County",
          "Box Elder County",
          "Boyd County",
          "Boyle County",
          "Bracken County",
          "Bradford County",
          "Bradley County",
          "Branch County",
          "Brantley County",
          "Braxton County",
          "Brazoria County",
          "Brazos County",
          "Breathitt County",
          "Breckinridge County",
          "Bremer County",
          "Brevard County",
          "Brewster County",
          "Briscoe County",
          "Bristol Bay Borough",
          "Bristol County",
          "Bristol city",
          "Broadwater County",
          "Bronx County",
          "Brooke County",
          "Brookings County",
          "Brooks County",
          "Broome County",
          "Broomfield County",
          "Broward County",
          "Brown County",
          "Brule County",
          "Brunswick County",
          "Bryan County",
          "Buchanan County",
          "Buckingham County",
          "Bucks County",
          "Buena Vista County",
          "Buena Vista city",
          "Buffalo County",
          "Bullitt County",
          "Bulloch County",
          "Bullock County",
          "Buncombe County",
          "Bureau County",
          "Burke County",
          "Burleigh County",
          "Burleson County",
          "Burlington County",
          "Burnet County",
          "Burnett County",
          "Burt County",
          "Butler County",
          "Butte County",
          "Butts County",
          "Cabarrus County",
          "Cabell County",
          "Cabo Rojo Municipio",
          "Cache County",
          "Caddo County",
          "Caddo Parish",
          "Caguas Municipio",
          "Calaveras County",
          "Calcasieu Parish",
          "Caldwell County",
          "Caldwell Parish",
          "Caledonia County",
          "Calhoun County",
          "Callahan County",
          "Callaway County",
          "Calloway County",
          "Calumet County",
          "Calvert County",
          "Camas County",
          "Cambria County",
          "Camden County",
          "Cameron County",
          "Cameron Parish",
          "Camp County",
          "Campbell County",
          "Camuy Municipio",
          "Canadian County",
          "Candler County",
          "Cannon County",
          "Canóvanas Municipio",
          "Canyon County",
          "Cape Girardeau County",
          "Cape May County",
          "Carbon County",
          "Caribou County",
          "Carlisle County",
          "Carlton County",
          "Carolina Municipio",
          "Caroline County",
          "Carroll County",
          "Carson City",
          "Carson County",
          "Carter County",
          "Carteret County",
          "Carver County",
          "Cascade County",
          "Casey County",
          "Cass County",
          "Cassia County",
          "Castro County",
          "Caswell County",
          "Catahoula Parish",
          "Cataño Municipio",
          "Catawba County",
          "Catoosa County",
          "Catron County",
          "Cattaraugus County",
          "Cavalier County",
          "Cayey Municipio",
          "Cayuga County",
          "Cecil County",
          "Cedar County",
          "Ceiba Municipio",
          "Centre County",
          "Cerro Gordo County",
          "Chaffee County",
          "Chambers County",
          "Champaign County",
          "Chariton County",
          "Charles City County",
          "Charles County",
          "Charles Mix County",
          "Charleston County",
          "Charlevoix County",
          "Charlotte County",
          "Charlottesville city",
          "Charlton County",
          "Chase County",
          "Chatham County",
          "Chattahoochee County",
          "Chattooga County",
          "Chautauqua County",
          "Chaves County",
          "Cheatham County",
          "Cheboygan County",
          "Chelan County",
          "Chemung County",
          "Chenango County",
          "Cherokee County",
          "Cherry County",
          "Chesapeake city",
          "Cheshire County",
          "Chester County",
          "Chesterfield County",
          "Cheyenne County",
          "Chickasaw County",
          "Chicot County",
          "Childress County",
          "Chilton County",
          "Chippewa County",
          "Chisago County",
          "Chittenden County",
          "Choctaw County",
          "Chouteau County",
          "Chowan County",
          "Christian County",
          "Chugach Census Area",
          "Churchill County",
          "Ciales Municipio",
          "Cibola County",
          "Cidra Municipio",
          "Cimarron County",
          "Citrus County",
          "Clackamas County",
          "Claiborne County",
          "Claiborne Parish",
          "Clallam County",
          "Clare County",
          "Clarendon County",
          "Clarion County",
          "Clark County",
          "Clarke County",
          "Clatsop County",
          "Clay County",
          "Clayton County",
          "Clear Creek County",
          "Clearfield County",
          "Clearwater County",
          "Cleburne County",
          "Clermont County",
          "Cleveland County",
          "Clinch County",
          "Clinton County",
          "Cloud County",
          "Coahoma County",
          "Coal County",
          "Coamo Municipio",
          "Cobb County",
          "Cochise County",
          "Cochran County",
          "Cocke County",
          "Coconino County",
          "Codington County",
          "Coffee County",
          "Coffey County",
          "Coke County",
          "Colbert County",
          "Cole County",
          "Coleman County",
          "Coles County",
          "Colfax County",
          "Colleton County",
          "Collier County",
          "Collin County",
          "Collingsworth County",
          "Colonial Heights city",
          "Colorado County",
          "Colquitt County",
          "Columbia County",
          "Columbiana County",
          "Columbus County",
          "Colusa County",
          "Comal County",
          "Comanche County",
          "Comerío Municipio",
          "Concho County",
          "Concordia Parish",
          "Conecuh County",
          "Conejos County",
          "Contra Costa County",
          "Converse County",
          "Conway County",
          "Cook County",
          "Cooke County",
          "Cooper County",
          "Coos County",
          "Coosa County",
          "Copiah County",
          "Copper River Census Area",
          "Corozal Municipio",
          "Corson County",
          "Cortland County",
          "Coryell County",
          "Coshocton County",
          "Costilla County",
          "Cottle County",
          "Cotton County",
          "Cottonwood County",
          "Covington County",
          "Covington city",
          "Coweta County",
          "Cowley County",
          "Cowlitz County",
          "Craig County",
          "Craighead County",
          "Crane County",
          "Craven County",
          "Crawford County",
          "Creek County",
          "Crenshaw County",
          "Crisp County",
          "Crittenden County",
          "Crockett County",
          "Crook County",
          "Crosby County",
          "Cross County",
          "Crow Wing County",
          "Crowley County",
          "Culberson County",
          "Culebra Municipio",
          "Cullman County",
          "Culpeper County",
          "Cumberland County",
          "Cuming County",
          "Currituck County",
          "Curry County",
          "Custer County",
          "Cuyahoga County",
          "Dade County",
          "Daggett County",
          "Dakota County",
          "Dale County",
          "Dallam County",
          "Dallas County",
          "Dane County",
          "Daniels County",
          "Danville city",
          "Dare County",
          "Darke County",
          "Darlington County",
          "Dauphin County",
          "Davidson County",
          "Davie County",
          "Daviess County",
          "Davis County",
          "Davison County",
          "Dawes County",
          "Dawson County",
          "Day County",
          "De Baca County",
          "DeKalb County",
          "DeSoto County",
          "De Soto Parish",
          "De Witt County",
          "Deaf Smith County",
          "Dearborn County",
          "Decatur County",
          "Deer Lodge County",
          "Defiance County",
          "Del Norte County",
          "Delaware County",
          "Delta County",
          "Denali Borough",
          "Dent County",
          "Denton County",
          "Denver County",
          "Des Moines County",
          "Deschutes County",
          "Desha County",
          "Deuel County",
          "Dewey County",
          "Dickens County",
          "Dickenson County",
          "Dickey County",
          "Dickinson County",
          "Dickson County",
          "Dillingham Census Area",
          "Dillon County",
          "Dimmit County",
          "Dinwiddie County",
          "District of Columbia",
          "Divide County",
          "Dixie County",
          "Dixon County",
          "Doddridge County",
          "Dodge County",
          "Dolores County",
          "Doña Ana County",
          "Doniphan County",
          "Donley County",
          "Dooly County",
          "Door County",
          "Dorado Municipio",
          "Dorchester County",
          "Dougherty County",
          "Douglas County",
          "Drew County",
          "DuPage County",
          "Dubois County",
          "Dubuque County",
          "Duchesne County",
          "Dukes County",
          "Dundy County",
          "Dunklin County",
          "Dunn County",
          "Duplin County",
          "Durham County",
          "Dutchess County",
          "Duval County",
          "Dyer County",
          "Eagle County",
          "Early County",
          "East Baton Rouge Parish",
          "East Carroll Parish",
          "East Feliciana Parish",
          "Eastland County",
          "Eaton County",
          "Eau Claire County",
          "Echols County",
          "Ector County",
          "Eddy County",
          "Edgar County",
          "Edgecombe County",
          "Edgefield County",
          "Edmonson County",
          "Edmunds County",
          "Edwards County",
          "Effingham County",
          "El Dorado County",
          "El Paso County",
          "Elbert County",
          "Elk County",
          "Elkhart County",
          "Elko County",
          "Elliott County",
          "Ellis County",
          "Ellsworth County",
          "Elmore County",
          "Emanuel County",
          "Emery County",
          "Emmet County",
          "Emmons County",
          "Emporia city",
          "Erath County",
          "Erie County",
          "Escambia County",
          "Esmeralda County",
          "Essex County",
          "Estill County",
          "Etowah County",
          "Eureka County",
          "Evangeline Parish",
          "Evans County",
          "Fairbanks North Star Borough",
          "Fairfax County",
          "Fairfax city",
          "Fairfield County",
          "Fajardo Municipio",
          "Fall River County",
          "Fallon County",
          "Falls Church city",
          "Falls County",
          "Fannin County",
          "Faribault County",
          "Faulk County",
          "Faulkner County",
          "Fauquier County",
          "Fayette County",
          "Fentress County",
          "Fergus County",
          "Ferry County",
          "Fillmore County",
          "Finney County",
          "Fisher County",
          "Flagler County",
          "Flathead County",
          "Fleming County",
          "Florence County",
          "Florida Municipio",
          "Floyd County",
          "Fluvanna County",
          "Foard County",
          "Fond du Lac County",
          "Ford County",
          "Forest County",
          "Forrest County",
          "Forsyth County",
          "Fort Bend County",
          "Foster County",
          "Fountain County",
          "Franklin County",
          "Franklin Parish",
          "Franklin city",
          "Frederick County",
          "Fredericksburg city",
          "Freeborn County",
          "Freestone County",
          "Fremont County",
          "Fresno County",
          "Frio County",
          "Frontier County",
          "Fulton County",
          "Furnas County",
          "Gadsden County",
          "Gage County",
          "Gaines County",
          "Galax city",
          "Gallatin County",
          "Gallia County",
          "Galveston County",
          "Garden County",
          "Garfield County",
          "Garland County",
          "Garrard County",
          "Garrett County",
          "Garvin County",
          "Garza County",
          "Gasconade County",
          "Gaston County",
          "Gates County",
          "Geary County",
          "Geauga County",
          "Gem County",
          "Genesee County",
          "Geneva County",
          "Gentry County",
          "George County",
          "Georgetown County",
          "Gibson County",
          "Gila County",
          "Gilchrist County",
          "Giles County",
          "Gillespie County",
          "Gilliam County",
          "Gilmer County",
          "Gilpin County",
          "Glacier County",
          "Glades County",
          "Gladwin County",
          "Glascock County",
          "Glasscock County",
          "Glenn County",
          "Gloucester County",
          "Glynn County",
          "Gogebic County",
          "Golden Valley County",
          "Goliad County",
          "Gonzales County",
          "Goochland County",
          "Goodhue County",
          "Gooding County",
          "Gordon County",
          "Goshen County",
          "Gosper County",
          "Gove County",
          "Grady County",
          "Grafton County",
          "Graham County",
          "Grainger County",
          "Grand County",
          "Grand Forks County",
          "Grand Isle County",
          "Grand Traverse County",
          "Granite County",
          "Grant County",
          "Grant Parish",
          "Granville County",
          "Gratiot County",
          "Graves County",
          "Gray County",
          "Grays Harbor County",
          "Grayson County",
          "Greeley County",
          "Green County",
          "Green Lake County",
          "Greenbrier County",
          "Greene County",
          "Greenlee County",
          "Greensville County",
          "Greenup County",
          "Greenville County",
          "Greenwood County",
          "Greer County",
          "Gregg County",
          "Gregory County",
          "Grenada County",
          "Griggs County",
          "Grimes County",
          "Grundy County",
          "Guadalupe County",
          "Guánica Municipio",
          "Guayama Municipio",
          "Guayanilla Municipio",
          "Guaynabo Municipio",
          "Guernsey County",
          "Guilford County",
          "Gulf County",
          "Gunnison County",
          "Gurabo Municipio",
          "Guthrie County",
          "Gwinnett County",
          "Haakon County",
          "Habersham County",
          "Haines Borough",
          "Hale County",
          "Halifax County",
          "Hall County",
          "Hamblen County",
          "Hamilton County",
          "Hamlin County",
          "Hampden County",
          "Hampshire County",
          "Hampton County",
          "Hampton city",
          "Hancock County",
          "Hand County",
          "Hanover County",
          "Hansford County",
          "Hanson County",
          "Haralson County",
          "Hardee County",
          "Hardeman County",
          "Hardin County",
          "Harding County",
          "Hardy County",
          "Harford County",
          "Harlan County",
          "Harmon County",
          "Harnett County",
          "Harney County",
          "Harper County",
          "Harris County",
          "Harrison County",
          "Harrisonburg city",
          "Hart County",
          "Hartford County",
          "Hartley County",
          "Harvey County",
          "Haskell County",
          "Hatillo Municipio",
          "Hawaii County",
          "Hawkins County",
          "Hayes County",
          "Hays County",
          "Haywood County",
          "Heard County",
          "Hemphill County",
          "Hempstead County",
          "Henderson County",
          "Hendricks County",
          "Hendry County",
          "Hennepin County",
          "Henrico County",
          "Henry County",
          "Herkimer County",
          "Hernando County",
          "Hertford County",
          "Hettinger County",
          "Hickman County",
          "Hickory County",
          "Hidalgo County",
          "Highland County",
          "Highlands County",
          "Hill County",
          "Hillsborough County",
          "Hillsdale County",
          "Hinds County",
          "Hinsdale County",
          "Hitchcock County",
          "Hocking County",
          "Hockley County",
          "Hodgeman County",
          "Hoke County",
          "Holmes County",
          "Holt County",
          "Honolulu County",
          "Hood County",
          "Hood River County",
          "Hooker County",
          "Hoonah-Angoon Census Area",
          "Hopewell city",
          "Hopkins County",
          "Hormigueros Municipio",
          "Horry County",
          "Hot Spring County",
          "Hot Springs County",
          "Houghton County",
          "Houston County",
          "Howard County",
          "Howell County",
          "Hubbard County",
          "Hudson County",
          "Hudspeth County",
          "Huerfano County",
          "Hughes County",
          "Humacao Municipio",
          "Humboldt County",
          "Humphreys County",
          "Hunt County",
          "Hunterdon County",
          "Huntingdon County",
          "Huntington County",
          "Huron County",
          "Hutchinson County",
          "Hyde County",
          "Iberia Parish",
          "Iberville Parish",
          "Ida County",
          "Idaho County",
          "Imperial County",
          "Independence County",
          "Indian River County",
          "Indiana County",
          "Ingham County",
          "Inyo County",
          "Ionia County",
          "Iosco County",
          "Iowa County",
          "Iredell County",
          "Irion County",
          "Iron County",
          "Iroquois County",
          "Irwin County",
          "Isabela Municipio",
          "Isabella County",
          "Isanti County",
          "Island County",
          "Isle of Wight County",
          "Issaquena County",
          "Itasca County",
          "Itawamba County",
          "Izard County",
          "Jack County",
          "Jackson County",
          "Jackson Parish",
          "James City County",
          "Jasper County",
          "Jay County",
          "Jayuya Municipio",
          "Jeff Davis County",
          "Jefferson County",
          "Jefferson Davis County",
          "Jefferson Davis Parish",
          "Jefferson Parish",
          "Jenkins County",
          "Jennings County",
          "Jerauld County",
          "Jerome County",
          "Jersey County",
          "Jessamine County",
          "Jewell County",
          "Jim Hogg County",
          "Jim Wells County",
          "Jo Daviess County",
          "Johnson County",
          "Johnston County",
          "Jones County",
          "Josephine County",
          "Juab County",
          "Juana Díaz Municipio",
          "Judith Basin County",
          "Juncos Municipio",
          "Juneau City and Borough",
          "Juneau County",
          "Juniata County",
          "Kalamazoo County",
          "Kalawao County",
          "Kalkaska County",
          "Kanabec County",
          "Kanawha County",
          "Kandiyohi County",
          "Kane County",
          "Kankakee County",
          "Karnes County",
          "Kauai County",
          "Kaufman County",
          "Kay County",
          "Kearney County",
          "Kearny County",
          "Keith County",
          "Kemper County",
          "Kenai Peninsula Borough",
          "Kendall County",
          "Kenedy County",
          "Kennebec County",
          "Kenosha County",
          "Kent County",
          "Kenton County",
          "Keokuk County",
          "Kern County",
          "Kerr County",
          "Kershaw County",
          "Ketchikan Gateway Borough",
          "Kewaunee County",
          "Keweenaw County",
          "Keya Paha County",
          "Kidder County",
          "Kimball County",
          "Kimble County",
          "King County",
          "King George County",
          "King William County",
          "King and Queen County",
          "Kingfisher County",
          "Kingman County",
          "Kings County",
          "Kingsbury County",
          "Kinney County",
          "Kiowa County",
          "Kit Carson County",
          "Kitsap County",
          "Kittitas County",
          "Kittson County",
          "Klamath County",
          "Kleberg County",
          "Klickitat County",
          "Knott County",
          "Knox County",
          "Kodiak Island Borough",
          "Koochiching County",
          "Kootenai County",
          "Kosciusko County",
          "Kossuth County",
          "Kusilvak Census Area",
          "La Crosse County",
          "LaGrange County",
          "LaMoure County",
          "La Paz County",
          "La Plata County",
          "LaPorte County",
          "La Salle County",
          "LaSalle Parish",
          "Labette County",
          "Lackawanna County",
          "Laclede County",
          "Lac qui Parle County",
          "Lafayette County",
          "Lafayette Parish",
          "Lafourche Parish",
          "Lajas Municipio",
          "Lake County",
          "Lake and Peninsula Borough",
          "Lake of the Woods County",
          "Lamar County",
          "Lamb County",
          "Lamoille County",
          "Lampasas County",
          "Lancaster County",
          "Lander County",
          "Lane County",
          "Langlade County",
          "Lanier County",
          "Lapeer County",
          "Laramie County",
          "Lares Municipio",
          "Larimer County",
          "Larue County",
          "Las Animas County",
          "Las Marías Municipio",
          "Las Piedras Municipio",
          "Lassen County",
          "Latah County",
          "Latimer County",
          "Lauderdale County",
          "Laurel County",
          "Laurens County",
          "Lavaca County",
          "Lawrence County",
          "Le Flore County",
          "Le Sueur County",
          "Lea County",
          "Leake County",
          "Leavenworth County",
          "Lebanon County",
          "Lee County",
          "Leelanau County",
          "Lehigh County",
          "Lemhi County",
          "Lenawee County",
          "Lenoir County",
          "Leon County",
          "Leslie County",
          "Letcher County",
          "Levy County",
          "Lewis County",
          "Lewis and Clark County",
          "Lexington County",
          "Lexington city",
          "Liberty County",
          "Licking County",
          "Limestone County",
          "Lincoln County",
          "Lincoln Parish",
          "Linn County",
          "Lipscomb County",
          "Litchfield County",
          "Little River County",
          "Live Oak County",
          "Livingston County",
          "Livingston Parish",
          "Llano County",
          "Logan County",
          "Loíza Municipio",
          "Long County",
          "Lonoke County",
          "Lorain County",
          "Los Alamos County",
          "Los Angeles County",
          "Loudon County",
          "Loudoun County",
          "Louisa County",
          "Loup County",
          "Love County",
          "Loving County",
          "Lowndes County",
          "Lubbock County",
          "Lucas County",
          "Luce County",
          "Lumpkin County",
          "Luna County",
          "Lunenburg County",
          "Luquillo Municipio",
          "Luzerne County",
          "Lycoming County",
          "Lyman County",
          "Lynchburg city",
          "Lynn County",
          "Lyon County",
          "Mackinac County",
          "Macomb County",
          "Macon County",
          "Macoupin County",
          "Madera County",
          "Madison County",
          "Madison Parish",
          "Magoffin County",
          "Mahaska County",
          "Mahnomen County",
          "Mahoning County",
          "Major County",
          "Malheur County",
          "Manassas Park city",
          "Manassas city",
          "Manatee County",
          "Manatí Municipio",
          "Manistee County",
          "Manitowoc County",
          "Marathon County",
          "Marengo County",
          "Maricao Municipio",
          "Maricopa County",
          "Maries County",
          "Marin County",
          "Marinette County",
          "Marion County",
          "Mariposa County",
          "Marlboro County",
          "Marquette County",
          "Marshall County",
          "Martin County",
          "Martinsville city",
          "Mason County",
          "Massac County",
          "Matagorda County",
          "Matanuska-Susitna Borough",
          "Mathews County",
          "Maui County",
          "Maunabo Municipio",
          "Maury County",
          "Maverick County",
          "Mayagüez Municipio",
          "Mayes County",
          "McClain County",
          "McCone County",
          "McCook County",
          "McCormick County",
          "McCracken County",
          "McCreary County",
          "McCulloch County",
          "McCurtain County",
          "McDonald County",
          "McDonough County",
          "McDowell County",
          "McDuffie County",
          "McHenry County",
          "McIntosh County",
          "McKean County",
          "McKenzie County",
          "McKinley County",
          "McLean County",
          "McLennan County",
          "McLeod County",
          "McMinn County",
          "McMullen County",
          "McNairy County",
          "McPherson County",
          "Meade County",
          "Meagher County",
          "Mecklenburg County",
          "Mecosta County",
          "Medina County",
          "Meeker County",
          "Meigs County",
          "Mellette County",
          "Menard County",
          "Mendocino County",
          "Menifee County",
          "Menominee County",
          "Merced County",
          "Mercer County",
          "Meriwether County",
          "Merrick County",
          "Merrimack County",
          "Mesa County",
          "Metcalfe County",
          "Miami-Dade County",
          "Miami County",
          "Middlesex County",
          "Midland County",
          "Mifflin County",
          "Milam County",
          "Millard County",
          "Mille Lacs County",
          "Miller County",
          "Mills County",
          "Milwaukee County",
          "Miner County",
          "Mineral County",
          "Mingo County",
          "Minidoka County",
          "Minnehaha County",
          "Missaukee County",
          "Mississippi County",
          "Missoula County",
          "Mitchell County",
          "Mobile County",
          "Moca Municipio",
          "Modoc County",
          "Moffat County",
          "Mohave County",
          "Moniteau County",
          "Monmouth County",
          "Mono County",
          "Monona County",
          "Monongalia County",
          "Monroe County",
          "Montague County",
          "Montcalm County",
          "Monterey County",
          "Montezuma County",
          "Montgomery County",
          "Montmorency County",
          "Montour County",
          "Montrose County",
          "Moody County",
          "Moore County",
          "Mora County",
          "Morehouse Parish",
          "Morgan County",
          "Morovis Municipio",
          "Morrill County",
          "Morris County",
          "Morrison County",
          "Morrow County",
          "Morton County",
          "Motley County",
          "Moultrie County",
          "Mountrail County",
          "Mower County",
          "Muhlenberg County",
          "Multnomah County",
          "Murray County",
          "Muscatine County",
          "Muscogee County",
          "Muskegon County",
          "Muskingum County",
          "Muskogee County",
          "Musselshell County",
          "Nacogdoches County",
          "Naguabo Municipio",
          "Nance County",
          "Nantucket County",
          "Napa County",
          "Naranjito Municipio",
          "Nash County",
          "Nassau County",
          "Natchitoches Parish",
          "Natrona County",
          "Navajo County",
          "Navarro County",
          "Nelson County",
          "Nemaha County",
          "Neosho County",
          "Neshoba County",
          "Ness County",
          "Nevada County",
          "New Castle County",
          "New Hanover County",
          "New Haven County",
          "New Kent County",
          "New London County",
          "New Madrid County",
          "New York County",
          "Newaygo County",
          "Newberry County",
          "Newport County",
          "Newport News city",
          "Newton County",
          "Nez Perce County",
          "Niagara County",
          "Nicholas County",
          "Nicollet County",
          "Niobrara County",
          "Noble County",
          "Nobles County",
          "Nodaway County",
          "Nolan County",
          "Nome Census Area",
          "Norfolk County",
          "Norfolk city",
          "Norman County",
          "North Slope Borough",
          "Northampton County",
          "Northumberland County",
          "Northwest Arctic Borough",
          "Norton County",
          "Norton city",
          "Nottoway County",
          "Nowata County",
          "Noxubee County",
          "Nuckolls County",
          "Nueces County",
          "Nye County",
          "O'Brien County",
          "Oakland County",
          "Obion County",
          "Ocean County",
          "Oceana County",
          "Ochiltree County",
          "Oconee County",
          "Oconto County",
          "Ogemaw County",
          "Oglala Lakota County",
          "Ogle County",
          "Oglethorpe County",
          "Ohio County",
          "Okaloosa County",
          "Okanogan County",
          "Okeechobee County",
          "Okfuskee County",
          "Oklahoma County",
          "Okmulgee County",
          "Oktibbeha County",
          "Oldham County",
          "Oliver County",
          "Olmsted County",
          "Oneida County",
          "Onondaga County",
          "Onslow County",
          "Ontario County",
          "Ontonagon County",
          "Orange County",
          "Orangeburg County",
          "Oregon County",
          "Orleans County",
          "Orleans Parish",
          "Orocovis Municipio",
          "Osage County",
          "Osborne County",
          "Osceola County",
          "Oscoda County",
          "Oswego County",
          "Otero County",
          "Otoe County",
          "Otsego County",
          "Ottawa County",
          "Otter Tail County",
          "Ouachita County",
          "Ouachita Parish",
          "Ouray County",
          "Outagamie County",
          "Overton County",
          "Owen County",
          "Owsley County",
          "Owyhee County",
          "Oxford County",
          "Ozark County",
          "Ozaukee County",
          "Pacific County",
          "Page County",
          "Palm Beach County",
          "Palo Alto County",
          "Palo Pinto County",
          "Pamlico County",
          "Panola County",
          "Park County",
          "Parke County",
          "Parker County",
          "Parmer County",
          "Pasco County",
          "Pasquotank County",
          "Passaic County",
          "Patillas Municipio",
          "Patrick County",
          "Paulding County",
          "Pawnee County",
          "Payette County",
          "Payne County",
          "Peach County",
          "Pearl River County",
          "Pecos County",
          "Pembina County",
          "Pemiscot County",
          "Pend Oreille County",
          "Pender County",
          "Pendleton County",
          "Pennington County",
          "Penobscot County",
          "Peñuelas Municipio",
          "Peoria County",
          "Pepin County",
          "Perkins County",
          "Perquimans County",
          "Perry County",
          "Pershing County",
          "Person County",
          "Petersburg Borough",
          "Petersburg city",
          "Petroleum County",
          "Pettis County",
          "Phelps County",
          "Philadelphia County",
          "Phillips County",
          "Piatt County",
          "Pickaway County",
          "Pickens County",
          "Pickett County",
          "Pierce County",
          "Pike County",
          "Pima County",
          "Pinal County",
          "Pine County",
          "Pinellas County",
          "Pipestone County",
          "Piscataquis County",
          "Pitkin County",
          "Pitt County",
          "Pittsburg County",
          "Pittsylvania County",
          "Piute County",
          "Placer County",
          "Plaquemines Parish",
          "Platte County",
          "Pleasants County",
          "Plumas County",
          "Plymouth County",
          "Pocahontas County",
          "Poinsett County",
          "Pointe Coupee Parish",
          "Polk County",
          "Ponce Municipio",
          "Pondera County",
          "Pontotoc County",
          "Pope County",
          "Poquoson city",
          "Portage County",
          "Porter County",
          "Portsmouth city",
          "Posey County",
          "Pottawatomie County",
          "Pottawattamie County",
          "Potter County",
          "Powder River County",
          "Powell County",
          "Power County",
          "Poweshiek County",
          "Powhatan County",
          "Prairie County",
          "Pratt County",
          "Preble County",
          "Prentiss County",
          "Presidio County",
          "Presque Isle County",
          "Preston County",
          "Price County",
          "Prince Edward County",
          "Prince George's County",
          "Prince George County",
          "Prince William County",
          "Prince of Wales-Hyder Census Area",
          "Providence County",
          "Prowers County",
          "Pueblo County",
          "Pulaski County",
          "Pushmataha County",
          "Putnam County",
          "Quay County",
          "Quebradillas Municipio",
          "Queen Anne's County",
          "Queens County",
          "Quitman County",
          "Rabun County",
          "Racine County",
          "Radford city",
          "Rains County",
          "Raleigh County",
          "Ralls County",
          "Ramsey County",
          "Randall County",
          "Randolph County",
          "Rankin County",
          "Ransom County",
          "Rapides Parish",
          "Rappahannock County",
          "Ravalli County",
          "Rawlins County",
          "Ray County",
          "Reagan County",
          "Real County",
          "Red Lake County",
          "Red River County",
          "Red River Parish",
          "Red Willow County",
          "Redwood County",
          "Reeves County",
          "Refugio County",
          "Reno County",
          "Rensselaer County",
          "Renville County",
          "Republic County",
          "Reynolds County",
          "Rhea County",
          "Rice County",
          "Rich County",
          "Richardson County",
          "Richland County",
          "Richland Parish",
          "Richmond County",
          "Richmond city",
          "Riley County",
          "Rincón Municipio",
          "Ringgold County",
          "Rio Arriba County",
          "Rio Blanco County",
          "Rio Grande County",
          "Río Grande Municipio",
          "Ripley County",
          "Ritchie County",
          "Riverside County",
          "Roane County",
          "Roanoke County",
          "Roanoke city",
          "Roberts County",
          "Robertson County",
          "Robeson County",
          "Rock County",
          "Rock Island County",
          "Rockbridge County",
          "Rockcastle County",
          "Rockdale County",
          "Rockingham County",
          "Rockland County",
          "Rockwall County",
          "Roger Mills County",
          "Rogers County",
          "Rolette County",
          "Rooks County",
          "Roosevelt County",
          "Roscommon County",
          "Roseau County",
          "Rosebud County",
          "Ross County",
          "Routt County",
          "Rowan County",
          "Runnels County",
          "Rush County",
          "Rusk County",
          "Russell County",
          "Rutherford County",
          "Rutland County",
          "Sabana Grande Municipio",
          "Sabine County",
          "Sabine Parish",
          "Sac County",
          "Sacramento County",
          "Sagadahoc County",
          "Saginaw County",
          "Saguache County",
          "Salem County",
          "Salem city",
          "Salinas Municipio",
          "Saline County",
          "Salt Lake County",
          "Saluda County",
          "Sampson County",
          "San Augustine County",
          "San Benito County",
          "San Bernardino County",
          "San Diego County",
          "San Francisco County",
          "San Germán Municipio",
          "San Jacinto County",
          "San Joaquin County",
          "San Juan County",
          "San Juan Municipio",
          "San Lorenzo Municipio",
          "San Luis Obispo County",
          "San Mateo County",
          "San Miguel County",
          "San Patricio County",
          "San Saba County",
          "San Sebastián Municipio",
          "Sanborn County",
          "Sanders County",
          "Sandoval County",
          "Sandusky County",
          "Sangamon County",
          "Sanilac County",
          "Sanpete County",
          "Santa Barbara County",
          "Santa Clara County",
          "Santa Cruz County",
          "Santa Fe County",
          "Santa Isabel Municipio",
          "Santa Rosa County",
          "Sarasota County",
          "Saratoga County",
          "Sargent County",
          "Sarpy County",
          "Sauk County",
          "Saunders County",
          "Sawyer County",
          "Schenectady County",
          "Schleicher County",
          "Schley County",
          "Schoharie County",
          "Schoolcraft County",
          "Schuyler County",
          "Schuylkill County",
          "Scioto County",
          "Scotland County",
          "Scott County",
          "Scotts Bluff County",
          "Screven County",
          "Scurry County",
          "Searcy County",
          "Sebastian County",
          "Sedgwick County",
          "Seminole County",
          "Seneca County",
          "Sequatchie County",
          "Sequoyah County",
          "Sevier County",
          "Seward County",
          "Shackelford County",
          "Shannon County",
          "Sharkey County",
          "Sharp County",
          "Shasta County",
          "Shawano County",
          "Shawnee County",
          "Sheboygan County",
          "Shelby County",
          "Shenandoah County",
          "Sherburne County",
          "Sheridan County",
          "Sherman County",
          "Shiawassee County",
          "Shoshone County",
          "Sibley County",
          "Sierra County",
          "Silver Bow County",
          "Simpson County",
          "Sioux County",
          "Siskiyou County",
          "Sitka City and Borough",
          "Skagit County",
          "Skagway Municipality",
          "Skamania County",
          "Slope County",
          "Smith County",
          "Smyth County",
          "Snohomish County",
          "Snyder County",
          "Socorro County",
          "Solano County",
          "Somerset County",
          "Somervell County",
          "Sonoma County",
          "Southampton County",
          "Southeast Fairbanks Census Area",
          "Spalding County",
          "Spartanburg County",
          "Spencer County",
          "Spink County",
          "Spokane County",
          "Spotsylvania County",
          "St. Bernard Parish",
          "St. Charles County",
          "St. Charles Parish",
          "St. Clair County",
          "St. Croix County",
          "St. Francis County",
          "St. Francois County",
          "St. Helena Parish",
          "St. James Parish",
          "St. Johns County",
          "St. John the Baptist Parish",
          "St. Joseph County",
          "St. Landry Parish",
          "St. Lawrence County",
          "St. Louis County",
          "St. Louis city",
          "St. Lucie County",
          "St. Martin Parish",
          "St. Mary's County",
          "St. Mary Parish",
          "St. Tammany Parish",
          "Stafford County",
          "Stanislaus County",
          "Stanley County",
          "Stanly County",
          "Stanton County",
          "Stark County",
          "Starke County",
          "Starr County",
          "Staunton city",
          "Ste. Genevieve County",
          "Stearns County",
          "Steele County",
          "Stephens County",
          "Stephenson County",
          "Sterling County",
          "Steuben County",
          "Stevens County",
          "Stewart County",
          "Stillwater County",
          "Stoddard County",
          "Stokes County",
          "Stone County",
          "Stonewall County",
          "Storey County",
          "Story County",
          "Strafford County",
          "Stutsman County",
          "Sublette County",
          "Suffolk County",
          "Suffolk city",
          "Sullivan County",
          "Sully County",
          "Summers County",
          "Summit County",
          "Sumner County",
          "Sumter County",
          "Sunflower County",
          "Surry County",
          "Susquehanna County",
          "Sussex County",
          "Sutter County",
          "Sutton County",
          "Suwannee County",
          "Swain County",
          "Sweet Grass County",
          "Sweetwater County",
          "Swift County",
          "Swisher County",
          "Switzerland County",
          "Talbot County",
          "Taliaferro County",
          "Talladega County",
          "Tallahatchie County",
          "Tallapoosa County",
          "Tama County",
          "Taney County",
          "Tangipahoa Parish",
          "Taos County",
          "Tarrant County",
          "Tate County",
          "Tattnall County",
          "Taylor County",
          "Tazewell County",
          "Tehama County",
          "Telfair County",
          "Teller County",
          "Tensas Parish",
          "Terrebonne Parish",
          "Terrell County",
          "Terry County",
          "Teton County",
          "Texas County",
          "Thayer County",
          "Thomas County",
          "Throckmorton County",
          "Thurston County",
          "Tift County",
          "Tillamook County",
          "Tillman County",
          "Tioga County",
          "Tippah County",
          "Tippecanoe County",
          "Tipton County",
          "Tishomingo County",
          "Titus County",
          "Toa Alta Municipio",
          "Toa Baja Municipio",
          "Todd County",
          "Tolland County",
          "Tom Green County",
          "Tompkins County",
          "Tooele County",
          "Toole County",
          "Toombs County",
          "Torrance County",
          "Towner County",
          "Towns County",
          "Traill County",
          "Transylvania County",
          "Traverse County",
          "Travis County",
          "Treasure County",
          "Trego County",
          "Trempealeau County",
          "Treutlen County",
          "Trigg County",
          "Trimble County",
          "Trinity County",
          "Tripp County",
          "Troup County",
          "Trousdale County",
          "Trujillo Alto Municipio",
          "Trumbull County",
          "Tucker County",
          "Tulare County",
          "Tulsa County",
          "Tunica County",
          "Tuolumne County",
          "Turner County",
          "Tuscaloosa County",
          "Tuscarawas County",
          "Tuscola County",
          "Twiggs County",
          "Twin Falls County",
          "Tyler County",
          "Tyrrell County",
          "Uinta County",
          "Uintah County",
          "Ulster County",
          "Umatilla County",
          "Unicoi County",
          "Union County",
          "Union Parish",
          "Upshur County",
          "Upson County",
          "Upton County",
          "Utah County",
          "Utuado Municipio",
          "Uvalde County",
          "Val Verde County",
          "Valencia County",
          "Valley County",
          "Van Buren County",
          "Van Wert County",
          "Van Zandt County",
          "Vance County",
          "Vanderburgh County",
          "Vega Alta Municipio",
          "Vega Baja Municipio",
          "Venango County",
          "Ventura County",
          "Vermilion County",
          "Vermilion Parish",
          "Vermillion County",
          "Vernon County",
          "Vernon Parish",
          "Victoria County",
          "Vieques Municipio",
          "Vigo County",
          "Vilas County",
          "Villalba Municipio",
          "Vinton County",
          "Virginia Beach city",
          "Volusia County",
          "Wabash County",
          "Wabasha County",
          "Wabaunsee County",
          "Wadena County",
          "Wagoner County",
          "Wahkiakum County",
          "Wake County",
          "Wakulla County",
          "Waldo County",
          "Walker County",
          "Walla Walla County",
          "Wallace County",
          "Waller County",
          "Wallowa County",
          "Walsh County",
          "Walthall County",
          "Walton County",
          "Walworth County",
          "Wapello County",
          "Ward County",
          "Ware County",
          "Warren County",
          "Warrick County",
          "Wasatch County",
          "Wasco County",
          "Waseca County",
          "Washakie County",
          "Washburn County",
          "Washington County",
          "Washington Parish",
          "Washita County",
          "Washoe County",
          "Washtenaw County",
          "Watauga County",
          "Watonwan County",
          "Waukesha County",
          "Waupaca County",
          "Waushara County",
          "Wayne County",
          "Waynesboro city",
          "Weakley County",
          "Webb County",
          "Weber County",
          "Webster County",
          "Webster Parish",
          "Weld County",
          "Wells County",
          "West Baton Rouge Parish",
          "West Carroll Parish",
          "West Feliciana Parish",
          "Westchester County",
          "Westmoreland County",
          "Weston County",
          "Wetzel County",
          "Wexford County",
          "Wharton County",
          "Whatcom County",
          "Wheatland County",
          "Wheeler County",
          "White County",
          "White Pine County",
          "Whiteside County",
          "Whitfield County",
          "Whitley County",
          "Whitman County",
          "Wibaux County",
          "Wichita County",
          "Wicomico County",
          "Wilbarger County",
          "Wilcox County",
          "Wilkes County",
          "Wilkin County",
          "Wilkinson County",
          "Will County",
          "Willacy County",
          "Williams County",
          "Williamsburg County",
          "Williamsburg city",
          "Williamson County",
          "Wilson County",
          "Winchester city",
          "Windham County",
          "Windsor County",
          "Winkler County",
          "Winn Parish",
          "Winnebago County",
          "Winneshiek County",
          "Winona County",
          "Winston County",
          "Wirt County",
          "Wise County",
          "Wolfe County",
          "Wood County",
          "Woodbury County",
          "Woodford County",
          "Woodruff County",
          "Woods County",
          "Woodson County",
          "Woodward County",
          "Worcester County",
          "Worth County",
          "Wrangell City and Borough",
          "Wright County",
          "Wyandot County",
          "Wyandotte County",
          "Wyoming County",
          "Wythe County",
          "Yabucoa Municipio",
          "Yadkin County",
          "Yakima County",
          "Yakutat City and Borough",
          "Yalobusha County",
          "Yamhill County",
          "Yancey County",
          "Yankton County",
          "Yates County",
          "Yauco Municipio",
          "Yavapai County",
          "Yazoo County",
          "Yell County",
          "Yellow Medicine County",
          "Yellowstone County",
          "Yoakum County",
          "Yolo County",
          "York County",
          "Young County",
          "Yuba County",
          "Yuma County",
          "Zapata County",
          "Zavala County",
          "Ziebach County",
          "Yukon-Koyukuk Census Area",
          "Guam",
          "Eastern District",
          "Manu'a District",
          "Rose Island",
          "Swains Island",
          "Western District",
          "Northern Islands Municipality",
          "Rota Municipality",
          "Saipan Municipality",
          "Tinian Municipality",
          "St. Croix Island",
          "St. John Island",
          "St. Thomas Island"
        ]
      },
      "CreateLoanConditionInput": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "entityId",
          "entityType"
        ],
        "properties": {
          "conditionTemplateExternalIdentifier": {
            "type": "string",
            "nullable": true
          },
          "conditionTemplateId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "entityId": {
            "type": "string",
            "format": "guid"
          },
          "entityType": {
            "type": "string"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreditBureau": {
        "type": "string",
        "example": "Equifax",
        "x-enumNames": [
          "Equifax",
          "Experian",
          "TransUnion",
          "Other"
        ],
        "enum": [
          "Equifax",
          "Experian",
          "TransUnion",
          "Other"
        ]
      },
      "CreditBusinessType": {
        "type": "string",
        "example": "Advertising",
        "x-enumNames": [
          "Advertising",
          "Automotive",
          "Banking",
          "Clothing",
          "CollectionServices",
          "Contractors",
          "DepartmentAndMailOrder",
          "Employment",
          "FarmAndGardenSupplies",
          "Finance",
          "Government",
          "Grocery",
          "HomeFurnishing",
          "Insurance",
          "JewelryAndCamera",
          "LumberAndHardware",
          "MedicalAndHealth",
          "Miscellaneous",
          "OilAndNationalCreditCards",
          "PersonalServicesNotMedical",
          "RealEstateAndPublicAccommodation",
          "SportingGoods",
          "UtilitiesAndFuel",
          "Wholesale"
        ],
        "enum": [
          "Advertising",
          "Automotive",
          "Banking",
          "Clothing",
          "CollectionServices",
          "Contractors",
          "DepartmentAndMailOrder",
          "Employment",
          "FarmAndGardenSupplies",
          "Finance",
          "Government",
          "Grocery",
          "HomeFurnishing",
          "Insurance",
          "JewelryAndCamera",
          "LumberAndHardware",
          "MedicalAndHealth",
          "Miscellaneous",
          "OilAndNationalCreditCards",
          "PersonalServicesNotMedical",
          "RealEstateAndPublicAccommodation",
          "SportingGoods",
          "UtilitiesAndFuel",
          "Wholesale"
        ]
      },
      "CreditExternalProviderType": {
        "type": "string",
        "example": "FactualData",
        "x-enumNames": [
          "FactualData",
          "AdvantageCredit",
          "MeridianLink",
          "Xactus",
          "CredCo",
          "Xactus360",
          "InformativeResearchCredit",
          "CreditTechnology",
          "BirchwoodCredit",
          "CertifiedCredit",
          "CICCredit",
          "UnitedOneCredit",
          "AdvantageCreditBureau",
          "AdvantagePlusCredit",
          "AmericanReportingCompany",
          "CiscoCredit",
          "CreditLink",
          "CreditTechnologies",
          "ISCCredit",
          "KCBCredit",
          "MerchantsCreditBureau",
          "PremiumCreditBureau",
          "PremiumCreditBureauData",
          "SarmaCredit",
          "Service1stCredit",
          "SettlementOneData",
          "LendersOneCredit"
        ],
        "enum": [
          "FactualData",
          "AdvantageCredit",
          "MeridianLink",
          "Xactus",
          "CredCo",
          "Xactus360",
          "InformativeResearchCredit",
          "CreditTechnology",
          "BirchwoodCredit",
          "CertifiedCredit",
          "CICCredit",
          "UnitedOneCredit",
          "AdvantageCreditBureau",
          "AdvantagePlusCredit",
          "AmericanReportingCompany",
          "CiscoCredit",
          "CreditLink",
          "CreditTechnologies",
          "ISCCredit",
          "KCBCredit",
          "MerchantsCreditBureau",
          "PremiumCreditBureau",
          "PremiumCreditBureauData",
          "SarmaCredit",
          "Service1stCredit",
          "SettlementOneData",
          "LendersOneCredit"
        ]
      },
      "CreditInquiry": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "borrowersIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "guid"
            }
          },
          "borrowersRefs": {
            "type": "array",
            "writeOnly": true,
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "computedFields": {
            "type": "object",
            "x-ms-dynamic-schema": {
              "operationId": "GetDynamicSchema",
              "parameters": {
                "entityType": "CreditInquiry",
                "fieldType": "ComputedField",
                "processVersionId": {
                  "parameterResponseReference": "processVersionId"
                }
              }
            },
            "readOnly": true,
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "creditBureaus": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CreditBureau"
            }
          },
          "creditBusinessType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CreditBusinessType"
              }
            ]
          },
          "creditInquiryResultType": {
            "description": "Result from a credit inquiry",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CreditInquiryResultType"
              }
            ]
          },
          "customFields": {
            "type": "object",
            "x-ms-dynamic-schema": {
              "operationId": "GetDynamicSchema",
              "parameters": {
                "entityType": "CreditInquiry",
                "fieldType": "CustomField",
                "processVersionId": {
                  "parameterResponseReference": "processVersionId"
                }
              }
            },
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "date": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "detailCreditBusinessType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DetailCreditBusinessType"
              }
            ]
          },
          "facts": {
            "type": "object",
            "x-ms-dynamic-schema": {
              "operationId": "GetDynamicSchema",
              "parameters": {
                "entityType": "CreditInquiry",
                "fieldType": "Fact",
                "processVersionId": {
                  "parameterResponseReference": "processVersionId"
                }
              }
            },
            "readOnly": true,
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          }
        }
      },
      "CreditInquiryResultType": {
        "type": "string",
        "example": "AccountClosed",
        "x-enumNames": [
          "AccountClosed",
          "ApplicationPending",
          "Declined",
          "DidNotInquire",
          "NoOpenAccount",
          "NotALender",
          "OpenAccountNumberNotIssued",
          "OpenDiscovered",
          "OpenPrimaryAccount",
          "ReportingAgencyInquiry",
          "Unknown"
        ],
        "enum": [
          "AccountClosed",
          "ApplicationPending",
          "Declined",
          "DidNotInquire",
          "NoOpenAccount",
          "NotALender",
          "OpenAccountNumberNotIssued",
          "OpenDiscovered",
          "OpenPrimaryAccount",
          "ReportingAgencyInquiry",
          "Unknown"
        ]
      },
      "CreditModelType": {
        "type": "string",
        "example": "EquifaxBeacon5",
        "x-enumNames": [
          "EquifaxBeacon5",
          "ExperianFairIssacRiskModelV2",
          "TransUnionFicoRiskScoreClassic04",
          "TransUnionFicoRiskScoreClassic98",
          "VantageScore20",
          "VantageScore30"
        ],
        "enum": [
          "EquifaxBeacon5",
          "ExperianFairIssacRiskModelV2",
          "TransUnionFicoRiskScoreClassic04",
          "TransUnionFicoRiskScoreClassic98",
          "VantageScore20",
          "VantageScore30"
        ]
      },
      "CreditorBusinessType": {
        "type": "string",
        "example": "Advertising",
        "x-enumNames": [
          "Advertising",
          "Automotive",
          "Banking",
          "Clothing",
          "CollectionServices",
          "Contractors",
          "DepartmentAndMailOrder",
          "Employment",
          "FarmAndGardenSupplies",
          "Finance",
          "Government",
          "Grocery",
          "HomeFurnishing",
          "Insurance",
          "JewelryAndCamera",
          "LumberAndHardware",
          "MedicalAndHealth",
          "MiscellaneousAndPublicRecord",
          "OilAndNationalCreditCards",
          "PersonalServicesNotMedical",
          "RealEstateAndPublicAccommodation",
          "SportingGoods",
          "UtilitiesAndFuel",
          "Wholesale",
          "Miscellaneous"
        ],
        "enum": [
          "Advertising",
          "Automotive",
          "Banking",
          "Clothing",
          "CollectionServices",
          "Contractors",
          "DepartmentAndMailOrder",
          "Employment",
          "FarmAndGardenSupplies",
          "Finance",
          "Government",
          "Grocery",
          "HomeFurnishing",
          "Insurance",
          "JewelryAndCamera",
          "LumberAndHardware",
          "MedicalAndHealth",
          "MiscellaneousAndPublicRecord",
          "OilAndNationalCreditCards",
          "PersonalServicesNotMedical",
          "RealEstateAndPublicAccommodation",
          "SportingGoods",
          "UtilitiesAndFuel",
          "Wholesale",
          "Miscellaneous"
        ]
      },
      "CreditorServicingOfLoanStatementType": {
        "type": "string",
        "example": "CreditorIntendsToServiceLoan",
        "x-enumNames": [
          "CreditorIntendsToServiceLoan",
          "CreditorIntendsToTransferServicingOfLoan",
          "CreditorMayAssignSellOrTransferServicingOfLoan",
          "Other"
        ],
        "enum": [
          "CreditorIntendsToServiceLoan",
          "CreditorIntendsToTransferServicingOfLoan",
          "CreditorMayAssignSellOrTransferServicingOfLoan",
          "Other"
        ]
      },
      "CreditPublicRecordDispositionType": {
        "type": "string",
        "example": "Adjudicated",
        "x-enumNames": [
          "Adjudicated",
          "Appealed",
          "Canceled",
          "Completed",
          "Converted",
          "Discharged",
          "Dismissed",
          "Distributed",
          "Filed",
          "Granted",
          "InvoluntarilyDischarged",
          "Nonadjudicated",
          "Other",
          "Paid",
          "PaidNotSatisfied",
          "Pending",
          "RealEstateSold",
          "Released",
          "Rescinded",
          "Satisfied",
          "Settled",
          "Unknown",
          "Unreleased",
          "Unsatisfied",
          "Vacated",
          "VoluntarilyDischarged",
          "Withdrawn"
        ],
        "enum": [
          "Adjudicated",
          "Appealed",
          "Canceled",
          "Completed",
          "Converted",
          "Discharged",
          "Dismissed",
          "Distributed",
          "Filed",
          "Granted",
          "InvoluntarilyDischarged",
          "Nonadjudicated",
          "Other",
          "Paid",
          "PaidNotSatisfied",
          "Pending",
          "RealEstateSold",
          "Released",
          "Rescinded",
          "Satisfied",
          "Settled",
          "Unknown",
          "Unreleased",
          "Unsatisfied",
          "Vacated",
          "VoluntarilyDischarged",
          "Withdrawn"
        ]
      },
      "CreditPublicRecordType": {
        "type": "string",
        "example": "Annulment",
        "x-enumNames": [
          "Annulment",
          "Attachment",
          "BankruptcyChapter11",
          "BankruptcyChapter12",
          "BankruptcyChapter13",
          "BankruptcyChapter7",
          "BankruptcyChapter7Involuntary",
          "BankruptcyChapter7Voluntary",
          "BankruptcyTypeUnknown",
          "ChildSupport",
          "Collection",
          "CustodyAgreement",
          "DivorceDecree",
          "FamilySupport",
          "FictitiousName",
          "FinancialCounseling",
          "FinancingStatement",
          "ForcibleDetainer",
          "Foreclosure",
          "Garnishment",
          "Judgment",
          "LawSuit",
          "Lien",
          "MechanicsLien",
          "MedicalLien",
          "NonResponsibility",
          "NoticeOfDefault",
          "Other",
          "PublicSale",
          "RealEstateRecording",
          "Repossession",
          "SpouseSupport",
          "SupportDebt",
          "TaxLienCity",
          "TaxLienCounty",
          "TaxLienFederal",
          "TaxLienOther",
          "TaxLienState",
          "Trusteeship",
          "Unknown",
          "UnlawfulDetainer"
        ],
        "enum": [
          "Annulment",
          "Attachment",
          "BankruptcyChapter11",
          "BankruptcyChapter12",
          "BankruptcyChapter13",
          "BankruptcyChapter7",
          "BankruptcyChapter7Involuntary",
          "BankruptcyChapter7Voluntary",
          "BankruptcyTypeUnknown",
          "ChildSupport",
          "Collection",
          "CustodyAgreement",
          "DivorceDecree",
          "FamilySupport",
          "FictitiousName",
          "FinancialCounseling",
          "FinancingStatement",
          "ForcibleDetainer",
          "Foreclosure",
          "Garnishment",
          "Judgment",
          "LawSuit",
          "Lien",
          "MechanicsLien",
          "MedicalLien",
          "NonResponsibility",
          "NoticeOfDefault",
          "Other",
          "PublicSale",
          "RealEstateRecording",
          "Repossession",
          "SpouseSupport",
          "SupportDebt",
          "TaxLienCity",
          "TaxLienCounty",
          "TaxLienFederal",
          "TaxLienOther",
          "TaxLienState",
          "Trusteeship",
          "Unknown",
          "UnlawfulDetainer"
        ]
      },
      "CreditPullActionType": {
        "type": "string",
        "example": "PullNew",
        "x-enumNames": [
          "PullNew",
          "Upgrade",
          "Retrieve"
        ],
        "enum": [
          "PullNew",
          "Upgrade",
          "Retrieve"
        ]
      },
      "CreditPullConsentType": {
        "type": "string",
        "example": "Verbal",
        "x-enumNames": [
          "Verbal",
          "Written",
          "Electronic"
        ],
        "enum": [
          "Verbal",
          "Written",
          "Electronic"
        ]
      },
      "CreditPullReportType": {
        "type": "string",
        "example": "Merge",
        "x-enumNames": [
          "Merge",
          "MergePlus",
          "NonTraditional",
          "RiskScoresOnly",
          "RMCR",
          "RMCRForeign",
          "Other"
        ],
        "enum": [
          "Merge",
          "MergePlus",
          "NonTraditional",
          "RiskScoresOnly",
          "RMCR",
          "RMCRForeign",
          "Other"
        ]
      },
      "CreditPullRequestType": {
        "type": "string",
        "example": "Individual",
        "x-enumNames": [
          "Individual",
          "Joint"
        ],
        "enum": [
          "Individual",
          "Joint"
        ]
      },
      "CreditPullStatus": {
        "type": "string",
        "example": "NotStarted",
        "x-enumNames": [
          "NotStarted",
          "InProgress",
          "Failed",
          "Succeeded"
        ],
        "enum": [
          "NotStarted",
          "InProgress",
          "Failed",
          "Succeeded"
        ]
      },
      "CreditPullType": {
        "type": "string",
        "example": "Hard",
        "x-enumNames": [
          "Hard",
          "Soft"
        ],
        "enum": [
          "Hard",
          "Soft"
        ]
      },
      "CreditScore": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "bureau": {
            "description": "Credit bureau",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CreditBureau"
              }
            ]
          },
          "creditModelType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CreditModelType"
              }
            ]
          },
          "creditScoreFactors": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CreditScoreFactor"
            }
          },
          "creditScoreModelMaximum": {
            "type": "integer",
            "description": "Credit score model maximum",
            "nullable": true
          },
          "creditScoreModelMinimum": {
            "type": "integer",
            "description": "Credit score model minimum",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          },
          "score": {
            "type": "integer",
            "description": "Score",
            "nullable": true
          },
          "unavailableReason": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CreditScoreUnavailableReason"
              }
            ]
          }
        }
      },
      "CreditScoreFactor": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          }
        }
      },
      "CreditScoreUnavailableReason": {
        "type": "string",
        "example": "InsufficientCreditHistory",
        "x-enumNames": [
          "InsufficientCreditHistory",
          "Frozen"
        ],
        "enum": [
          "InsufficientCreditHistory",
          "Frozen"
        ]
      },
      "DataFieldChange": {
        "type": "string",
        "example": "Added",
        "x-enumNames": [
          "Added",
          "Deleted",
          "Updated"
        ],
        "enum": [
          "Added",
          "Deleted",
          "Updated"
        ]
      },
      "DataFieldWebhook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "change": {
            "readOnly": true,
            "$ref": "#/components/schemas/DataFieldChange"
          },
          "entityId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "entityType": {
            "type": "string",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "iv": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "loanChannel": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanChannel"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "path": {
            "type": "string",
            "readOnly": true
          },
          "retries": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "sourceType": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSourceType"
          },
          "tag": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSubscriptionType"
          },
          "userId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "version": {
            "readOnly": true,
            "$ref": "#/components/schemas/ApiVersion"
          }
        }
      },
      "DateSelector": {
        "type": "string",
        "example": "FirstOf",
        "x-enumNames": [
          "FirstOf",
          "LastOf"
        ],
        "enum": [
          "FirstOf",
          "LastOf"
        ]
      },
      "DebtMonitoringStatus": {
        "type": "string",
        "example": "NotStarted",
        "x-enumNames": [
          "NotStarted",
          "Started",
          "Canceled"
        ],
        "enum": [
          "NotStarted",
          "Started",
          "Canceled"
        ]
      },
      "DeleteFileContactResponse": {
        "type": "object",
        "additionalProperties": false
      },
      "DeliveryCommitmentType": {
        "type": "string",
        "example": "BestEfforts",
        "x-enumNames": [
          "BestEfforts",
          "Mandatory"
        ],
        "enum": [
          "BestEfforts",
          "Mandatory"
        ]
      },
      "DeliveryMethod": {
        "type": "string",
        "example": "Electronic",
        "x-enumNames": [
          "Electronic",
          "Mail",
          "None",
          "InPerson"
        ],
        "enum": [
          "Electronic",
          "Mail",
          "None",
          "InPerson"
        ]
      },
      "DeliveryType": {
        "type": "string",
        "example": "LoanEstimate",
        "x-enumNames": [
          "LoanEstimate",
          "ClosingDisclosure",
          "ClosingDocument",
          "SSPL",
          "URLA",
          "CapitalPartner",
          "AntiSteeringSafeHarbor",
          "HighCostDisclosure",
          "HomeCounselingDisclosure",
          "AppraisalDisclosure",
          "Appraisal",
          "AffiliatedBusinessDisclosure",
          "CHARMBooklet",
          "HomeLoanToolkit",
          "AdverseAction",
          "NoticeOfIncompleteness",
          "HELOCImportantTerms",
          "HELOCAgreement",
          "Form4506C",
          "FloodNotice",
          "WithdrawalNotice"
        ],
        "enum": [
          "LoanEstimate",
          "ClosingDisclosure",
          "ClosingDocument",
          "SSPL",
          "URLA",
          "CapitalPartner",
          "AntiSteeringSafeHarbor",
          "HighCostDisclosure",
          "HomeCounselingDisclosure",
          "AppraisalDisclosure",
          "Appraisal",
          "AffiliatedBusinessDisclosure",
          "CHARMBooklet",
          "HomeLoanToolkit",
          "AdverseAction",
          "NoticeOfIncompleteness",
          "HELOCImportantTerms",
          "HELOCAgreement",
          "Form4506C",
          "FloodNotice",
          "WithdrawalNotice"
        ]
      },
      "DemotechRating": {
        "type": "string",
        "example": "ADoublePrime",
        "x-enumNames": [
          "ADoublePrime",
          "APrime",
          "A",
          "S",
          "M",
          "L",
          "NR",
          "NA"
        ],
        "enum": [
          "ADoublePrime",
          "APrime",
          "A",
          "S",
          "M",
          "L",
          "NR",
          "NA"
        ]
      },
      "DependentExternalPartyType": {
        "type": "string",
        "example": "Borrower",
        "x-enumNames": [
          "Borrower",
          "Title",
          "Appraisal",
          "Broker",
          "Other"
        ],
        "enum": [
          "Borrower",
          "Title",
          "Appraisal",
          "Broker",
          "Other"
        ]
      },
      "DerivationInstrumentType": {
        "type": "string",
        "example": "WarrantyDeed",
        "x-enumNames": [
          "WarrantyDeed",
          "QuitclaimDeed",
          "Other"
        ],
        "enum": [
          "WarrantyDeed",
          "QuitclaimDeed",
          "Other"
        ]
      },
      "DesignatedSignerInfo": {
        "type": "object",
        "description": "Id is specified by the user and thus collections of this type when PATCHed\nreplace the collection instead of updating by id.",
        "additionalProperties": false,
        "properties": {
          "designatedSigner": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BorrowerOrNonBorrower"
              }
            ]
          },
          "designatedSignerTitle": {
            "type": "string",
            "nullable": true
          },
          "isGuarantor": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "DetailCreditBusinessType": {
        "type": "string",
        "example": "AdvertisingAgencies",
        "x-enumNames": [
          "AdvertisingAgencies",
          "AdvertisingMiscellaneous",
          "AdvertisingNewsMedia",
          "AutomotiveAuctionsWholesale",
          "AutomotiveDealersNew",
          "AutomotiveDealersUsed",
          "AutomotiveFarmImplementDealers",
          "AutomotiveLeasing",
          "AutomotiveMiscellaneous",
          "AutomotiveParts",
          "AutomotiveRental",
          "AutomotiveRepairBodyShops",
          "AutomotiveServiceStations",
          "AutomotiveTBAStoresTireDealers",
          "AutomotiveTruckDealers",
          "BankingAllBanks",
          "BankingBankcard",
          "BankingCommercialIndustrial",
          "BankingInstallmentLoansCreditLine",
          "BankingMiscellaneous",
          "BankingMortgageDepartment",
          "BankingSavingsBanks",
          "ClothingGeneral",
          "ClothingMiscellaneous",
          "ClothingSpecialtyShoeHatEtc",
          "CollectionServicesACBOfA",
          "CollectionServicesOther",
          "ContractorsGeneral",
          "ContractorsHomeImprovement",
          "ContractorsMiscellaneous",
          "ContractorsSubcontractors",
          "DepartmentAndMailOrderCompleteDepartmentStores",
          "DepartmentAndMailOrderMailOrderFirms",
          "DepartmentAndMailOrderMiscellaneous",
          "DepartmentAndMailOrderVarietyStores",
          "EmploymentServices",
          "FarmAndGardenSuppliesChemicalAndFertilizer",
          "FarmAndGardenSuppliesFeedAndSeed",
          "FarmAndGardenSuppliesMiscellaneous",
          "FarmAndGardenSuppliesNurseryAndLandscaping",
          "FinanceAutomobile",
          "FinanceBailBonds",
          "FinanceBrokerageAndInvestmentFirms",
          "FinanceBulkPurchase",
          "FinanceCreditUnions",
          "FinanceEducation",
          "FinanceFactoringCompanies",
          "FinanceMiscellaneous",
          "FinanceMortgageBrokers",
          "FinanceMortgageCompanies",
          "FinanceMortgageReporters",
          "FinancePersonalLoanCompanies",
          "FinanceSales",
          "FinanceSavingsAndLoanAssociations",
          "GovernmentCityAndCounty",
          "GovernmentFederal",
          "GovernmentMiscellaneous",
          "GovernmentState",
          "GroceryDairies",
          "GroceryMiscellaneous",
          "GroceryNeighborhood",
          "GrocerySupermarkets",
          "HomeFurnishingApplianceSalesAndService",
          "HomeFurnishingCarpetAndFloorCoverings",
          "HomeFurnishingElectronicsTelevisionAndRadio",
          "HomeFurnishingFurniture",
          "HomeFurnishingFurnitureRental",
          "HomeFurnishingInteriorDecoratorsDesign",
          "HomeFurnishingMiscellaneous",
          "HomeFurnishingMusicAndRecords",
          "InsuranceGeneral",
          "InsuranceLife",
          "InsuranceMiscellaneous",
          "JewelryAndCameraCameras",
          "JewelryAndCameraComputerSalesAndServices",
          "JewelryAndCameraJewelry",
          "JewelryAndCameraMiscellaneous",
          "JewelryAndCameraVideoTapeRentalAndSales",
          "LumberAndHardwareAirConditioningPlumbingElectrical",
          "LumberAndHardwareFixtureAndCabinet",
          "LumberAndHardwareLumberYards",
          "LumberAndHardwareMiscellaneous",
          "LumberAndHardwarePaintGlassAndPaper",
          "LumberAndHardwareStores",
          "MedicalAndHealthAnimalHospitals",
          "MedicalAndHealthChiropractors",
          "MedicalAndHealthDentists",
          "MedicalAndHealthDoctorsAndClinics",
          "MedicalAndHealthFuneralHomesAndCemeteries",
          "MedicalAndHealthHospitals",
          "MedicalAndHealthMedicalEquipment",
          "MedicalAndHealthMiscellaneous",
          "MedicalAndHealthOptometristsAndOpticalStores",
          "MedicalAndHealthOsteopaths",
          "MedicalAndHealthPharmaciesAndDrugs",
          "MedicalAndHealthVeterinarians",
          "MiscellaneousAuthenticationProducts",
          "MiscellaneousCreditBureaus",
          "MiscellaneousCreditReportBrokers",
          "MiscellaneousOther",
          "MiscellaneousRetail",
          "MiscellaneousServices",
          "MiscellaneousWholesale",
          "OilAndNationalCreditCardsAirlineTravelCards",
          "OilAndNationalCreditCardsCreditCardCompanies",
          "OilAndNationalCreditCardsMiscellaneous",
          "OilAndNationalCreditCardsOilCompanies",
          "PersonalServicesNotMedicalAccountants",
          "PersonalServicesNotMedicalBarbersBeautyShops",
          "PersonalServicesNotMedicalCountryClubsRestaurants",
          "PersonalServicesNotMedicalDetectiveInvestigativeServices",
          "PersonalServicesNotMedicalDryCleaningLaundry",
          "PersonalServicesNotMedicalEngineering",
          "PersonalServicesNotMedicalEquipmentLeasing",
          "PersonalServicesNotMedicalFlorists",
          "PersonalServicesNotMedicalHealthAndFitnessClubs",
          "PersonalServicesNotMedicalLegal",
          "PersonalServicesNotMedicalMiscellaneous",
          "PersonalServicesNotMedicalPestControl",
          "PersonalServicesNotMedicalPhotographers",
          "RealEstateAndPublicAccommodationApartments",
          "RealEstateAndPublicAccommodationHotels",
          "RealEstateAndPublicAccommodationMiscellaneous",
          "RealEstateAndPublicAccommodationMobileHomes",
          "RealEstateAndPublicAccommodationMotels",
          "RealEstateAndPublicAccommodationOfficeLeasing",
          "RealEstateAndPublicAccommodationPropertyManagement",
          "RealEstateAndPublicAccommodationRealEstateSales",
          "SportingGoodsAircraftSalesAndService",
          "SportingGoodsBoatAndMarinas",
          "SportingGoodsMiscellaneous",
          "SportingGoodsMotorcycleAndBicycle",
          "SportingGoodsStores",
          "UtilitiesAndFuelCableSatelliteCompanies",
          "UtilitiesAndFuelCoalAndWoodDealers",
          "UtilitiesAndFuelElectricalLightAndPower",
          "UtilitiesAndFuelFuelOilDealers",
          "UtilitiesAndFuelGarbageAndRubbishDisposals",
          "UtilitiesAndFuelGasNaturalAndBottled",
          "UtilitiesAndFuelMiscellaneous",
          "UtilitiesAndFuelTelephoneCompanies",
          "UtilitiesAndFuelWaterCompanies",
          "WholesaleAutomotiveSupplies",
          "WholesaleBuildingAndHardwareSupply",
          "WholesaleClothingAndDryGoods",
          "WholesaleCreditCardProcessing",
          "WholesaleDrugsAndChemicals",
          "WholesaleGroceries",
          "WholesaleHomeFurnishings",
          "WholesaleMachineryAndEquipment",
          "WholesaleMiscellaneous"
        ],
        "enum": [
          "AdvertisingAgencies",
          "AdvertisingMiscellaneous",
          "AdvertisingNewsMedia",
          "AutomotiveAuctionsWholesale",
          "AutomotiveDealersNew",
          "AutomotiveDealersUsed",
          "AutomotiveFarmImplementDealers",
          "AutomotiveLeasing",
          "AutomotiveMiscellaneous",
          "AutomotiveParts",
          "AutomotiveRental",
          "AutomotiveRepairBodyShops",
          "AutomotiveServiceStations",
          "AutomotiveTBAStoresTireDealers",
          "AutomotiveTruckDealers",
          "BankingAllBanks",
          "BankingBankcard",
          "BankingCommercialIndustrial",
          "BankingInstallmentLoansCreditLine",
          "BankingMiscellaneous",
          "BankingMortgageDepartment",
          "BankingSavingsBanks",
          "ClothingGeneral",
          "ClothingMiscellaneous",
          "ClothingSpecialtyShoeHatEtc",
          "CollectionServicesACBOfA",
          "CollectionServicesOther",
          "ContractorsGeneral",
          "ContractorsHomeImprovement",
          "ContractorsMiscellaneous",
          "ContractorsSubcontractors",
          "DepartmentAndMailOrderCompleteDepartmentStores",
          "DepartmentAndMailOrderMailOrderFirms",
          "DepartmentAndMailOrderMiscellaneous",
          "DepartmentAndMailOrderVarietyStores",
          "EmploymentServices",
          "FarmAndGardenSuppliesChemicalAndFertilizer",
          "FarmAndGardenSuppliesFeedAndSeed",
          "FarmAndGardenSuppliesMiscellaneous",
          "FarmAndGardenSuppliesNurseryAndLandscaping",
          "FinanceAutomobile",
          "FinanceBailBonds",
          "FinanceBrokerageAndInvestmentFirms",
          "FinanceBulkPurchase",
          "FinanceCreditUnions",
          "FinanceEducation",
          "FinanceFactoringCompanies",
          "FinanceMiscellaneous",
          "FinanceMortgageBrokers",
          "FinanceMortgageCompanies",
          "FinanceMortgageReporters",
          "FinancePersonalLoanCompanies",
          "FinanceSales",
          "FinanceSavingsAndLoanAssociations",
          "GovernmentCityAndCounty",
          "GovernmentFederal",
          "GovernmentMiscellaneous",
          "GovernmentState",
          "GroceryDairies",
          "GroceryMiscellaneous",
          "GroceryNeighborhood",
          "GrocerySupermarkets",
          "HomeFurnishingApplianceSalesAndService",
          "HomeFurnishingCarpetAndFloorCoverings",
          "HomeFurnishingElectronicsTelevisionAndRadio",
          "HomeFurnishingFurniture",
          "HomeFurnishingFurnitureRental",
          "HomeFurnishingInteriorDecoratorsDesign",
          "HomeFurnishingMiscellaneous",
          "HomeFurnishingMusicAndRecords",
          "InsuranceGeneral",
          "InsuranceLife",
          "InsuranceMiscellaneous",
          "JewelryAndCameraCameras",
          "JewelryAndCameraComputerSalesAndServices",
          "JewelryAndCameraJewelry",
          "JewelryAndCameraMiscellaneous",
          "JewelryAndCameraVideoTapeRentalAndSales",
          "LumberAndHardwareAirConditioningPlumbingElectrical",
          "LumberAndHardwareFixtureAndCabinet",
          "LumberAndHardwareLumberYards",
          "LumberAndHardwareMiscellaneous",
          "LumberAndHardwarePaintGlassAndPaper",
          "LumberAndHardwareStores",
          "MedicalAndHealthAnimalHospitals",
          "MedicalAndHealthChiropractors",
          "MedicalAndHealthDentists",
          "MedicalAndHealthDoctorsAndClinics",
          "MedicalAndHealthFuneralHomesAndCemeteries",
          "MedicalAndHealthHospitals",
          "MedicalAndHealthMedicalEquipment",
          "MedicalAndHealthMiscellaneous",
          "MedicalAndHealthOptometristsAndOpticalStores",
          "MedicalAndHealthOsteopaths",
          "MedicalAndHealthPharmaciesAndDrugs",
          "MedicalAndHealthVeterinarians",
          "MiscellaneousAuthenticationProducts",
          "MiscellaneousCreditBureaus",
          "MiscellaneousCreditReportBrokers",
          "MiscellaneousOther",
          "MiscellaneousRetail",
          "MiscellaneousServices",
          "MiscellaneousWholesale",
          "OilAndNationalCreditCardsAirlineTravelCards",
          "OilAndNationalCreditCardsCreditCardCompanies",
          "OilAndNationalCreditCardsMiscellaneous",
          "OilAndNationalCreditCardsOilCompanies",
          "PersonalServicesNotMedicalAccountants",
          "PersonalServicesNotMedicalBarbersBeautyShops",
          "PersonalServicesNotMedicalCountryClubsRestaurants",
          "PersonalServicesNotMedicalDetectiveInvestigativeServices",
          "PersonalServicesNotMedicalDryCleaningLaundry",
          "PersonalServicesNotMedicalEngineering",
          "PersonalServicesNotMedicalEquipmentLeasing",
          "PersonalServicesNotMedicalFlorists",
          "PersonalServicesNotMedicalHealthAndFitnessClubs",
          "PersonalServicesNotMedicalLegal",
          "PersonalServicesNotMedicalMiscellaneous",
          "PersonalServicesNotMedicalPestControl",
          "PersonalServicesNotMedicalPhotographers",
          "RealEstateAndPublicAccommodationApartments",
          "RealEstateAndPublicAccommodationHotels",
          "RealEstateAndPublicAccommodationMiscellaneous",
          "RealEstateAndPublicAccommodationMobileHomes",
          "RealEstateAndPublicAccommodationMotels",
          "RealEstateAndPublicAccommodationOfficeLeasing",
          "RealEstateAndPublicAccommodationPropertyManagement",
          "RealEstateAndPublicAccommodationRealEstateSales",
          "SportingGoodsAircraftSalesAndService",
          "SportingGoodsBoatAndMarinas",
          "SportingGoodsMiscellaneous",
          "SportingGoodsMotorcycleAndBicycle",
          "SportingGoodsStores",
          "UtilitiesAndFuelCableSatelliteCompanies",
          "UtilitiesAndFuelCoalAndWoodDealers",
          "UtilitiesAndFuelElectricalLightAndPower",
          "UtilitiesAndFuelFuelOilDealers",
          "UtilitiesAndFuelGarbageAndRubbishDisposals",
          "UtilitiesAndFuelGasNaturalAndBottled",
          "UtilitiesAndFuelMiscellaneous",
          "UtilitiesAndFuelTelephoneCompanies",
          "UtilitiesAndFuelWaterCompanies",
          "WholesaleAutomotiveSupplies",
          "WholesaleBuildingAndHardwareSupply",
          "WholesaleClothingAndDryGoods",
          "WholesaleCreditCardProcessing",
          "WholesaleDrugsAndChemicals",
          "WholesaleGroceries",
          "WholesaleHomeFurnishings",
          "WholesaleMachineryAndEquipment",
          "WholesaleMiscellaneous"
        ]
      },
      "DisabilityPaymentType": {
        "type": "string",
        "example": "ShortTerm",
        "x-enumNames": [
          "ShortTerm",
          "LongTerm"
        ],
        "enum": [
          "ShortTerm",
          "LongTerm"
        ]
      },
      "DisclosureBundlingOption": {
        "type": "string",
        "example": "Merged",
        "x-enumNames": [
          "Merged",
          "Individual"
        ],
        "enum": [
          "Merged",
          "Individual"
        ]
      },
      "DisclosureDocument": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "documentId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "documentName": {
            "type": "string",
            "readOnly": true
          },
          "documentProviderData": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DisclosureDocumentProviderData"
              }
            ]
          },
          "fileId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "vestaNativeDocTypeName": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          }
        }
      },
      "DisclosureDocumentProviderData": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "documentTypeCode": {
            "type": "integer",
            "readOnly": true,
            "format": "int32",
            "nullable": true
          },
          "documentTypeId": {
            "type": "integer",
            "readOnly": true,
            "format": "int32",
            "nullable": true
          }
        }
      },
      "DisclosureGenerationType": {
        "type": "string",
        "example": "IncludeWatermark",
        "x-enumNames": [
          "IncludeWatermark",
          "DeliverToBorrower",
          "NoWatermark"
        ],
        "enum": [
          "IncludeWatermark",
          "DeliverToBorrower",
          "NoWatermark"
        ]
      },
      "DisclosurePackageMetadata": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "authenticatedOn": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "authenticationIP": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "cancelledOn": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "completedOn": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "containsIntentToProceed": {
            "type": "boolean",
            "readOnly": true,
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "deliveryMethod": {
            "readOnly": true,
            "$ref": "#/components/schemas/DeliveryMethod"
          },
          "documents": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/DisclosureDocument"
            }
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "manualDisclosureStatus": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ManualDisclosureStatus"
              }
            ]
          },
          "packageType": {
            "type": "string",
            "readOnly": true
          },
          "provider": {
            "readOnly": true,
            "$ref": "#/components/schemas/DocgenEngineType"
          },
          "receivedOn": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "recipients": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/Recipient"
            }
          },
          "sentOn": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DisclosureStatus"
              }
            ]
          }
        }
      },
      "DisclosureStatus": {
        "type": "string",
        "example": "Sent",
        "x-enumNames": [
          "Sent",
          "Completed",
          "Cancelled",
          "Failed",
          "Sending",
          "Expired"
        ],
        "enum": [
          "Sent",
          "Completed",
          "Cancelled",
          "Failed",
          "Sending",
          "Expired"
        ]
      },
      "DismissChangeInCircumstancesResponse": {
        "type": "object",
        "additionalProperties": false
      },
      "DistrictOfColumbiaLicenseType": {
        "type": "string",
        "example": "MortgageDualAuthorityLicense",
        "x-enumNames": [
          "MortgageDualAuthorityLicense",
          "MortgageLenderLicense"
        ],
        "enum": [
          "MortgageDualAuthorityLicense",
          "MortgageLenderLicense"
        ]
      },
      "DocgenEngineType": {
        "type": "string",
        "example": "Docutech",
        "x-enumNames": [
          "Docutech",
          "DocMagic",
          "Propel"
        ],
        "enum": [
          "Docutech",
          "DocMagic",
          "Propel"
        ]
      },
      "DocumentEntity": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "entityId",
          "entityType"
        ],
        "properties": {
          "entityId": {
            "type": "string",
            "format": "guid"
          },
          "entityType": {
            "type": "string"
          }
        }
      },
      "DocumentEntityType": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "entityType": {
            "type": "string",
            "readOnly": true
          },
          "fields": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/DocumentTypeField"
            }
          },
          "isVestaNative": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "DocumentExpirationType": {
        "type": "string",
        "example": "UploadDate",
        "x-enumNames": [
          "UploadDate",
          "DocumentFieldDate"
        ],
        "enum": [
          "UploadDate",
          "DocumentFieldDate"
        ]
      },
      "DocumentFieldMetadata": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "entityId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "value": {
            "readOnly": true,
            "nullable": true
          },
          "verified": {
            "type": "boolean",
            "readOnly": true,
            "nullable": true
          }
        }
      },
      "DocumentFieldRelationship": {
        "type": "string",
        "example": "Equal",
        "x-enumNames": [
          "Equal",
          "LessThan",
          "GreaterThan",
          "LoanDataContainsDocField",
          "MatchesFullArray"
        ],
        "enum": [
          "Equal",
          "LessThan",
          "GreaterThan",
          "LoanDataContainsDocField",
          "MatchesFullArray"
        ]
      },
      "DocumentFieldUsage": {
        "type": "string",
        "example": "VerifyAgainstData",
        "x-enumNames": [
          "VerifyAgainstData",
          "WriteDataToLoan",
          "ReferenceValue",
          "ExpirationDate",
          "CustomVerification",
          "AugmentData",
          "LetUserChoose"
        ],
        "enum": [
          "VerifyAgainstData",
          "WriteDataToLoan",
          "ReferenceValue",
          "ExpirationDate",
          "CustomVerification",
          "AugmentData",
          "LetUserChoose"
        ]
      },
      "DocumentMetadata": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "archiveReasonCategory": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ArchiveReasonCategory"
              }
            ]
          },
          "archiveReasonNotes": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "associatedEntities": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/DocumentEntity"
            }
          },
          "disclosureDocumentId": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "disclosureId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "documentClassificationVerified": {
            "type": "boolean",
            "readOnly": true,
            "nullable": true
          },
          "documentTypeCategory": {
            "readOnly": true,
            "$ref": "#/components/schemas/AdminCategory"
          },
          "documentTypeExternalIdentifier": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "documentTypeId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "documentTypeName": {
            "type": "string",
            "readOnly": true
          },
          "expirationDate": {
            "type": "string",
            "readOnly": true,
            "format": "date",
            "nullable": true
          },
          "fields": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/DocumentFieldMetadata"
            }
          },
          "files": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/FileMetadata"
            }
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "isExpired": {
            "type": "boolean",
            "readOnly": true,
            "nullable": true
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "nameOverride": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "reclassifiedFromDocumentId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "status": {
            "readOnly": true,
            "$ref": "#/components/schemas/DocumentStatus"
          },
          "taxReturnDocumentCodes": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TaxReturnDocumentCode"
            }
          },
          "uploadedTimestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time"
          },
          "uploadSource": {
            "readOnly": true,
            "$ref": "#/components/schemas/DocumentUploadSource"
          }
        }
      },
      "DocumentNoteAddedWebhook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "documentId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "entityId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "entityType": {
            "type": "string",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "loanChannel": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanChannel"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "noteType": {
            "readOnly": true,
            "$ref": "#/components/schemas/NoteType"
          },
          "retries": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "sourceType": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSourceType"
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSubscriptionType"
          },
          "userId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "version": {
            "readOnly": true,
            "$ref": "#/components/schemas/ApiVersion"
          }
        }
      },
      "DocumentRequiredCondition": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "numberOfRequiredDocumentTypes": {
            "type": "integer",
            "readOnly": true,
            "format": "int32",
            "nullable": true
          },
          "requiredDocumentTypes": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/DocumentType"
            }
          },
          "requireDistinctDocumentTypes": {
            "type": "boolean",
            "readOnly": true,
            "nullable": true
          }
        }
      },
      "DocumentStatus": {
        "type": "string",
        "example": "Uploaded",
        "x-enumNames": [
          "Uploaded",
          "Reviewed",
          "Accepted",
          "Archived",
          "Expired"
        ],
        "enum": [
          "Uploaded",
          "Reviewed",
          "Accepted",
          "Archived",
          "Expired"
        ]
      },
      "DocumentType": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "aliases": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "externalIdentifier": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "isVestaNative": {
            "type": "boolean",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          }
        }
      },
      "DocumentTypeField": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "customQuestionDisplay": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "docFieldName": {
            "type": "string",
            "readOnly": true
          },
          "fieldRelationship": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DocumentFieldRelationship"
              }
            ]
          },
          "fieldType": {
            "readOnly": true,
            "$ref": "#/components/schemas/FieldType"
          },
          "fieldUsage": {
            "readOnly": true,
            "$ref": "#/components/schemas/DocumentFieldUsage"
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "incomeAmountType": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeAmountType"
              }
            ]
          },
          "incomeAsOfDateField": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "incomeHoursPerWeekField": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "incomeYear": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "isVestaNative": {
            "type": "boolean",
            "readOnly": true
          },
          "listPosition": {
            "type": "string",
            "readOnly": true
          },
          "modelFieldName": {
            "type": "string",
            "readOnly": true
          },
          "modelType": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "DocumentTypeFull": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "aliases": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "category": {
            "readOnly": true,
            "$ref": "#/components/schemas/AdminCategory"
          },
          "conditionIds": {
            "type": "array",
            "readOnly": true,
            "items": {
              "type": "string",
              "format": "guid"
            }
          },
          "daysToExpiration": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "entityTypes": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/DocumentEntityType"
            }
          },
          "expirationType": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DocumentExpirationType"
              }
            ]
          },
          "expiresFromDateField": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "externalIdentifier": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "isVestaNative": {
            "type": "boolean",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "readOnly": true
          },
          "showInDropdown": {
            "type": "boolean",
            "readOnly": true
          },
          "tags": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "userLastModifiedAt": {
            "type": "string",
            "readOnly": true,
            "format": "date-time"
          }
        }
      },
      "DocumentUpload": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "body"
        ],
        "properties": {
          "body": {
            "description": "The first section must be JSON containing the DocumentUploadMetadata type (see types section below).",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DocumentUploadMetadata"
              }
            ]
          },
          "filename": {
            "type": "array",
            "description": "List of files being uploaded through multipart/form-data.",
            "items": {
              "type": "string",
              "format": "binary"
            }
          }
        }
      },
      "DocumentUploadMetadata": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "associatedEntities"
        ],
        "properties": {
          "associatedEntities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentEntity"
            }
          },
          "documentRequiredTaskId": {
            "type": "string",
            "description": "The ID of the objective task that this document is required for.",
            "format": "guid",
            "nullable": true
          },
          "documentTypeExternalIdentifier": {
            "type": "string",
            "nullable": true
          },
          "documentTypeId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "documentTypeName": {
            "type": "string",
            "nullable": true
          },
          "nameOverride": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SettableDocumentStatus"
              }
            ]
          }
        }
      },
      "DocumentUploadSource": {
        "type": "string",
        "example": "Pos",
        "x-enumNames": [
          "Pos"
        ],
        "enum": [
          "Pos"
        ]
      },
      "DocumentWebhook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "documentId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "documentStatus": {
            "type": "string",
            "readOnly": true
          },
          "documentTypeId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "documentTypeName": {
            "type": "string",
            "readOnly": true
          },
          "entities": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/WebhookDocumentEntity"
            }
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "loanChannel": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanChannel"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "reclassifiedFromDocumentId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "retries": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "sourceType": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSourceType"
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSubscriptionType"
          },
          "userId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "version": {
            "readOnly": true,
            "$ref": "#/components/schemas/ApiVersion"
          }
        }
      },
      "DODUMessageCode": {
        "type": "string",
        "example": "_2",
        "x-enumNames": [
          "_2",
          "_3",
          "_4",
          "_5",
          "_6",
          "_7",
          "_8",
          "_9",
          "_10",
          "_11",
          "_12",
          "_13",
          "_15",
          "_16",
          "_17",
          "_18",
          "_19",
          "_20",
          "_21",
          "_22",
          "_23",
          "_24",
          "_25",
          "_26",
          "_27",
          "_28",
          "_29",
          "_30",
          "_31",
          "_32",
          "_33",
          "_34",
          "_35",
          "_36",
          "_37",
          "_38",
          "_39",
          "_40",
          "_41",
          "_42",
          "_43",
          "_44",
          "_45",
          "_46",
          "_47",
          "_48",
          "_49",
          "_50",
          "_51",
          "_52",
          "_53",
          "_54",
          "_55",
          "_56",
          "_57",
          "_58",
          "_59",
          "_60",
          "_61",
          "_62",
          "_63",
          "_64",
          "_65",
          "_66",
          "_67",
          "_68",
          "_69",
          "_70",
          "_71",
          "_72",
          "_73",
          "_74",
          "_75",
          "_76",
          "_77",
          "_78",
          "_79",
          "_80",
          "_81",
          "_82",
          "_83",
          "_84",
          "_85",
          "_86",
          "_87",
          "_88",
          "_89",
          "_90",
          "_91",
          "_92",
          "_93",
          "_95",
          "_96",
          "_99",
          "_101",
          "_107",
          "_108",
          "_109",
          "_110",
          "_111",
          "_112",
          "_113",
          "_114",
          "_115",
          "_116",
          "_117",
          "_118",
          "_119",
          "_120",
          "_121",
          "_122",
          "_123",
          "_124",
          "_125",
          "_126",
          "_127",
          "_128",
          "_129",
          "_130",
          "_131",
          "_132",
          "_133",
          "_134",
          "_135",
          "_136",
          "_137",
          "_138",
          "_139",
          "_140",
          "_141",
          "_142",
          "_143",
          "_144",
          "_145",
          "_146",
          "_147",
          "_148",
          "_149",
          "_150",
          "_151",
          "_152",
          "_153",
          "_154",
          "_155",
          "_156",
          "_157",
          "_158",
          "_159",
          "_160",
          "_161",
          "_162",
          "_163",
          "_164",
          "_165",
          "_166",
          "_167",
          "_168",
          "_169",
          "_170",
          "_171",
          "_172",
          "_173",
          "_174",
          "_175",
          "_176",
          "_177",
          "_178",
          "_179",
          "_180",
          "_181",
          "_182",
          "_183",
          "_184",
          "_185",
          "_186",
          "_187",
          "_188",
          "_189",
          "_190",
          "_191",
          "_192",
          "_193",
          "_194",
          "_195",
          "_196",
          "_197",
          "_198",
          "_199",
          "_200",
          "_201",
          "_202",
          "_203",
          "_204",
          "_205",
          "_206",
          "_207",
          "_208",
          "_209",
          "_210",
          "_211",
          "_212",
          "_213",
          "_214",
          "_215",
          "_216",
          "_217",
          "_218",
          "_219",
          "_220",
          "_221",
          "_222",
          "_223",
          "_224",
          "_225",
          "_226",
          "_227",
          "_228",
          "_229",
          "_230",
          "_231",
          "_232",
          "_233",
          "_234",
          "_235",
          "_236",
          "_237",
          "_238",
          "_239",
          "_240",
          "_241",
          "_242",
          "_243",
          "_244",
          "_245",
          "_246",
          "_247",
          "_248",
          "_249",
          "_250",
          "_251",
          "_252",
          "_253",
          "_254",
          "_255",
          "_256",
          "_257",
          "_258",
          "_259",
          "_260",
          "_268",
          "_269",
          "_270",
          "_271",
          "_272",
          "_273",
          "_274",
          "_275",
          "_277",
          "_278",
          "_279",
          "_280",
          "_281",
          "_282",
          "_283",
          "_284",
          "_285",
          "_286",
          "_287",
          "_288",
          "_289",
          "_290",
          "_291",
          "_292",
          "_293",
          "_294",
          "_295",
          "_296",
          "_297",
          "_298",
          "_299",
          "_300",
          "_301",
          "_302",
          "_303",
          "_304",
          "_308",
          "_309",
          "_312",
          "_313",
          "_314",
          "_315",
          "_316",
          "_317",
          "_318",
          "_319",
          "_320",
          "_321",
          "_322",
          "_323",
          "_324",
          "_325",
          "_326",
          "_327",
          "_328",
          "_329",
          "_330",
          "_331",
          "_332",
          "_333",
          "_334",
          "_335",
          "_336",
          "_337",
          "_338",
          "_339",
          "_340",
          "_341",
          "_342",
          "_343",
          "_344",
          "_345",
          "_346",
          "_347",
          "_348",
          "_349",
          "_350",
          "_351",
          "_352",
          "_353",
          "_354",
          "_355",
          "_356",
          "_357",
          "_358",
          "_359",
          "_360",
          "_361",
          "_362",
          "_363",
          "_364",
          "_365",
          "_366",
          "_367",
          "_368",
          "_369",
          "_370",
          "_371",
          "_372",
          "_373",
          "_374",
          "_375",
          "_376",
          "_377",
          "_378",
          "_379",
          "_380",
          "_381",
          "_382",
          "_383",
          "_384",
          "_385",
          "_386",
          "_387",
          "_388",
          "_389",
          "_390",
          "_391",
          "_392",
          "_393",
          "_394",
          "_395",
          "_396",
          "_397",
          "_398",
          "_399",
          "_400",
          "_401",
          "_402",
          "_403",
          "_404",
          "_405",
          "_406",
          "_407",
          "_408",
          "_409",
          "_410",
          "_411",
          "_412",
          "_413",
          "_414",
          "_415",
          "_417",
          "_418",
          "_419",
          "_420",
          "_421",
          "_422",
          "_423",
          "_424",
          "_425",
          "_426",
          "_427",
          "_428",
          "_429",
          "_430",
          "_431",
          "_432",
          "_433",
          "_434",
          "_435",
          "_436",
          "_437",
          "_438",
          "_439",
          "_440",
          "_441",
          "_442",
          "_443",
          "_444",
          "_445",
          "_446",
          "_447",
          "_448",
          "_449",
          "_450",
          "_451",
          "_452",
          "_453",
          "_454",
          "_455",
          "_456",
          "_457",
          "_458",
          "_459",
          "_460",
          "_461",
          "_462",
          "_463",
          "_464",
          "_465",
          "_466",
          "_467",
          "_468",
          "_469",
          "_470",
          "_471",
          "_472",
          "_473",
          "_474",
          "_475",
          "_476",
          "_477",
          "_478",
          "_479",
          "_480",
          "_481",
          "_482",
          "_483",
          "_484",
          "_485",
          "_486",
          "_487",
          "_488",
          "_489",
          "_490",
          "_491",
          "_492",
          "_493",
          "_494",
          "_495",
          "_496",
          "_497",
          "_498",
          "_499",
          "_500",
          "_501",
          "_502",
          "_503",
          "_504",
          "_505",
          "_506",
          "_507",
          "_508",
          "_509",
          "_510",
          "_511",
          "_512",
          "_513",
          "_514",
          "_515",
          "_516",
          "_517",
          "_518",
          "_519",
          "_520",
          "_521",
          "_522",
          "_523",
          "_524",
          "_525",
          "_526",
          "_527",
          "_528",
          "_529",
          "_530",
          "_531",
          "_532",
          "_533",
          "_534",
          "_535",
          "_536",
          "_537",
          "_538",
          "_539",
          "_540",
          "_541",
          "_542",
          "_543",
          "_544",
          "_545",
          "_546",
          "_547",
          "_548",
          "_549",
          "_550",
          "_551",
          "_552",
          "_553",
          "_554",
          "_555",
          "_556",
          "_557",
          "_558",
          "_559",
          "_560",
          "_561",
          "_562",
          "_563",
          "_564",
          "_565",
          "_566",
          "_567",
          "_568",
          "_569",
          "_570",
          "_571",
          "_572",
          "_573",
          "_574",
          "_575",
          "_576",
          "_577",
          "_578",
          "_579",
          "_580",
          "_581",
          "_582",
          "_583",
          "_584",
          "_585",
          "_586",
          "_587",
          "_588",
          "_589",
          "_590",
          "_591",
          "_592",
          "_593",
          "_594",
          "_595",
          "_596",
          "_597",
          "_598",
          "_599",
          "_600",
          "_601",
          "_602",
          "_603",
          "_604",
          "_605",
          "_606",
          "_607",
          "_608",
          "_609",
          "_610",
          "_611",
          "_612",
          "_613",
          "_614",
          "_615",
          "_616",
          "_617",
          "_618",
          "_619",
          "_620",
          "_621",
          "_622",
          "_623",
          "_624",
          "_625",
          "_626",
          "_627",
          "_628",
          "_629",
          "_630",
          "_631",
          "_632",
          "_633",
          "_634",
          "_635",
          "_636",
          "_637",
          "_638",
          "_639",
          "_640",
          "_641",
          "_642",
          "_643",
          "_644",
          "_645",
          "_646",
          "_647",
          "_648",
          "_649",
          "_650",
          "_651",
          "_652",
          "_653",
          "_654",
          "_655",
          "_656",
          "_657",
          "_658",
          "_659",
          "_660",
          "_661",
          "_662",
          "_663",
          "_664",
          "_665",
          "_666",
          "_667",
          "_668",
          "_669",
          "_670",
          "_671",
          "_672",
          "_673",
          "_674",
          "_675",
          "_678",
          "_679",
          "_680",
          "_681",
          "_682",
          "_683",
          "_684",
          "_685",
          "_686",
          "_687",
          "_688",
          "_689",
          "_690",
          "_691",
          "_692",
          "_693",
          "_694",
          "_695",
          "_696",
          "_697",
          "_698",
          "_699",
          "_700",
          "_701",
          "_702",
          "_703",
          "_704",
          "_705",
          "_706",
          "_707",
          "_708",
          "_709",
          "_710",
          "_711",
          "_712",
          "_713",
          "_714",
          "_715",
          "_716",
          "_717",
          "_718",
          "_719",
          "_720",
          "_721",
          "_722",
          "_723",
          "_724",
          "_725",
          "_726",
          "_727",
          "_728",
          "_729",
          "_730",
          "_731",
          "_732",
          "_733",
          "_734",
          "_735",
          "_736",
          "_737",
          "_738",
          "_739",
          "_740",
          "_741",
          "_742",
          "_743",
          "_744",
          "_745",
          "_746",
          "_747",
          "_748",
          "_749",
          "_750",
          "_751",
          "_752",
          "_753",
          "_754",
          "_755",
          "_756",
          "_757",
          "_758",
          "_759",
          "_760",
          "_761",
          "_762",
          "_763",
          "_764",
          "_765",
          "_766",
          "_767",
          "_768",
          "_769",
          "_770",
          "_771",
          "_772",
          "_773",
          "_774",
          "_775",
          "_776",
          "_777",
          "_778",
          "_779",
          "_780",
          "_781",
          "_782",
          "_783",
          "_784",
          "_785",
          "_786",
          "_787",
          "_788",
          "_789",
          "_790",
          "_791",
          "_792",
          "_793",
          "_794",
          "_795",
          "_796",
          "_797",
          "_798",
          "_799",
          "_800",
          "_801",
          "_802",
          "_803",
          "_804",
          "_805",
          "_806",
          "_807",
          "_808",
          "_809",
          "_810",
          "_811",
          "_812",
          "_813",
          "_814",
          "_815",
          "_816",
          "_817",
          "_818",
          "_819",
          "_820",
          "_821",
          "_822",
          "_823",
          "_824",
          "_825",
          "_826",
          "_827",
          "_828",
          "_829",
          "_830",
          "_831",
          "_832",
          "_833",
          "_834",
          "_835",
          "_836",
          "_837",
          "_838",
          "_839",
          "_840",
          "_841",
          "_842",
          "_843",
          "_844",
          "_845",
          "_846",
          "_847",
          "_848",
          "_849",
          "_850",
          "_851",
          "_852",
          "_853",
          "_854",
          "_855",
          "_856",
          "_857",
          "_858",
          "_859",
          "_860",
          "_861",
          "_862",
          "_863",
          "_864",
          "_865",
          "_866",
          "_867",
          "_868",
          "_869",
          "_870",
          "_871",
          "_872",
          "_873",
          "_874",
          "_875",
          "_876",
          "_877",
          "_878",
          "_879",
          "_880",
          "_881",
          "_882",
          "_883",
          "_884",
          "_885",
          "_886",
          "_887",
          "_888",
          "_889",
          "_890",
          "_891",
          "_892",
          "_893",
          "_894",
          "_895",
          "_896",
          "_897",
          "_898",
          "_899",
          "_900",
          "_901",
          "_902",
          "_903",
          "_904",
          "_905",
          "_906",
          "_907",
          "_908",
          "_909",
          "_910",
          "_911",
          "_912",
          "_913",
          "_914",
          "_915",
          "_916",
          "_917",
          "_918",
          "_919",
          "_920",
          "_921",
          "_922",
          "_923",
          "_924",
          "_925",
          "_926",
          "_927",
          "_928",
          "_929",
          "_930",
          "_931",
          "_932",
          "_933",
          "_934",
          "_935",
          "_936",
          "_937",
          "_938",
          "_939",
          "_940",
          "_941",
          "_942",
          "_943",
          "_944",
          "_945",
          "_946",
          "_947",
          "_948",
          "_949",
          "_950",
          "_951",
          "_952",
          "_953",
          "_954",
          "_955",
          "_956",
          "_957",
          "_958",
          "_959",
          "_960",
          "_961",
          "_962",
          "_963",
          "_964",
          "_965",
          "_966",
          "_967",
          "_968",
          "_969",
          "_970",
          "_971",
          "_972",
          "_973",
          "_974",
          "_975",
          "_976",
          "_977",
          "_978",
          "_979",
          "_980",
          "_981",
          "_982",
          "_983",
          "_984",
          "_985",
          "_986",
          "_987",
          "_988",
          "_989",
          "_990",
          "_991",
          "_992",
          "_993",
          "_994",
          "_995",
          "_996",
          "_997",
          "_998",
          "_999",
          "_1000",
          "_1001",
          "_1002",
          "_1003",
          "_1004",
          "_1005",
          "_1006",
          "_1007",
          "_1008",
          "_1009",
          "_1010",
          "_1011",
          "_1012",
          "_1013",
          "_1014",
          "_1015",
          "_1016",
          "_1017",
          "_1018",
          "_1019",
          "_1020",
          "_1021",
          "_1022",
          "_1023",
          "_1024",
          "_1025",
          "_1026",
          "_1027",
          "_1028",
          "_1029",
          "_1030",
          "_1031",
          "_1032",
          "_1034",
          "_1037",
          "_1038",
          "_1039",
          "_1040",
          "_1041",
          "_1042",
          "_1043",
          "_1044",
          "_1045",
          "_1046",
          "_1047",
          "_1048",
          "_1049",
          "_1050",
          "_1051",
          "_1052",
          "_1053",
          "_1054",
          "_1055",
          "_1056",
          "_1057",
          "_1058",
          "_1059",
          "_1060",
          "_1061",
          "_1062",
          "_1063",
          "_1064",
          "_1065",
          "_1066",
          "_1067",
          "_1068",
          "_1069",
          "_1070",
          "_1071",
          "_1072",
          "_1073",
          "_1074",
          "_1075",
          "_1076",
          "_1077",
          "_1078",
          "_1079",
          "_1080",
          "_1081",
          "_1082",
          "_1083",
          "_1084",
          "_1085",
          "_1086",
          "_1087",
          "_1088",
          "_1089",
          "_1090",
          "_1091",
          "_1092",
          "_1093",
          "_1094",
          "_1095",
          "_1096",
          "_1097",
          "_1098",
          "_1099",
          "_1100",
          "_1101",
          "_1102",
          "_1103",
          "_1104",
          "_1105",
          "_1106",
          "_1107",
          "_1108",
          "_1109",
          "_1110",
          "_1111",
          "_1112",
          "_1113",
          "_1114",
          "_1115",
          "_1116",
          "_1117",
          "_1118",
          "_1119",
          "_1120",
          "_1121",
          "_1122",
          "_1123",
          "_1124",
          "_1125",
          "_1126",
          "_1127",
          "_1128",
          "_1129",
          "_1130",
          "_1131",
          "_1132",
          "_1133",
          "_1134",
          "_1135",
          "_1136",
          "_1137",
          "_1138",
          "_1139",
          "_1140",
          "_1141",
          "_1142",
          "_1143",
          "_1144",
          "_1145",
          "_1146",
          "_1147",
          "_1148",
          "_1149",
          "_1150",
          "_1151",
          "_1152",
          "_1153",
          "_1154",
          "_1155",
          "_1156",
          "_1157",
          "_1158",
          "_1159",
          "_1160",
          "_1161",
          "_1162",
          "_1163",
          "_1164",
          "_1165",
          "_1166",
          "_1167",
          "_1168",
          "_1169",
          "_1170",
          "_1171",
          "_1172",
          "_1173",
          "_1174",
          "_1175",
          "_1176",
          "_1177",
          "_1178",
          "_1179",
          "_1180",
          "_1181",
          "_1182",
          "_1183",
          "_1184",
          "_1185",
          "_1186",
          "_1187",
          "_1188",
          "_1189",
          "_1190",
          "_1191",
          "_1192",
          "_1193",
          "_1194",
          "_1195",
          "_1196",
          "_1197",
          "_1198",
          "_1199",
          "_1200",
          "_1201",
          "_1202",
          "_1203",
          "_1204",
          "_1205",
          "_1206",
          "_1207",
          "_1208",
          "_1209",
          "_1210",
          "_1211",
          "_1212",
          "_1213",
          "_1214",
          "_1215",
          "_1216",
          "_1217",
          "_1218",
          "_1219",
          "_1220",
          "_1221",
          "_1222",
          "_1223",
          "_1224",
          "_1225",
          "_1226",
          "_1227",
          "_1228",
          "_1229",
          "_1230",
          "_1231",
          "_1232",
          "_1233",
          "_1234",
          "_1235",
          "_1236",
          "_1237",
          "_1238",
          "_1239",
          "_1240",
          "_1241",
          "_1242",
          "_1243",
          "_1244",
          "_1245",
          "_1246",
          "_1247",
          "_1248",
          "_1249",
          "_1250",
          "_1251",
          "_1252",
          "_1253",
          "_1254",
          "_1255",
          "_1256",
          "_1257",
          "_1258",
          "_1259",
          "_1260",
          "_1261",
          "_1262",
          "_1263",
          "_1264",
          "_1265",
          "_1266",
          "_1267",
          "_1268",
          "_1269",
          "_1270",
          "_1271",
          "_1272",
          "_1273",
          "_1274",
          "_1275",
          "_1276",
          "_1277",
          "_1278",
          "_1279",
          "_1280",
          "_1281",
          "_1282",
          "_1283",
          "_1284",
          "_1285",
          "_1286",
          "_1287",
          "_1288",
          "_1289",
          "_1290",
          "_1291",
          "_1292",
          "_1293",
          "_1294",
          "_1295",
          "_1296",
          "_1297",
          "_1298",
          "_1299",
          "_1300",
          "_1301",
          "_1302",
          "_1303",
          "_1304",
          "_1305",
          "_1306",
          "_1307",
          "_1308",
          "_1309",
          "_1310",
          "_1311",
          "_1312",
          "_1313",
          "_1314",
          "_1315",
          "_1316",
          "_1317",
          "_1318",
          "_1319",
          "_1320",
          "_1321",
          "_1322",
          "_1323",
          "_1324",
          "_1325",
          "_1326",
          "_1327",
          "_1328",
          "_1329",
          "_1330",
          "_1331",
          "_1332",
          "_1333",
          "_1334",
          "_1335",
          "_1336",
          "_1338",
          "_1339",
          "_1340",
          "_1341",
          "_1342",
          "_1343",
          "_1344",
          "_1345",
          "_1346",
          "_1347",
          "_1348",
          "_1349",
          "_1350",
          "_1351",
          "_1352",
          "_1353",
          "_1354",
          "_1355",
          "_1356",
          "_1357",
          "_1358",
          "_1359",
          "_1360",
          "_1361",
          "_1362",
          "_1363",
          "_1364",
          "_1365",
          "_1366",
          "_1367",
          "_1368",
          "_1369",
          "_1370",
          "_1371",
          "_1372",
          "_1373",
          "_1374",
          "_1375",
          "_1376",
          "_1377",
          "_1378",
          "_1379",
          "_1380",
          "_1381",
          "_1382",
          "_1383",
          "_1385",
          "_1386",
          "_1387",
          "_1388",
          "_1389",
          "_1390",
          "_1391",
          "_1392",
          "_1393",
          "_1394",
          "_1395",
          "_1396",
          "_1397",
          "_1398",
          "_1399",
          "_1400",
          "_1401",
          "_1402",
          "_1403",
          "_1404",
          "_1405",
          "_1406",
          "_1407",
          "_1408",
          "_1409",
          "_1410",
          "_1411",
          "_1412",
          "_1413",
          "_1414",
          "_1415",
          "_1416",
          "_1417",
          "_1418",
          "_1419",
          "_1420",
          "_1421",
          "_1422",
          "_1423",
          "_1424",
          "_1425",
          "_1426",
          "_1427",
          "_1428",
          "_1429",
          "_1430",
          "_1431",
          "_1432",
          "_1433",
          "_1434",
          "_1435",
          "_1436",
          "_1437",
          "_1438",
          "_1439",
          "_1440",
          "_1441",
          "_1442",
          "_1443",
          "_1444",
          "_1445",
          "_1446",
          "_1447",
          "_1448",
          "_1449",
          "_1450",
          "_1451",
          "_1452",
          "_1453",
          "_1454",
          "_1455",
          "_1456",
          "_1457",
          "_1458",
          "_1459",
          "_1460",
          "_1461",
          "_1462",
          "_1463",
          "_1464",
          "_1465",
          "_1466",
          "_1467",
          "_1468",
          "_1469",
          "_1470",
          "_1471",
          "_1472",
          "_1473",
          "_1474",
          "_1475",
          "_1476",
          "_1477",
          "_1478",
          "_1479",
          "_1480",
          "_1481",
          "_1482",
          "_1483",
          "_1484",
          "_1485",
          "_1486",
          "_1487",
          "_1488",
          "_1489",
          "_1490",
          "_1491",
          "_1492",
          "_1493",
          "_1494",
          "_1495",
          "_1496",
          "_1497",
          "_1498",
          "_1499",
          "_1500",
          "_1501",
          "_1502",
          "_1503",
          "_1504",
          "_1505",
          "_1506",
          "_1507",
          "_1508",
          "_1509",
          "_1510",
          "_1511",
          "_1512",
          "_1513",
          "_1514",
          "_1515",
          "_1516",
          "_1517",
          "_1518",
          "_1519",
          "_1520",
          "_1521",
          "_1522",
          "_1523",
          "_1524",
          "_1525",
          "_1526",
          "_1527",
          "_1528",
          "_1529",
          "_1530",
          "_1531",
          "_1532",
          "_1533",
          "_1534",
          "_1535",
          "_1536",
          "_1537",
          "_1538",
          "_1539",
          "_1540",
          "_1541",
          "_1542",
          "_1543",
          "_1544",
          "_1545",
          "_1546",
          "_1547",
          "_1548",
          "_1549",
          "_1550",
          "_1551",
          "_1552",
          "_1553",
          "_1554",
          "_1555",
          "_1556",
          "_1557",
          "_1558",
          "_1559",
          "_1560",
          "_1561",
          "_1562",
          "_1563",
          "_1564",
          "_1565",
          "_1566",
          "_1567",
          "_1568",
          "_1569",
          "_1570",
          "_1571",
          "_1572",
          "_1573",
          "_1574",
          "_1575",
          "_1576",
          "_1577",
          "_1578",
          "_1579",
          "_1580",
          "_1581",
          "_1582",
          "_1583",
          "_1584",
          "_1585",
          "_1586",
          "_1587",
          "_1588",
          "_1589",
          "_1590",
          "_1591",
          "_1592",
          "_1593",
          "_1594",
          "_1595",
          "_1596",
          "_1597",
          "_1598",
          "_1599",
          "_1600",
          "_1601",
          "_1602",
          "_1603",
          "_1604",
          "_1605",
          "_1606",
          "_1607",
          "_1608",
          "_1609",
          "_1610",
          "_1611",
          "_1612",
          "_1613",
          "_1614",
          "_1615",
          "_1616",
          "_1617",
          "_1618",
          "_1619",
          "_1620",
          "_1621",
          "_1622",
          "_1623",
          "_1624",
          "_1625",
          "_1626",
          "_1627",
          "_1628",
          "_1629",
          "_1630",
          "_1631",
          "_1632",
          "_1633",
          "_1634",
          "_1635",
          "_1636",
          "_1637",
          "_1638",
          "_1639",
          "_1640",
          "_1641",
          "_1642",
          "_1643",
          "_1644",
          "_1645",
          "_1646",
          "_1647",
          "_1648",
          "_1649",
          "_1650",
          "_1651",
          "_1652",
          "_1653",
          "_1654",
          "_1655",
          "_1656",
          "_1657",
          "_1658",
          "_1659",
          "_1660",
          "_1661",
          "_1662",
          "_1663",
          "_1664",
          "_1665",
          "_1666",
          "_1667",
          "_1668",
          "_1669",
          "_1670",
          "_1671",
          "_1672",
          "_1673",
          "_1674",
          "_1675",
          "_1676",
          "_1677",
          "_1678",
          "_1679",
          "_1680",
          "_1681",
          "_1682",
          "_1683",
          "_1684",
          "_1685",
          "_1686",
          "_1687",
          "_1688",
          "_1689",
          "_1690",
          "_1691",
          "_1692",
          "_1693",
          "_1694",
          "_1695",
          "_1696",
          "_1697",
          "_1698",
          "_1699",
          "_1700",
          "_1701",
          "_1702",
          "_1703",
          "_1704",
          "_1705",
          "_1706",
          "_1707",
          "_1708",
          "_1709",
          "_1710",
          "_1711",
          "_1712",
          "_1713",
          "_1714",
          "_1715",
          "_1716",
          "_1717",
          "_1718",
          "_1719",
          "_1720",
          "_1721",
          "_1722",
          "_1723",
          "_1724",
          "_1725",
          "_1726",
          "_1727",
          "_1728",
          "_1729",
          "_1730",
          "_1731",
          "_1732",
          "_1733",
          "_1734",
          "_1735",
          "_1736",
          "_1737",
          "_1738",
          "_1739",
          "_1740",
          "_1741",
          "_1742",
          "_1743",
          "_1744",
          "_1745",
          "_1746",
          "_1747",
          "_1748",
          "_1749",
          "_1750",
          "_1751",
          "_1752",
          "_1753",
          "_1754",
          "_1755",
          "_1756",
          "_1757",
          "_1758",
          "_1759",
          "_1760",
          "_1761",
          "_1762",
          "_1763",
          "_1764",
          "_1765",
          "_1766",
          "_1767",
          "_1768",
          "_1769",
          "_1770",
          "_1771",
          "_1772",
          "_1773",
          "_1774",
          "_1775",
          "_1776",
          "_1777",
          "_1778",
          "_1780",
          "_1781",
          "_1782",
          "_1783",
          "_1784",
          "_1785",
          "_1786",
          "_1787",
          "_1788",
          "_1789",
          "_1790",
          "_1791",
          "_1792",
          "_1793",
          "_1794",
          "_1795",
          "_1796",
          "_1797",
          "_1798",
          "_1799",
          "_1800",
          "_1801",
          "_1802",
          "_1803",
          "_1804",
          "_1805",
          "_1806",
          "_1807",
          "_1808",
          "_1809",
          "_1810",
          "_1811",
          "_1812",
          "_1813",
          "_1814",
          "_1815",
          "_1816",
          "_1817",
          "_1818",
          "_1819",
          "_1820",
          "_1821",
          "_1822",
          "_1823",
          "_1824",
          "_1825",
          "_1826",
          "_1827",
          "_1828",
          "_1829",
          "_1830",
          "_1831",
          "_1832",
          "_1833",
          "_1834",
          "_1835",
          "_1836",
          "_1837",
          "_1838",
          "_1839",
          "_1840",
          "_1841",
          "_1842",
          "_1843",
          "_1844",
          "_1845",
          "_1846",
          "_1847",
          "_1848",
          "_1849",
          "_1850",
          "_1851",
          "_1852",
          "_1853",
          "_1854",
          "_1855",
          "_1856",
          "_1857",
          "_1858",
          "_1859",
          "_1860",
          "_1861",
          "_1862",
          "_1863",
          "_1864",
          "_1865",
          "_1866",
          "_1867",
          "_1868",
          "_1869",
          "_1870",
          "_1871",
          "_1872",
          "_1873",
          "_1874",
          "_1875",
          "_1876",
          "_1877",
          "_1878",
          "_1879",
          "_1880",
          "_1881",
          "_1882",
          "_1883",
          "_1884",
          "_1885",
          "_1886",
          "_1887",
          "_1888",
          "_1889",
          "_1890",
          "_1891",
          "_1892",
          "_1893",
          "_1894",
          "_1895",
          "_1896",
          "_1897",
          "_1898",
          "_1899",
          "_1900",
          "_1901",
          "_1902",
          "_1903",
          "_1904",
          "_1905",
          "_1906",
          "_1907",
          "_1908",
          "_1909",
          "_1910",
          "_1911",
          "_1912",
          "_1913",
          "_1914",
          "_1915",
          "_1916",
          "_1917",
          "_1918",
          "_1919",
          "_1920",
          "_1921",
          "_1922",
          "_1923",
          "_1924",
          "_1925",
          "_1926",
          "_1927",
          "_1928",
          "_1929",
          "_1930",
          "_1931",
          "_1932",
          "_1933",
          "_1934",
          "_1935",
          "_1936",
          "_1937",
          "_1938",
          "_1939",
          "_1940",
          "_1941",
          "_1942",
          "_1943",
          "_1944",
          "_1945",
          "_1946",
          "_1947",
          "_1948",
          "_1949",
          "_1950",
          "_1951",
          "_1952",
          "_1953",
          "_1954",
          "_1955",
          "_1956",
          "_1957",
          "_1958",
          "_1959",
          "_1960",
          "_1961",
          "_1962",
          "_1964",
          "_1965",
          "_1966",
          "_1967",
          "_1968",
          "_1969",
          "_1970",
          "_1971",
          "_1972",
          "_1973",
          "_1974",
          "_1975",
          "_1976",
          "_1977",
          "_1978",
          "_1979",
          "_1980",
          "_1981",
          "_1982",
          "_1990",
          "_1991",
          "_1992",
          "_1993",
          "_1994",
          "_1995",
          "_1996",
          "_1997",
          "_1998",
          "_1999",
          "_2000",
          "_2001",
          "_2002",
          "_2003",
          "_2004",
          "_2005",
          "_2006",
          "_2007",
          "_2008",
          "_2009",
          "_2010",
          "_2011",
          "_2012",
          "_2013",
          "_2014",
          "_2015",
          "_2016",
          "_2017",
          "_2018",
          "_2019",
          "_2020",
          "_2021",
          "_2022",
          "_2023",
          "_2024",
          "_2025",
          "_2026",
          "_2027",
          "_2028",
          "_2029",
          "_2030",
          "_2031",
          "_2032",
          "_2033",
          "_2034",
          "_2035",
          "_2036",
          "_2037",
          "_2038",
          "_2039",
          "_2040",
          "_2041",
          "_2042",
          "_2043",
          "_2044",
          "_2045",
          "_2046",
          "_2047",
          "_2048",
          "_2049",
          "_2050",
          "_2051",
          "_2052",
          "_2053",
          "_2054",
          "_2055",
          "_2056",
          "_2057",
          "_2058",
          "_2059",
          "_2060",
          "_2061",
          "_2062",
          "_2063",
          "_2064",
          "_2065",
          "_2066",
          "_2067",
          "_2068",
          "_2069",
          "_2070",
          "_2071",
          "_2072",
          "_2073",
          "_2074",
          "_2075",
          "_2076",
          "_2077",
          "_2078",
          "_2079",
          "_2080",
          "_2081",
          "_2082",
          "_2083",
          "_2084",
          "_2085",
          "_2086",
          "_2087",
          "_2088",
          "_2089",
          "_2090",
          "_2091",
          "_2092",
          "_2093",
          "_2094",
          "_2095",
          "_2096",
          "_2097",
          "_2098",
          "_2099",
          "_2100",
          "_2101",
          "_2102",
          "_2103",
          "_2104",
          "_2105",
          "_2106",
          "_2107",
          "_2108",
          "_2109",
          "_2110",
          "_2111",
          "_2112",
          "_2113",
          "_2114",
          "_2115",
          "_2116",
          "_2117",
          "_2118",
          "_2119",
          "_2120",
          "_2121",
          "_2122",
          "_2123",
          "_2124",
          "_2125",
          "_2126",
          "_2127",
          "_2128",
          "_2129",
          "_2130",
          "_2131",
          "_2135",
          "_2136",
          "_2137",
          "_2138",
          "_2139",
          "_2140",
          "_2141",
          "_2142",
          "_2143",
          "_2144",
          "_2145",
          "_2146",
          "_2147",
          "_2148",
          "_2149",
          "_2150",
          "_2151",
          "_2152",
          "_2153",
          "_2154",
          "_2155",
          "_2156",
          "_2157",
          "_2158",
          "_2159",
          "_2160",
          "_2161",
          "_2162",
          "_2163",
          "_2164",
          "_2165",
          "_2166",
          "_2167",
          "_2168",
          "_2169",
          "_2170",
          "_2171",
          "_2172",
          "_2173",
          "_2174",
          "_2175",
          "_2176",
          "_2177",
          "_2178",
          "_2179",
          "_2180",
          "_2181",
          "_2182",
          "_2183",
          "_2184",
          "_2185",
          "_2186",
          "_2187",
          "_2188",
          "_2189",
          "_2190",
          "_2191",
          "_2192",
          "_2193",
          "_2194",
          "_2195",
          "_2196",
          "_2197",
          "_2198",
          "_2199",
          "_2200",
          "_2201",
          "_2202",
          "_2203",
          "_2204",
          "_2205",
          "_2206",
          "_2207",
          "_2208",
          "_2209",
          "_2210",
          "_2211",
          "_2212",
          "_2213",
          "_2214",
          "_2215",
          "_2216",
          "_2217",
          "_2218",
          "_2219",
          "_2220",
          "_2221",
          "_2222",
          "_2223",
          "_2224",
          "_2225",
          "_2226",
          "_2227",
          "_2228",
          "_2229",
          "_2230",
          "_2231",
          "_2232",
          "_2233",
          "_2234",
          "_2235",
          "_2236",
          "_2237",
          "_2238",
          "_2239",
          "_2240",
          "_2241",
          "_2242",
          "_2243",
          "_2244",
          "_2245",
          "_2246",
          "_2247",
          "_2248",
          "_2249",
          "_2250",
          "_2251",
          "_2252",
          "_2253",
          "_2254",
          "_2255",
          "_2256",
          "_2257",
          "_2258",
          "_2259",
          "_2260",
          "_2261",
          "_2262",
          "_2263",
          "_2264",
          "_2265",
          "_2266",
          "_2267",
          "_2268",
          "_2269",
          "_2270",
          "_2271",
          "_2272",
          "_2273",
          "_2274",
          "_2275",
          "_2276",
          "_2277",
          "_2278",
          "_2279",
          "_2280",
          "_2281",
          "_2282",
          "_2283",
          "_2284",
          "_2285",
          "_2286",
          "_2287",
          "_2288",
          "_2289",
          "_2290",
          "_2291",
          "_2292",
          "_2293",
          "_2294",
          "_2295",
          "_2296",
          "_2297",
          "_2298",
          "_2299",
          "_2300",
          "_2301",
          "_2302",
          "_2303",
          "_2304",
          "_2305",
          "_2306",
          "_2307",
          "_2308",
          "_2309",
          "_2310",
          "_2311",
          "_2312",
          "_2313",
          "_2314",
          "_2315",
          "_2316",
          "_2317",
          "_2318",
          "_2319",
          "_2320",
          "_2321",
          "_2322",
          "_2323",
          "_2324",
          "_2325",
          "_2326",
          "_2327",
          "_2328",
          "_2329",
          "_2330",
          "_2331",
          "_2332",
          "_2333",
          "_2334",
          "_2335",
          "_2336",
          "_2337",
          "_2338",
          "_2339",
          "_2340",
          "_2341",
          "_2342",
          "_2343",
          "_2355",
          "_2356",
          "_2357",
          "_2358",
          "_2359",
          "_2360",
          "_2361",
          "_2362",
          "_2363",
          "_2364",
          "_2365",
          "_2366",
          "_2367",
          "_2368",
          "_2369",
          "_2370",
          "_2371",
          "_2372",
          "_2373",
          "_2374",
          "_2375",
          "_2376",
          "_2377",
          "_2378",
          "_2379",
          "_2380",
          "_2381",
          "_2382",
          "_2383",
          "_2384",
          "_2385",
          "_2386",
          "_2387",
          "_2388",
          "_2389",
          "_2390",
          "_2391",
          "_2392",
          "_2393",
          "_2394",
          "_2395",
          "_2396",
          "_2397",
          "_2398",
          "_2399",
          "_2400",
          "_2401",
          "_2402",
          "_2403",
          "_2404",
          "_2405",
          "_2406",
          "_2407",
          "_2408",
          "_2409",
          "_2410",
          "_2411",
          "_2412",
          "_2413",
          "_2414",
          "_2415",
          "_2416",
          "_2417",
          "_2418",
          "_2419",
          "_2420",
          "_2421",
          "_2422",
          "_2423",
          "_2424",
          "_2425",
          "_2426",
          "_2427",
          "_2428",
          "_2429",
          "_2430",
          "_2431",
          "_2432",
          "_2433",
          "_2434",
          "_2435",
          "_2436",
          "_2437",
          "_2438",
          "_2439",
          "_2440",
          "_2441",
          "_2442",
          "_2443",
          "_2445",
          "_2447",
          "_2448",
          "_2449",
          "_2450",
          "_2451",
          "_2452",
          "_2453",
          "_2454",
          "_2455",
          "_2456",
          "_2457",
          "_2458",
          "_2459",
          "_2460",
          "_2461",
          "_2462",
          "_2463",
          "_2464",
          "_2465",
          "_2466",
          "_2467",
          "_2468",
          "_2469",
          "_2471",
          "_2472",
          "_2473",
          "_2474",
          "_2475",
          "_2476",
          "_2477",
          "_2478",
          "_2479",
          "_2480",
          "_2481",
          "_2482",
          "_2483",
          "_2484",
          "_2485",
          "_2486",
          "_2487",
          "_2488",
          "_2489",
          "_2490",
          "_2491",
          "_2492",
          "_2493",
          "_2494",
          "_2495",
          "_2496",
          "_2497",
          "_2498",
          "_2499",
          "_2500",
          "_2501",
          "_2502",
          "_2503",
          "_2504",
          "_2505",
          "_2506",
          "_2507",
          "_2508",
          "_2509",
          "_2510",
          "_2511",
          "_2512",
          "_2513",
          "_2514",
          "_2515",
          "_2516",
          "_2517",
          "_2518",
          "_2519",
          "_2520",
          "_2521",
          "_2523",
          "_2524",
          "_2525",
          "_2526",
          "_2527",
          "_2528",
          "_2529",
          "_2530",
          "_2531",
          "_2532",
          "_2533",
          "_2534",
          "_2535",
          "_2536",
          "_2537",
          "_2538",
          "_2539",
          "_2540",
          "_2541",
          "_2542",
          "_2543",
          "_2544",
          "_2545",
          "_2546",
          "_2547",
          "_2548",
          "_2549",
          "_2550",
          "_2551",
          "_2552",
          "_2553",
          "_2554",
          "_2555",
          "_2556",
          "_2557",
          "_2558",
          "_2559",
          "_2560",
          "_2561",
          "_2562",
          "_2563",
          "_2564",
          "_2565",
          "_2566",
          "_2567",
          "_2568",
          "_2569",
          "_2570",
          "_2571",
          "_2572",
          "_2573",
          "_2574",
          "_2575",
          "_2576",
          "_2577",
          "_2578",
          "_2579",
          "_2580",
          "_2581",
          "_2582",
          "_2583",
          "_2584",
          "_2585",
          "_2586",
          "_2587",
          "_2589",
          "_2590",
          "_2591",
          "_2592",
          "_2593",
          "_2594",
          "_2595",
          "_2596",
          "_2597",
          "_2598",
          "_2599",
          "_2600",
          "_2601",
          "_2602",
          "_2603",
          "_2604",
          "_2605",
          "_2606",
          "_2607",
          "_2608",
          "_2609",
          "_2610",
          "_2611",
          "_2612",
          "_2613",
          "_2614",
          "_2615",
          "_2616",
          "_2617",
          "_2618",
          "_2619",
          "_2620",
          "_2621",
          "_2622",
          "_2623",
          "_2624",
          "_2625",
          "_2626",
          "_2627",
          "_2629",
          "_2630",
          "_2631",
          "_2632",
          "_2633",
          "_2634",
          "_2635",
          "_2636",
          "_2637",
          "_2638",
          "_2639",
          "_2640",
          "_2641",
          "_2642",
          "_2643",
          "_2644",
          "_2645",
          "_2646",
          "_2647",
          "_2648",
          "_2649",
          "_2650",
          "_2651",
          "_2652",
          "_2653",
          "_2654",
          "_2655",
          "_2656",
          "_2657",
          "_2658",
          "_2659",
          "_2660",
          "_2661",
          "_2662",
          "_2663",
          "_2664",
          "_2665",
          "_2666",
          "_2667",
          "_2668",
          "_2669",
          "_2670",
          "_2671",
          "_2672",
          "_2673",
          "_2674",
          "_2675",
          "_2676",
          "_2677",
          "_2678",
          "_2679",
          "_2680",
          "_2681",
          "_2682",
          "_2683",
          "_2684",
          "_2685",
          "_2686",
          "_2687",
          "_2688",
          "_2689",
          "_2690",
          "_2691",
          "_2692",
          "_2693",
          "_2694",
          "_2695",
          "_2696",
          "_2697",
          "_2698",
          "_2699",
          "_2700",
          "_2701",
          "_2702",
          "_2703",
          "_2704",
          "_2705",
          "_2706",
          "_2707",
          "_2708",
          "_2709",
          "_2710",
          "_2711",
          "_2712",
          "_2713",
          "_2714",
          "_2715",
          "_2716",
          "_2717",
          "_2718",
          "_2719",
          "_2720",
          "_2721",
          "_2722",
          "_2723",
          "_2724",
          "_2725",
          "_2726",
          "_2727",
          "_2728",
          "_2729",
          "_2730",
          "_2731",
          "_2732",
          "_2733",
          "_2734",
          "_2735",
          "_2736",
          "_2737",
          "_2738",
          "_2739",
          "_2740",
          "_2741",
          "_2742",
          "_2743",
          "_2744",
          "_2745",
          "_2746",
          "_2747",
          "_2748",
          "_2749",
          "_2750",
          "_2751",
          "_2752",
          "_2753",
          "_2754",
          "_2755",
          "_2756",
          "_2757",
          "_2758",
          "_2759",
          "_2760",
          "_2761",
          "_2762",
          "_2763",
          "_2764",
          "_2765",
          "_2766",
          "_2767",
          "_2768",
          "_2769",
          "_2770",
          "_2771",
          "_2772",
          "_2773",
          "_2774",
          "_2775",
          "_2776",
          "_2777",
          "_2778",
          "_2779",
          "_2780",
          "_2781",
          "_2782",
          "_2783",
          "_2784",
          "_2785",
          "_2786",
          "_2787",
          "_2788",
          "_2789",
          "_2790",
          "_2791",
          "_2792",
          "_2793",
          "_2794",
          "_2795",
          "_2796",
          "_2797",
          "_2798",
          "_2799",
          "_2800",
          "_2801",
          "_2802",
          "_2803",
          "_2804",
          "_2805",
          "_2806",
          "_2807",
          "_2808",
          "_2809",
          "_2810",
          "_2811",
          "_2812",
          "_2813",
          "_2814",
          "_2815",
          "_2816",
          "_2817",
          "_2818",
          "_2819",
          "_2820",
          "_2821",
          "_2822",
          "_2823",
          "_2824",
          "_2825",
          "_2826",
          "_2827",
          "_2828",
          "_2829",
          "_2830",
          "_2831",
          "_2832",
          "_2833",
          "_2834",
          "_2835",
          "_2836",
          "_2837",
          "_2838",
          "_2839",
          "_2840",
          "_2841",
          "_2842",
          "_2843",
          "_2844",
          "_2845",
          "_2846",
          "_2847",
          "_2848",
          "_2849",
          "_2850",
          "_2851",
          "_2852",
          "_2853",
          "_2854",
          "_2855",
          "_2856",
          "_2857",
          "_2858",
          "_2859",
          "_2860",
          "_2861",
          "_2862",
          "_2863",
          "_2864",
          "_2865",
          "_2866",
          "_2867",
          "_2868",
          "_2869",
          "_2870",
          "_2871",
          "_2872",
          "_2873",
          "_2874",
          "_2875",
          "_2876",
          "_2877",
          "_2878",
          "_2879",
          "_2880",
          "_2881",
          "_2882",
          "_2883",
          "_2884",
          "_2885",
          "_2886",
          "_2887",
          "_2889",
          "_2890",
          "_2891",
          "_2892",
          "_2893",
          "_2894",
          "_2895",
          "_2896",
          "_2897",
          "_2898",
          "_2899",
          "_2900",
          "_2901",
          "_2902",
          "_2903",
          "_2904",
          "_2905",
          "_2906",
          "_2907",
          "_2908",
          "_2909",
          "_2910",
          "_2911",
          "_2912",
          "_2913",
          "_2914",
          "_2915",
          "_2916",
          "_2917",
          "_2918",
          "_2919",
          "_2920",
          "_2921",
          "_2922",
          "_2923",
          "_2924",
          "_2925",
          "_2926",
          "_2927",
          "_2928",
          "_2929",
          "_2930",
          "_2931",
          "_2932",
          "_2933",
          "_2934",
          "_2935",
          "_2936",
          "_2937",
          "_2938",
          "_2939",
          "_2940",
          "_2941",
          "_2942",
          "_2943",
          "_2944",
          "_2945",
          "_2946",
          "_2947",
          "_2948",
          "_2949",
          "_2950",
          "_2951",
          "_2952",
          "_2953",
          "_2954",
          "_2955",
          "_2956",
          "_2957",
          "_2958",
          "_2959",
          "_2960",
          "_2961",
          "_2962",
          "_2963",
          "_2964",
          "_2965",
          "_2966",
          "_2967",
          "_2968",
          "_2969",
          "_2970",
          "_2971",
          "_2972",
          "_2973",
          "_2974",
          "_2975",
          "_2976",
          "_2977",
          "_2978",
          "_2979",
          "_2980",
          "_2981",
          "_2982",
          "_2983",
          "_2984",
          "_2985",
          "_2986",
          "_2987",
          "_2988",
          "_2989",
          "_2990",
          "_2991",
          "_2992",
          "_2993",
          "_2994",
          "_2995",
          "_2996",
          "_2997",
          "_2998",
          "_2999",
          "_3000",
          "_3001",
          "_3002",
          "_3003",
          "_3004",
          "_3005",
          "_3006",
          "_3007",
          "_3008",
          "_3009",
          "_3010",
          "_3011",
          "_3012",
          "_3013",
          "_3014",
          "_3015",
          "_3016",
          "_3017",
          "_3018",
          "_3019",
          "_3020",
          "_3021",
          "_3022",
          "_3023",
          "_3024",
          "_3025",
          "_3026",
          "_3027",
          "_3028",
          "_3029",
          "_3030",
          "_3031",
          "_3032",
          "_3033",
          "_3034",
          "_3035",
          "_3036",
          "_3037",
          "_3038",
          "_3039",
          "_3040",
          "_3041",
          "_3042",
          "_3043",
          "_3044",
          "_3045",
          "_3046",
          "_3047",
          "_3048",
          "_3049",
          "_3050",
          "_3051",
          "_3052",
          "_3055",
          "_3056",
          "_3057",
          "_3058",
          "_3059",
          "_3060",
          "_3061",
          "_3062",
          "_3063",
          "_3064",
          "_3065",
          "_3066",
          "_3067",
          "_3068",
          "_3069",
          "_3070",
          "_3071",
          "_3072",
          "_3073",
          "_3074",
          "_3075",
          "_3076",
          "_3077",
          "_3078",
          "_3079",
          "_3080",
          "_3081",
          "_3082",
          "_3083",
          "_3084",
          "_3085",
          "_3086",
          "_3087",
          "_3088",
          "_3089",
          "_3090",
          "_3091",
          "_3092",
          "_3093",
          "_3094",
          "_3095",
          "_3096",
          "_3097",
          "_3098",
          "_3099",
          "_3100",
          "_3101",
          "_3102",
          "_3103",
          "_3104",
          "_3105",
          "_3106",
          "_3107",
          "_3108",
          "_3109",
          "_3110",
          "_3111",
          "_3112",
          "_3113",
          "_3114",
          "_3115",
          "_3116",
          "_3117",
          "_3118",
          "_3119",
          "_3120",
          "_3121",
          "_3122",
          "_3123",
          "_3124",
          "_3125",
          "_3126",
          "_3127",
          "_3128",
          "_3129",
          "_3130",
          "_3131",
          "_3132",
          "_3133",
          "_3134",
          "_3135",
          "_3136",
          "_3137",
          "_3138",
          "_3139",
          "_3140",
          "_3141",
          "_3142",
          "_3143",
          "_3144",
          "_3145",
          "_3146",
          "_3147",
          "_3148",
          "_3149",
          "_3150",
          "_3151",
          "_3152",
          "_3153",
          "_3154",
          "_3155",
          "_3156",
          "_3157",
          "_3158",
          "_3159",
          "_3160",
          "_3161",
          "_3162",
          "_3163",
          "_3164",
          "_3165",
          "_3166",
          "_3167",
          "_3168",
          "_3169",
          "_3170",
          "_3171",
          "_3172",
          "_3173",
          "_3174",
          "_3175",
          "_3176",
          "_3177",
          "_3178",
          "_3179",
          "_3180",
          "_3181",
          "_3182",
          "_3183",
          "_3184",
          "_3185",
          "_3186",
          "_3187",
          "_3188",
          "_3189",
          "_3190",
          "_3191",
          "_3192",
          "_3193",
          "_3194",
          "_3195",
          "_3196",
          "_3197",
          "_3198",
          "_3199",
          "_3200",
          "_3201",
          "_3202",
          "_3203",
          "_3204",
          "_3205",
          "_3206",
          "_3207",
          "_3208",
          "_3209",
          "_3210",
          "_3211",
          "_3212",
          "_3213",
          "_3214",
          "_3215",
          "_3216",
          "_3217",
          "_3218",
          "_3219",
          "_3220",
          "_3221",
          "_3222",
          "_3223",
          "_3224",
          "_3225",
          "_3226",
          "_3227",
          "_3228",
          "_3229",
          "_3230",
          "_3231",
          "_3232",
          "_3233",
          "_3234",
          "_3235",
          "_3236",
          "_3237",
          "_3238",
          "_3239",
          "_3240",
          "_3241",
          "_3242",
          "_3243",
          "_3244",
          "_3245",
          "_3246",
          "_3247",
          "_3248",
          "_3249",
          "_3250",
          "_3251",
          "_3252",
          "_3253",
          "_3254",
          "_3255",
          "_3256",
          "_3257",
          "_3258",
          "_3259",
          "_3260",
          "_3261",
          "_3262",
          "_3263",
          "_3264",
          "_3265",
          "_3267",
          "_3268",
          "_3269",
          "_3270",
          "_3271",
          "_3272",
          "_3273",
          "_3274",
          "_3275",
          "_3276",
          "_3277",
          "_3278",
          "_3279",
          "_3280",
          "_3281",
          "_3282",
          "_3283",
          "_3284",
          "_3285",
          "_3286",
          "_3289",
          "_3290",
          "_3291",
          "_3292",
          "_3293",
          "_3294",
          "_3295",
          "_3296",
          "_3297",
          "_3298",
          "_3299",
          "_3300",
          "_3301",
          "_3302",
          "_3303",
          "_3304",
          "_3305",
          "_3306",
          "_3307",
          "_3308",
          "_3309",
          "_3310",
          "_3311",
          "_3312",
          "_3313",
          "_3314",
          "_3315",
          "_3316",
          "_3317",
          "_3318",
          "_3319",
          "_3320",
          "_3321",
          "_3322",
          "_3323",
          "_3324",
          "_3325",
          "_3326",
          "_3327",
          "_3328",
          "_3329",
          "_3330",
          "_3331",
          "_3332",
          "_3333",
          "_3334",
          "_3335",
          "_3336",
          "_3337",
          "_3338",
          "_3339",
          "_3340",
          "_3341",
          "_3342",
          "_3343",
          "_3344",
          "_3345",
          "_3346",
          "_3347",
          "_3348",
          "_3349",
          "_3350",
          "_3351",
          "_3352",
          "_3353",
          "_3354",
          "_3355",
          "_3356",
          "_3357",
          "_3358",
          "_3359",
          "_3360",
          "_3361",
          "_3362",
          "_3363",
          "_3364",
          "_3365",
          "_3366",
          "_3367",
          "_3368",
          "_3369",
          "_3370",
          "_3371",
          "_3372",
          "_3373",
          "_3374",
          "_3375",
          "_3376",
          "_3377",
          "_3378",
          "_3379",
          "_3380",
          "_3381",
          "_3382",
          "_3383",
          "_3384",
          "_3385",
          "_3386",
          "_3387",
          "_3388",
          "_3389",
          "_3390",
          "_3391",
          "_3392",
          "_3393",
          "_3394",
          "_3395",
          "_3396",
          "_3397",
          "_3398",
          "_3399",
          "_3400",
          "_3401",
          "_3402",
          "_3403",
          "_3404",
          "_3405",
          "_3406",
          "_3407",
          "_3408",
          "_3409",
          "_3410",
          "_3411",
          "_3412",
          "_3413",
          "_3414",
          "_3415",
          "_3416",
          "_3417",
          "_3418",
          "_3419",
          "_3420",
          "_3421",
          "_3422",
          "_3423",
          "_3424",
          "_3425",
          "_3426",
          "_3427",
          "_3428",
          "_3429",
          "_3430",
          "_3431",
          "_3432",
          "_3433",
          "_3434",
          "_3435",
          "_3436",
          "_3437",
          "_3438",
          "_3439",
          "_3440",
          "_3441",
          "_3442",
          "_3443",
          "_3444",
          "_3445",
          "_3446",
          "_3447",
          "_3448",
          "_3449",
          "_3450",
          "_3451",
          "_3452",
          "_3453",
          "_3454",
          "_3455",
          "_3456",
          "_3457",
          "_3458",
          "_3459",
          "_3460",
          "_3461",
          "_3462",
          "_3463",
          "_3464",
          "_3465",
          "_3466",
          "_3467",
          "_3468",
          "_3469",
          "_3470",
          "_3471",
          "_3472",
          "_3473",
          "_3474",
          "_3475",
          "_3476",
          "_3477",
          "_3478",
          "_3479",
          "_3480",
          "_3481",
          "_3482",
          "_3483",
          "_3484",
          "_3485",
          "_3486",
          "_3487",
          "_3488",
          "_3489",
          "_3490",
          "_3491",
          "_3492",
          "_3493",
          "_3494",
          "_3495",
          "_3496",
          "_3497",
          "_3498",
          "_3499",
          "_3500",
          "_3501",
          "_3502",
          "_3503",
          "_3504",
          "_3505",
          "_3507",
          "_3508",
          "_3509",
          "_3510",
          "_3511",
          "_3512",
          "_3513",
          "_3514",
          "_3515",
          "_3516",
          "_3517",
          "_3518",
          "_3519",
          "_3520",
          "_3521",
          "_3522",
          "_3523",
          "_3524",
          "_3525",
          "_3526",
          "_3527",
          "_3528",
          "_3529",
          "_3530",
          "_3531",
          "_3532",
          "_3533",
          "_3534",
          "_3535",
          "_3536",
          "_3537",
          "_3538",
          "_3539",
          "_3540",
          "_3541",
          "_3542",
          "_3543",
          "_3544",
          "_3545",
          "_3546",
          "_3547",
          "_3548",
          "_3549",
          "_3550",
          "_3551",
          "_3552",
          "_3553",
          "_3554",
          "_3555",
          "_3556",
          "_3557",
          "_3558",
          "_3559",
          "_3560",
          "_3561",
          "_3562",
          "_3563",
          "_3564",
          "_3567",
          "_3568",
          "_3569",
          "_3570",
          "_3571",
          "_3572",
          "_3573",
          "_3574",
          "_3575",
          "_3576",
          "_3577",
          "_3578",
          "_3579",
          "_3580",
          "_3581",
          "_3582",
          "_3583",
          "_3584",
          "_3585",
          "_3586",
          "_3587",
          "_3588",
          "_3589",
          "_3590",
          "_3591",
          "_3592",
          "_3593",
          "_3594",
          "_3595",
          "_3596",
          "_3597",
          "_3598",
          "_3599",
          "_3600",
          "_3601",
          "_3602",
          "_3603",
          "_3604",
          "_3605",
          "_3606",
          "_3607",
          "_3608",
          "_3609",
          "_3610",
          "_3611",
          "_3612",
          "_3613",
          "_3614",
          "_3615",
          "_3616",
          "_3617",
          "_3618",
          "_3619",
          "_3620",
          "_3621",
          "_3622",
          "_3623",
          "_3624",
          "_3625",
          "_3626",
          "_3627",
          "_3628",
          "_3629",
          "_3630",
          "_3631",
          "_3632",
          "_3633",
          "_3634",
          "_3635",
          "_3636",
          "_3637",
          "_3638",
          "_3639",
          "_3640",
          "_3641",
          "_3642",
          "_3643",
          "_3644",
          "_3645",
          "_3646",
          "_3647",
          "_3648",
          "_3649",
          "_3650",
          "_3651",
          "_3652",
          "_3653",
          "_3654",
          "_3655",
          "_3656",
          "_3657",
          "_3658",
          "_3659",
          "_3660",
          "_3661",
          "_3662",
          "_3663",
          "_3664",
          "_3665",
          "_3666",
          "_3667",
          "_3668",
          "_3669",
          "_3670",
          "_3671",
          "_3672",
          "_3673",
          "_3674",
          "_3675",
          "_3676",
          "_3677",
          "_3678",
          "_3679",
          "_3680",
          "_3681",
          "_3682",
          "_3683",
          "_3684",
          "_3685",
          "_3686",
          "_3687",
          "_3688",
          "_3689",
          "_3690",
          "_3691",
          "_3692",
          "_3693",
          "_3694",
          "_3695",
          "_3696",
          "_3697",
          "_3698",
          "_3699",
          "_3700",
          "_3701",
          "_3702",
          "_3703",
          "_3704",
          "_3705",
          "_3706",
          "_3707",
          "_3708",
          "_3709",
          "_3710",
          "_3711",
          "_3712",
          "_3713",
          "_3714",
          "_3715",
          "_3716",
          "_3717",
          "_3718",
          "_3719",
          "_3720",
          "_3721",
          "_3722",
          "_3723",
          "_3724",
          "_3725",
          "_3726",
          "_3727",
          "_3728",
          "_3729",
          "_3730",
          "_3731",
          "_3732",
          "_3733",
          "_3734",
          "_3735",
          "_3736",
          "_3737",
          "_3738",
          "_3739",
          "_3740",
          "_3741",
          "_3742",
          "_3743",
          "_3744",
          "_3745",
          "_3746",
          "_3747",
          "_3748",
          "_3749",
          "_3750",
          "_3751",
          "_3752",
          "_3753",
          "_3754",
          "_3755",
          "_3756",
          "_3757",
          "_3758",
          "_3759",
          "_3760",
          "_3761",
          "_3762",
          "_3763",
          "_3764",
          "_3765",
          "_3766",
          "_3767",
          "_3768",
          "_3769",
          "_3770",
          "_3771",
          "_3772",
          "_3773",
          "_3774",
          "_3775",
          "_3776",
          "_3777",
          "_3778",
          "_3779",
          "_3780",
          "_3781",
          "_3782",
          "_3783",
          "_3784",
          "_3785",
          "_3786",
          "_3787",
          "_3788",
          "_3789",
          "_3790",
          "_3791",
          "_3792",
          "_3793",
          "_3794",
          "_3795",
          "_3796",
          "_3797",
          "_3798",
          "_3799",
          "_3800",
          "_3801",
          "_3802",
          "_3803",
          "_3804",
          "_3805",
          "_3806",
          "_3807",
          "_3808",
          "_3809",
          "_3810",
          "_3811",
          "_3812",
          "_3813",
          "_3814",
          "_3815",
          "_3816",
          "_3817",
          "_3818",
          "_3819",
          "_3820",
          "_3821",
          "_3822",
          "_3823",
          "_3824",
          "_3825",
          "_3826",
          "_3827",
          "_3828",
          "_3829",
          "_3830",
          "_3831",
          "_3832",
          "_3833",
          "_3834",
          "_3835",
          "_3836",
          "_3837",
          "_3838",
          "_3839",
          "_3840",
          "_3841",
          "_3842",
          "_3843",
          "_3844",
          "_3845",
          "_3846",
          "_3847",
          "_3848",
          "_3849",
          "_3850",
          "_3851",
          "_3852",
          "_3853",
          "_3854",
          "_3855",
          "_3856",
          "_3857",
          "_3858",
          "_3859",
          "_3860",
          "_3861",
          "_3862",
          "_3863",
          "_3864",
          "_3865",
          "_3866",
          "_3867",
          "_3868",
          "_3869",
          "_3870",
          "_3871",
          "_3872",
          "_3873",
          "_3874",
          "_3875",
          "_3876",
          "_3877",
          "_3878",
          "_3879",
          "_3880",
          "_3881",
          "_3882",
          "_3883",
          "_3884",
          "_3885",
          "_3886",
          "_3887",
          "_3888",
          "_3889",
          "_3890",
          "_3891",
          "_3892",
          "_3893",
          "_3894",
          "_3895",
          "_3896",
          "_3897",
          "_3898",
          "_3899",
          "_3900",
          "_3901",
          "_3902",
          "_3903",
          "_3904",
          "_3905",
          "_3906",
          "_3907",
          "_3908",
          "_3909",
          "_3910",
          "_3911",
          "_3912",
          "_3913",
          "_3914",
          "_3915",
          "_3916",
          "_3917",
          "_3918",
          "_3919",
          "_3920",
          "_3921",
          "_3922",
          "_3923",
          "_3924",
          "_3925",
          "_3926",
          "_3927",
          "_3928",
          "_3929",
          "_3930",
          "_3931",
          "_3932",
          "_3933",
          "_3934",
          "_3935",
          "_3936",
          "_3937",
          "_3938",
          "_3939",
          "_3940",
          "_3941",
          "_3942",
          "_3943",
          "_3944",
          "_3945",
          "_3946",
          "_3947",
          "_3948",
          "_3949",
          "_3950",
          "_3951",
          "_3952",
          "_3953",
          "_3954",
          "_3955",
          "_3956",
          "_3957",
          "_3958",
          "_3959",
          "_3960",
          "_3961",
          "_3962",
          "_3963",
          "_3964",
          "_3965",
          "_3966",
          "_3967",
          "_3968",
          "_3969",
          "_3970",
          "_3971",
          "_3972",
          "_3973",
          "_3974",
          "_3975",
          "_3976",
          "_3977",
          "_3978",
          "_3979",
          "_3980",
          "_3981",
          "_3982",
          "_3983",
          "_3984",
          "_3985",
          "_3986",
          "_3987",
          "_3988",
          "_3989",
          "_3990",
          "_3991",
          "_3992",
          "_3993",
          "_3994",
          "_3995",
          "_3996",
          "_3997",
          "_3998",
          "_3999"
        ],
        "enum": [
          "_2",
          "_3",
          "_4",
          "_5",
          "_6",
          "_7",
          "_8",
          "_9",
          "_10",
          "_11",
          "_12",
          "_13",
          "_15",
          "_16",
          "_17",
          "_18",
          "_19",
          "_20",
          "_21",
          "_22",
          "_23",
          "_24",
          "_25",
          "_26",
          "_27",
          "_28",
          "_29",
          "_30",
          "_31",
          "_32",
          "_33",
          "_34",
          "_35",
          "_36",
          "_37",
          "_38",
          "_39",
          "_40",
          "_41",
          "_42",
          "_43",
          "_44",
          "_45",
          "_46",
          "_47",
          "_48",
          "_49",
          "_50",
          "_51",
          "_52",
          "_53",
          "_54",
          "_55",
          "_56",
          "_57",
          "_58",
          "_59",
          "_60",
          "_61",
          "_62",
          "_63",
          "_64",
          "_65",
          "_66",
          "_67",
          "_68",
          "_69",
          "_70",
          "_71",
          "_72",
          "_73",
          "_74",
          "_75",
          "_76",
          "_77",
          "_78",
          "_79",
          "_80",
          "_81",
          "_82",
          "_83",
          "_84",
          "_85",
          "_86",
          "_87",
          "_88",
          "_89",
          "_90",
          "_91",
          "_92",
          "_93",
          "_95",
          "_96",
          "_99",
          "_101",
          "_107",
          "_108",
          "_109",
          "_110",
          "_111",
          "_112",
          "_113",
          "_114",
          "_115",
          "_116",
          "_117",
          "_118",
          "_119",
          "_120",
          "_121",
          "_122",
          "_123",
          "_124",
          "_125",
          "_126",
          "_127",
          "_128",
          "_129",
          "_130",
          "_131",
          "_132",
          "_133",
          "_134",
          "_135",
          "_136",
          "_137",
          "_138",
          "_139",
          "_140",
          "_141",
          "_142",
          "_143",
          "_144",
          "_145",
          "_146",
          "_147",
          "_148",
          "_149",
          "_150",
          "_151",
          "_152",
          "_153",
          "_154",
          "_155",
          "_156",
          "_157",
          "_158",
          "_159",
          "_160",
          "_161",
          "_162",
          "_163",
          "_164",
          "_165",
          "_166",
          "_167",
          "_168",
          "_169",
          "_170",
          "_171",
          "_172",
          "_173",
          "_174",
          "_175",
          "_176",
          "_177",
          "_178",
          "_179",
          "_180",
          "_181",
          "_182",
          "_183",
          "_184",
          "_185",
          "_186",
          "_187",
          "_188",
          "_189",
          "_190",
          "_191",
          "_192",
          "_193",
          "_194",
          "_195",
          "_196",
          "_197",
          "_198",
          "_199",
          "_200",
          "_201",
          "_202",
          "_203",
          "_204",
          "_205",
          "_206",
          "_207",
          "_208",
          "_209",
          "_210",
          "_211",
          "_212",
          "_213",
          "_214",
          "_215",
          "_216",
          "_217",
          "_218",
          "_219",
          "_220",
          "_221",
          "_222",
          "_223",
          "_224",
          "_225",
          "_226",
          "_227",
          "_228",
          "_229",
          "_230",
          "_231",
          "_232",
          "_233",
          "_234",
          "_235",
          "_236",
          "_237",
          "_238",
          "_239",
          "_240",
          "_241",
          "_242",
          "_243",
          "_244",
          "_245",
          "_246",
          "_247",
          "_248",
          "_249",
          "_250",
          "_251",
          "_252",
          "_253",
          "_254",
          "_255",
          "_256",
          "_257",
          "_258",
          "_259",
          "_260",
          "_268",
          "_269",
          "_270",
          "_271",
          "_272",
          "_273",
          "_274",
          "_275",
          "_277",
          "_278",
          "_279",
          "_280",
          "_281",
          "_282",
          "_283",
          "_284",
          "_285",
          "_286",
          "_287",
          "_288",
          "_289",
          "_290",
          "_291",
          "_292",
          "_293",
          "_294",
          "_295",
          "_296",
          "_297",
          "_298",
          "_299",
          "_300",
          "_301",
          "_302",
          "_303",
          "_304",
          "_308",
          "_309",
          "_312",
          "_313",
          "_314",
          "_315",
          "_316",
          "_317",
          "_318",
          "_319",
          "_320",
          "_321",
          "_322",
          "_323",
          "_324",
          "_325",
          "_326",
          "_327",
          "_328",
          "_329",
          "_330",
          "_331",
          "_332",
          "_333",
          "_334",
          "_335",
          "_336",
          "_337",
          "_338",
          "_339",
          "_340",
          "_341",
          "_342",
          "_343",
          "_344",
          "_345",
          "_346",
          "_347",
          "_348",
          "_349",
          "_350",
          "_351",
          "_352",
          "_353",
          "_354",
          "_355",
          "_356",
          "_357",
          "_358",
          "_359",
          "_360",
          "_361",
          "_362",
          "_363",
          "_364",
          "_365",
          "_366",
          "_367",
          "_368",
          "_369",
          "_370",
          "_371",
          "_372",
          "_373",
          "_374",
          "_375",
          "_376",
          "_377",
          "_378",
          "_379",
          "_380",
          "_381",
          "_382",
          "_383",
          "_384",
          "_385",
          "_386",
          "_387",
          "_388",
          "_389",
          "_390",
          "_391",
          "_392",
          "_393",
          "_394",
          "_395",
          "_396",
          "_397",
          "_398",
          "_399",
          "_400",
          "_401",
          "_402",
          "_403",
          "_404",
          "_405",
          "_406",
          "_407",
          "_408",
          "_409",
          "_410",
          "_411",
          "_412",
          "_413",
          "_414",
          "_415",
          "_417",
          "_418",
          "_419",
          "_420",
          "_421",
          "_422",
          "_423",
          "_424",
          "_425",
          "_426",
          "_427",
          "_428",
          "_429",
          "_430",
          "_431",
          "_432",
          "_433",
          "_434",
          "_435",
          "_436",
          "_437",
          "_438",
          "_439",
          "_440",
          "_441",
          "_442",
          "_443",
          "_444",
          "_445",
          "_446",
          "_447",
          "_448",
          "_449",
          "_450",
          "_451",
          "_452",
          "_453",
          "_454",
          "_455",
          "_456",
          "_457",
          "_458",
          "_459",
          "_460",
          "_461",
          "_462",
          "_463",
          "_464",
          "_465",
          "_466",
          "_467",
          "_468",
          "_469",
          "_470",
          "_471",
          "_472",
          "_473",
          "_474",
          "_475",
          "_476",
          "_477",
          "_478",
          "_479",
          "_480",
          "_481",
          "_482",
          "_483",
          "_484",
          "_485",
          "_486",
          "_487",
          "_488",
          "_489",
          "_490",
          "_491",
          "_492",
          "_493",
          "_494",
          "_495",
          "_496",
          "_497",
          "_498",
          "_499",
          "_500",
          "_501",
          "_502",
          "_503",
          "_504",
          "_505",
          "_506",
          "_507",
          "_508",
          "_509",
          "_510",
          "_511",
          "_512",
          "_513",
          "_514",
          "_515",
          "_516",
          "_517",
          "_518",
          "_519",
          "_520",
          "_521",
          "_522",
          "_523",
          "_524",
          "_525",
          "_526",
          "_527",
          "_528",
          "_529",
          "_530",
          "_531",
          "_532",
          "_533",
          "_534",
          "_535",
          "_536",
          "_537",
          "_538",
          "_539",
          "_540",
          "_541",
          "_542",
          "_543",
          "_544",
          "_545",
          "_546",
          "_547",
          "_548",
          "_549",
          "_550",
          "_551",
          "_552",
          "_553",
          "_554",
          "_555",
          "_556",
          "_557",
          "_558",
          "_559",
          "_560",
          "_561",
          "_562",
          "_563",
          "_564",
          "_565",
          "_566",
          "_567",
          "_568",
          "_569",
          "_570",
          "_571",
          "_572",
          "_573",
          "_574",
          "_575",
          "_576",
          "_577",
          "_578",
          "_579",
          "_580",
          "_581",
          "_582",
          "_583",
          "_584",
          "_585",
          "_586",
          "_587",
          "_588",
          "_589",
          "_590",
          "_591",
          "_592",
          "_593",
          "_594",
          "_595",
          "_596",
          "_597",
          "_598",
          "_599",
          "_600",
          "_601",
          "_602",
          "_603",
          "_604",
          "_605",
          "_606",
          "_607",
          "_608",
          "_609",
          "_610",
          "_611",
          "_612",
          "_613",
          "_614",
          "_615",
          "_616",
          "_617",
          "_618",
          "_619",
          "_620",
          "_621",
          "_622",
          "_623",
          "_624",
          "_625",
          "_626",
          "_627",
          "_628",
          "_629",
          "_630",
          "_631",
          "_632",
          "_633",
          "_634",
          "_635",
          "_636",
          "_637",
          "_638",
          "_639",
          "_640",
          "_641",
          "_642",
          "_643",
          "_644",
          "_645",
          "_646",
          "_647",
          "_648",
          "_649",
          "_650",
          "_651",
          "_652",
          "_653",
          "_654",
          "_655",
          "_656",
          "_657",
          "_658",
          "_659",
          "_660",
          "_661",
          "_662",
          "_663",
          "_664",
          "_665",
          "_666",
          "_667",
          "_668",
          "_669",
          "_670",
          "_671",
          "_672",
          "_673",
          "_674",
          "_675",
          "_678",
          "_679",
          "_680",
          "_681",
          "_682",
          "_683",
          "_684",
          "_685",
          "_686",
          "_687",
          "_688",
          "_689",
          "_690",
          "_691",
          "_692",
          "_693",
          "_694",
          "_695",
          "_696",
          "_697",
          "_698",
          "_699",
          "_700",
          "_701",
          "_702",
          "_703",
          "_704",
          "_705",
          "_706",
          "_707",
          "_708",
          "_709",
          "_710",
          "_711",
          "_712",
          "_713",
          "_714",
          "_715",
          "_716",
          "_717",
          "_718",
          "_719",
          "_720",
          "_721",
          "_722",
          "_723",
          "_724",
          "_725",
          "_726",
          "_727",
          "_728",
          "_729",
          "_730",
          "_731",
          "_732",
          "_733",
          "_734",
          "_735",
          "_736",
          "_737",
          "_738",
          "_739",
          "_740",
          "_741",
          "_742",
          "_743",
          "_744",
          "_745",
          "_746",
          "_747",
          "_748",
          "_749",
          "_750",
          "_751",
          "_752",
          "_753",
          "_754",
          "_755",
          "_756",
          "_757",
          "_758",
          "_759",
          "_760",
          "_761",
          "_762",
          "_763",
          "_764",
          "_765",
          "_766",
          "_767",
          "_768",
          "_769",
          "_770",
          "_771",
          "_772",
          "_773",
          "_774",
          "_775",
          "_776",
          "_777",
          "_778",
          "_779",
          "_780",
          "_781",
          "_782",
          "_783",
          "_784",
          "_785",
          "_786",
          "_787",
          "_788",
          "_789",
          "_790",
          "_791",
          "_792",
          "_793",
          "_794",
          "_795",
          "_796",
          "_797",
          "_798",
          "_799",
          "_800",
          "_801",
          "_802",
          "_803",
          "_804",
          "_805",
          "_806",
          "_807",
          "_808",
          "_809",
          "_810",
          "_811",
          "_812",
          "_813",
          "_814",
          "_815",
          "_816",
          "_817",
          "_818",
          "_819",
          "_820",
          "_821",
          "_822",
          "_823",
          "_824",
          "_825",
          "_826",
          "_827",
          "_828",
          "_829",
          "_830",
          "_831",
          "_832",
          "_833",
          "_834",
          "_835",
          "_836",
          "_837",
          "_838",
          "_839",
          "_840",
          "_841",
          "_842",
          "_843",
          "_844",
          "_845",
          "_846",
          "_847",
          "_848",
          "_849",
          "_850",
          "_851",
          "_852",
          "_853",
          "_854",
          "_855",
          "_856",
          "_857",
          "_858",
          "_859",
          "_860",
          "_861",
          "_862",
          "_863",
          "_864",
          "_865",
          "_866",
          "_867",
          "_868",
          "_869",
          "_870",
          "_871",
          "_872",
          "_873",
          "_874",
          "_875",
          "_876",
          "_877",
          "_878",
          "_879",
          "_880",
          "_881",
          "_882",
          "_883",
          "_884",
          "_885",
          "_886",
          "_887",
          "_888",
          "_889",
          "_890",
          "_891",
          "_892",
          "_893",
          "_894",
          "_895",
          "_896",
          "_897",
          "_898",
          "_899",
          "_900",
          "_901",
          "_902",
          "_903",
          "_904",
          "_905",
          "_906",
          "_907",
          "_908",
          "_909",
          "_910",
          "_911",
          "_912",
          "_913",
          "_914",
          "_915",
          "_916",
          "_917",
          "_918",
          "_919",
          "_920",
          "_921",
          "_922",
          "_923",
          "_924",
          "_925",
          "_926",
          "_927",
          "_928",
          "_929",
          "_930",
          "_931",
          "_932",
          "_933",
          "_934",
          "_935",
          "_936",
          "_937",
          "_938",
          "_939",
          "_940",
          "_941",
          "_942",
          "_943",
          "_944",
          "_945",
          "_946",
          "_947",
          "_948",
          "_949",
          "_950",
          "_951",
          "_952",
          "_953",
          "_954",
          "_955",
          "_956",
          "_957",
          "_958",
          "_959",
          "_960",
          "_961",
          "_962",
          "_963",
          "_964",
          "_965",
          "_966",
          "_967",
          "_968",
          "_969",
          "_970",
          "_971",
          "_972",
          "_973",
          "_974",
          "_975",
          "_976",
          "_977",
          "_978",
          "_979",
          "_980",
          "_981",
          "_982",
          "_983",
          "_984",
          "_985",
          "_986",
          "_987",
          "_988",
          "_989",
          "_990",
          "_991",
          "_992",
          "_993",
          "_994",
          "_995",
          "_996",
          "_997",
          "_998",
          "_999",
          "_1000",
          "_1001",
          "_1002",
          "_1003",
          "_1004",
          "_1005",
          "_1006",
          "_1007",
          "_1008",
          "_1009",
          "_1010",
          "_1011",
          "_1012",
          "_1013",
          "_1014",
          "_1015",
          "_1016",
          "_1017",
          "_1018",
          "_1019",
          "_1020",
          "_1021",
          "_1022",
          "_1023",
          "_1024",
          "_1025",
          "_1026",
          "_1027",
          "_1028",
          "_1029",
          "_1030",
          "_1031",
          "_1032",
          "_1034",
          "_1037",
          "_1038",
          "_1039",
          "_1040",
          "_1041",
          "_1042",
          "_1043",
          "_1044",
          "_1045",
          "_1046",
          "_1047",
          "_1048",
          "_1049",
          "_1050",
          "_1051",
          "_1052",
          "_1053",
          "_1054",
          "_1055",
          "_1056",
          "_1057",
          "_1058",
          "_1059",
          "_1060",
          "_1061",
          "_1062",
          "_1063",
          "_1064",
          "_1065",
          "_1066",
          "_1067",
          "_1068",
          "_1069",
          "_1070",
          "_1071",
          "_1072",
          "_1073",
          "_1074",
          "_1075",
          "_1076",
          "_1077",
          "_1078",
          "_1079",
          "_1080",
          "_1081",
          "_1082",
          "_1083",
          "_1084",
          "_1085",
          "_1086",
          "_1087",
          "_1088",
          "_1089",
          "_1090",
          "_1091",
          "_1092",
          "_1093",
          "_1094",
          "_1095",
          "_1096",
          "_1097",
          "_1098",
          "_1099",
          "_1100",
          "_1101",
          "_1102",
          "_1103",
          "_1104",
          "_1105",
          "_1106",
          "_1107",
          "_1108",
          "_1109",
          "_1110",
          "_1111",
          "_1112",
          "_1113",
          "_1114",
          "_1115",
          "_1116",
          "_1117",
          "_1118",
          "_1119",
          "_1120",
          "_1121",
          "_1122",
          "_1123",
          "_1124",
          "_1125",
          "_1126",
          "_1127",
          "_1128",
          "_1129",
          "_1130",
          "_1131",
          "_1132",
          "_1133",
          "_1134",
          "_1135",
          "_1136",
          "_1137",
          "_1138",
          "_1139",
          "_1140",
          "_1141",
          "_1142",
          "_1143",
          "_1144",
          "_1145",
          "_1146",
          "_1147",
          "_1148",
          "_1149",
          "_1150",
          "_1151",
          "_1152",
          "_1153",
          "_1154",
          "_1155",
          "_1156",
          "_1157",
          "_1158",
          "_1159",
          "_1160",
          "_1161",
          "_1162",
          "_1163",
          "_1164",
          "_1165",
          "_1166",
          "_1167",
          "_1168",
          "_1169",
          "_1170",
          "_1171",
          "_1172",
          "_1173",
          "_1174",
          "_1175",
          "_1176",
          "_1177",
          "_1178",
          "_1179",
          "_1180",
          "_1181",
          "_1182",
          "_1183",
          "_1184",
          "_1185",
          "_1186",
          "_1187",
          "_1188",
          "_1189",
          "_1190",
          "_1191",
          "_1192",
          "_1193",
          "_1194",
          "_1195",
          "_1196",
          "_1197",
          "_1198",
          "_1199",
          "_1200",
          "_1201",
          "_1202",
          "_1203",
          "_1204",
          "_1205",
          "_1206",
          "_1207",
          "_1208",
          "_1209",
          "_1210",
          "_1211",
          "_1212",
          "_1213",
          "_1214",
          "_1215",
          "_1216",
          "_1217",
          "_1218",
          "_1219",
          "_1220",
          "_1221",
          "_1222",
          "_1223",
          "_1224",
          "_1225",
          "_1226",
          "_1227",
          "_1228",
          "_1229",
          "_1230",
          "_1231",
          "_1232",
          "_1233",
          "_1234",
          "_1235",
          "_1236",
          "_1237",
          "_1238",
          "_1239",
          "_1240",
          "_1241",
          "_1242",
          "_1243",
          "_1244",
          "_1245",
          "_1246",
          "_1247",
          "_1248",
          "_1249",
          "_1250",
          "_1251",
          "_1252",
          "_1253",
          "_1254",
          "_1255",
          "_1256",
          "_1257",
          "_1258",
          "_1259",
          "_1260",
          "_1261",
          "_1262",
          "_1263",
          "_1264",
          "_1265",
          "_1266",
          "_1267",
          "_1268",
          "_1269",
          "_1270",
          "_1271",
          "_1272",
          "_1273",
          "_1274",
          "_1275",
          "_1276",
          "_1277",
          "_1278",
          "_1279",
          "_1280",
          "_1281",
          "_1282",
          "_1283",
          "_1284",
          "_1285",
          "_1286",
          "_1287",
          "_1288",
          "_1289",
          "_1290",
          "_1291",
          "_1292",
          "_1293",
          "_1294",
          "_1295",
          "_1296",
          "_1297",
          "_1298",
          "_1299",
          "_1300",
          "_1301",
          "_1302",
          "_1303",
          "_1304",
          "_1305",
          "_1306",
          "_1307",
          "_1308",
          "_1309",
          "_1310",
          "_1311",
          "_1312",
          "_1313",
          "_1314",
          "_1315",
          "_1316",
          "_1317",
          "_1318",
          "_1319",
          "_1320",
          "_1321",
          "_1322",
          "_1323",
          "_1324",
          "_1325",
          "_1326",
          "_1327",
          "_1328",
          "_1329",
          "_1330",
          "_1331",
          "_1332",
          "_1333",
          "_1334",
          "_1335",
          "_1336",
          "_1338",
          "_1339",
          "_1340",
          "_1341",
          "_1342",
          "_1343",
          "_1344",
          "_1345",
          "_1346",
          "_1347",
          "_1348",
          "_1349",
          "_1350",
          "_1351",
          "_1352",
          "_1353",
          "_1354",
          "_1355",
          "_1356",
          "_1357",
          "_1358",
          "_1359",
          "_1360",
          "_1361",
          "_1362",
          "_1363",
          "_1364",
          "_1365",
          "_1366",
          "_1367",
          "_1368",
          "_1369",
          "_1370",
          "_1371",
          "_1372",
          "_1373",
          "_1374",
          "_1375",
          "_1376",
          "_1377",
          "_1378",
          "_1379",
          "_1380",
          "_1381",
          "_1382",
          "_1383",
          "_1385",
          "_1386",
          "_1387",
          "_1388",
          "_1389",
          "_1390",
          "_1391",
          "_1392",
          "_1393",
          "_1394",
          "_1395",
          "_1396",
          "_1397",
          "_1398",
          "_1399",
          "_1400",
          "_1401",
          "_1402",
          "_1403",
          "_1404",
          "_1405",
          "_1406",
          "_1407",
          "_1408",
          "_1409",
          "_1410",
          "_1411",
          "_1412",
          "_1413",
          "_1414",
          "_1415",
          "_1416",
          "_1417",
          "_1418",
          "_1419",
          "_1420",
          "_1421",
          "_1422",
          "_1423",
          "_1424",
          "_1425",
          "_1426",
          "_1427",
          "_1428",
          "_1429",
          "_1430",
          "_1431",
          "_1432",
          "_1433",
          "_1434",
          "_1435",
          "_1436",
          "_1437",
          "_1438",
          "_1439",
          "_1440",
          "_1441",
          "_1442",
          "_1443",
          "_1444",
          "_1445",
          "_1446",
          "_1447",
          "_1448",
          "_1449",
          "_1450",
          "_1451",
          "_1452",
          "_1453",
          "_1454",
          "_1455",
          "_1456",
          "_1457",
          "_1458",
          "_1459",
          "_1460",
          "_1461",
          "_1462",
          "_1463",
          "_1464",
          "_1465",
          "_1466",
          "_1467",
          "_1468",
          "_1469",
          "_1470",
          "_1471",
          "_1472",
          "_1473",
          "_1474",
          "_1475",
          "_1476",
          "_1477",
          "_1478",
          "_1479",
          "_1480",
          "_1481",
          "_1482",
          "_1483",
          "_1484",
          "_1485",
          "_1486",
          "_1487",
          "_1488",
          "_1489",
          "_1490",
          "_1491",
          "_1492",
          "_1493",
          "_1494",
          "_1495",
          "_1496",
          "_1497",
          "_1498",
          "_1499",
          "_1500",
          "_1501",
          "_1502",
          "_1503",
          "_1504",
          "_1505",
          "_1506",
          "_1507",
          "_1508",
          "_1509",
          "_1510",
          "_1511",
          "_1512",
          "_1513",
          "_1514",
          "_1515",
          "_1516",
          "_1517",
          "_1518",
          "_1519",
          "_1520",
          "_1521",
          "_1522",
          "_1523",
          "_1524",
          "_1525",
          "_1526",
          "_1527",
          "_1528",
          "_1529",
          "_1530",
          "_1531",
          "_1532",
          "_1533",
          "_1534",
          "_1535",
          "_1536",
          "_1537",
          "_1538",
          "_1539",
          "_1540",
          "_1541",
          "_1542",
          "_1543",
          "_1544",
          "_1545",
          "_1546",
          "_1547",
          "_1548",
          "_1549",
          "_1550",
          "_1551",
          "_1552",
          "_1553",
          "_1554",
          "_1555",
          "_1556",
          "_1557",
          "_1558",
          "_1559",
          "_1560",
          "_1561",
          "_1562",
          "_1563",
          "_1564",
          "_1565",
          "_1566",
          "_1567",
          "_1568",
          "_1569",
          "_1570",
          "_1571",
          "_1572",
          "_1573",
          "_1574",
          "_1575",
          "_1576",
          "_1577",
          "_1578",
          "_1579",
          "_1580",
          "_1581",
          "_1582",
          "_1583",
          "_1584",
          "_1585",
          "_1586",
          "_1587",
          "_1588",
          "_1589",
          "_1590",
          "_1591",
          "_1592",
          "_1593",
          "_1594",
          "_1595",
          "_1596",
          "_1597",
          "_1598",
          "_1599",
          "_1600",
          "_1601",
          "_1602",
          "_1603",
          "_1604",
          "_1605",
          "_1606",
          "_1607",
          "_1608",
          "_1609",
          "_1610",
          "_1611",
          "_1612",
          "_1613",
          "_1614",
          "_1615",
          "_1616",
          "_1617",
          "_1618",
          "_1619",
          "_1620",
          "_1621",
          "_1622",
          "_1623",
          "_1624",
          "_1625",
          "_1626",
          "_1627",
          "_1628",
          "_1629",
          "_1630",
          "_1631",
          "_1632",
          "_1633",
          "_1634",
          "_1635",
          "_1636",
          "_1637",
          "_1638",
          "_1639",
          "_1640",
          "_1641",
          "_1642",
          "_1643",
          "_1644",
          "_1645",
          "_1646",
          "_1647",
          "_1648",
          "_1649",
          "_1650",
          "_1651",
          "_1652",
          "_1653",
          "_1654",
          "_1655",
          "_1656",
          "_1657",
          "_1658",
          "_1659",
          "_1660",
          "_1661",
          "_1662",
          "_1663",
          "_1664",
          "_1665",
          "_1666",
          "_1667",
          "_1668",
          "_1669",
          "_1670",
          "_1671",
          "_1672",
          "_1673",
          "_1674",
          "_1675",
          "_1676",
          "_1677",
          "_1678",
          "_1679",
          "_1680",
          "_1681",
          "_1682",
          "_1683",
          "_1684",
          "_1685",
          "_1686",
          "_1687",
          "_1688",
          "_1689",
          "_1690",
          "_1691",
          "_1692",
          "_1693",
          "_1694",
          "_1695",
          "_1696",
          "_1697",
          "_1698",
          "_1699",
          "_1700",
          "_1701",
          "_1702",
          "_1703",
          "_1704",
          "_1705",
          "_1706",
          "_1707",
          "_1708",
          "_1709",
          "_1710",
          "_1711",
          "_1712",
          "_1713",
          "_1714",
          "_1715",
          "_1716",
          "_1717",
          "_1718",
          "_1719",
          "_1720",
          "_1721",
          "_1722",
          "_1723",
          "_1724",
          "_1725",
          "_1726",
          "_1727",
          "_1728",
          "_1729",
          "_1730",
          "_1731",
          "_1732",
          "_1733",
          "_1734",
          "_1735",
          "_1736",
          "_1737",
          "_1738",
          "_1739",
          "_1740",
          "_1741",
          "_1742",
          "_1743",
          "_1744",
          "_1745",
          "_1746",
          "_1747",
          "_1748",
          "_1749",
          "_1750",
          "_1751",
          "_1752",
          "_1753",
          "_1754",
          "_1755",
          "_1756",
          "_1757",
          "_1758",
          "_1759",
          "_1760",
          "_1761",
          "_1762",
          "_1763",
          "_1764",
          "_1765",
          "_1766",
          "_1767",
          "_1768",
          "_1769",
          "_1770",
          "_1771",
          "_1772",
          "_1773",
          "_1774",
          "_1775",
          "_1776",
          "_1777",
          "_1778",
          "_1780",
          "_1781",
          "_1782",
          "_1783",
          "_1784",
          "_1785",
          "_1786",
          "_1787",
          "_1788",
          "_1789",
          "_1790",
          "_1791",
          "_1792",
          "_1793",
          "_1794",
          "_1795",
          "_1796",
          "_1797",
          "_1798",
          "_1799",
          "_1800",
          "_1801",
          "_1802",
          "_1803",
          "_1804",
          "_1805",
          "_1806",
          "_1807",
          "_1808",
          "_1809",
          "_1810",
          "_1811",
          "_1812",
          "_1813",
          "_1814",
          "_1815",
          "_1816",
          "_1817",
          "_1818",
          "_1819",
          "_1820",
          "_1821",
          "_1822",
          "_1823",
          "_1824",
          "_1825",
          "_1826",
          "_1827",
          "_1828",
          "_1829",
          "_1830",
          "_1831",
          "_1832",
          "_1833",
          "_1834",
          "_1835",
          "_1836",
          "_1837",
          "_1838",
          "_1839",
          "_1840",
          "_1841",
          "_1842",
          "_1843",
          "_1844",
          "_1845",
          "_1846",
          "_1847",
          "_1848",
          "_1849",
          "_1850",
          "_1851",
          "_1852",
          "_1853",
          "_1854",
          "_1855",
          "_1856",
          "_1857",
          "_1858",
          "_1859",
          "_1860",
          "_1861",
          "_1862",
          "_1863",
          "_1864",
          "_1865",
          "_1866",
          "_1867",
          "_1868",
          "_1869",
          "_1870",
          "_1871",
          "_1872",
          "_1873",
          "_1874",
          "_1875",
          "_1876",
          "_1877",
          "_1878",
          "_1879",
          "_1880",
          "_1881",
          "_1882",
          "_1883",
          "_1884",
          "_1885",
          "_1886",
          "_1887",
          "_1888",
          "_1889",
          "_1890",
          "_1891",
          "_1892",
          "_1893",
          "_1894",
          "_1895",
          "_1896",
          "_1897",
          "_1898",
          "_1899",
          "_1900",
          "_1901",
          "_1902",
          "_1903",
          "_1904",
          "_1905",
          "_1906",
          "_1907",
          "_1908",
          "_1909",
          "_1910",
          "_1911",
          "_1912",
          "_1913",
          "_1914",
          "_1915",
          "_1916",
          "_1917",
          "_1918",
          "_1919",
          "_1920",
          "_1921",
          "_1922",
          "_1923",
          "_1924",
          "_1925",
          "_1926",
          "_1927",
          "_1928",
          "_1929",
          "_1930",
          "_1931",
          "_1932",
          "_1933",
          "_1934",
          "_1935",
          "_1936",
          "_1937",
          "_1938",
          "_1939",
          "_1940",
          "_1941",
          "_1942",
          "_1943",
          "_1944",
          "_1945",
          "_1946",
          "_1947",
          "_1948",
          "_1949",
          "_1950",
          "_1951",
          "_1952",
          "_1953",
          "_1954",
          "_1955",
          "_1956",
          "_1957",
          "_1958",
          "_1959",
          "_1960",
          "_1961",
          "_1962",
          "_1964",
          "_1965",
          "_1966",
          "_1967",
          "_1968",
          "_1969",
          "_1970",
          "_1971",
          "_1972",
          "_1973",
          "_1974",
          "_1975",
          "_1976",
          "_1977",
          "_1978",
          "_1979",
          "_1980",
          "_1981",
          "_1982",
          "_1990",
          "_1991",
          "_1992",
          "_1993",
          "_1994",
          "_1995",
          "_1996",
          "_1997",
          "_1998",
          "_1999",
          "_2000",
          "_2001",
          "_2002",
          "_2003",
          "_2004",
          "_2005",
          "_2006",
          "_2007",
          "_2008",
          "_2009",
          "_2010",
          "_2011",
          "_2012",
          "_2013",
          "_2014",
          "_2015",
          "_2016",
          "_2017",
          "_2018",
          "_2019",
          "_2020",
          "_2021",
          "_2022",
          "_2023",
          "_2024",
          "_2025",
          "_2026",
          "_2027",
          "_2028",
          "_2029",
          "_2030",
          "_2031",
          "_2032",
          "_2033",
          "_2034",
          "_2035",
          "_2036",
          "_2037",
          "_2038",
          "_2039",
          "_2040",
          "_2041",
          "_2042",
          "_2043",
          "_2044",
          "_2045",
          "_2046",
          "_2047",
          "_2048",
          "_2049",
          "_2050",
          "_2051",
          "_2052",
          "_2053",
          "_2054",
          "_2055",
          "_2056",
          "_2057",
          "_2058",
          "_2059",
          "_2060",
          "_2061",
          "_2062",
          "_2063",
          "_2064",
          "_2065",
          "_2066",
          "_2067",
          "_2068",
          "_2069",
          "_2070",
          "_2071",
          "_2072",
          "_2073",
          "_2074",
          "_2075",
          "_2076",
          "_2077",
          "_2078",
          "_2079",
          "_2080",
          "_2081",
          "_2082",
          "_2083",
          "_2084",
          "_2085",
          "_2086",
          "_2087",
          "_2088",
          "_2089",
          "_2090",
          "_2091",
          "_2092",
          "_2093",
          "_2094",
          "_2095",
          "_2096",
          "_2097",
          "_2098",
          "_2099",
          "_2100",
          "_2101",
          "_2102",
          "_2103",
          "_2104",
          "_2105",
          "_2106",
          "_2107",
          "_2108",
          "_2109",
          "_2110",
          "_2111",
          "_2112",
          "_2113",
          "_2114",
          "_2115",
          "_2116",
          "_2117",
          "_2118",
          "_2119",
          "_2120",
          "_2121",
          "_2122",
          "_2123",
          "_2124",
          "_2125",
          "_2126",
          "_2127",
          "_2128",
          "_2129",
          "_2130",
          "_2131",
          "_2135",
          "_2136",
          "_2137",
          "_2138",
          "_2139",
          "_2140",
          "_2141",
          "_2142",
          "_2143",
          "_2144",
          "_2145",
          "_2146",
          "_2147",
          "_2148",
          "_2149",
          "_2150",
          "_2151",
          "_2152",
          "_2153",
          "_2154",
          "_2155",
          "_2156",
          "_2157",
          "_2158",
          "_2159",
          "_2160",
          "_2161",
          "_2162",
          "_2163",
          "_2164",
          "_2165",
          "_2166",
          "_2167",
          "_2168",
          "_2169",
          "_2170",
          "_2171",
          "_2172",
          "_2173",
          "_2174",
          "_2175",
          "_2176",
          "_2177",
          "_2178",
          "_2179",
          "_2180",
          "_2181",
          "_2182",
          "_2183",
          "_2184",
          "_2185",
          "_2186",
          "_2187",
          "_2188",
          "_2189",
          "_2190",
          "_2191",
          "_2192",
          "_2193",
          "_2194",
          "_2195",
          "_2196",
          "_2197",
          "_2198",
          "_2199",
          "_2200",
          "_2201",
          "_2202",
          "_2203",
          "_2204",
          "_2205",
          "_2206",
          "_2207",
          "_2208",
          "_2209",
          "_2210",
          "_2211",
          "_2212",
          "_2213",
          "_2214",
          "_2215",
          "_2216",
          "_2217",
          "_2218",
          "_2219",
          "_2220",
          "_2221",
          "_2222",
          "_2223",
          "_2224",
          "_2225",
          "_2226",
          "_2227",
          "_2228",
          "_2229",
          "_2230",
          "_2231",
          "_2232",
          "_2233",
          "_2234",
          "_2235",
          "_2236",
          "_2237",
          "_2238",
          "_2239",
          "_2240",
          "_2241",
          "_2242",
          "_2243",
          "_2244",
          "_2245",
          "_2246",
          "_2247",
          "_2248",
          "_2249",
          "_2250",
          "_2251",
          "_2252",
          "_2253",
          "_2254",
          "_2255",
          "_2256",
          "_2257",
          "_2258",
          "_2259",
          "_2260",
          "_2261",
          "_2262",
          "_2263",
          "_2264",
          "_2265",
          "_2266",
          "_2267",
          "_2268",
          "_2269",
          "_2270",
          "_2271",
          "_2272",
          "_2273",
          "_2274",
          "_2275",
          "_2276",
          "_2277",
          "_2278",
          "_2279",
          "_2280",
          "_2281",
          "_2282",
          "_2283",
          "_2284",
          "_2285",
          "_2286",
          "_2287",
          "_2288",
          "_2289",
          "_2290",
          "_2291",
          "_2292",
          "_2293",
          "_2294",
          "_2295",
          "_2296",
          "_2297",
          "_2298",
          "_2299",
          "_2300",
          "_2301",
          "_2302",
          "_2303",
          "_2304",
          "_2305",
          "_2306",
          "_2307",
          "_2308",
          "_2309",
          "_2310",
          "_2311",
          "_2312",
          "_2313",
          "_2314",
          "_2315",
          "_2316",
          "_2317",
          "_2318",
          "_2319",
          "_2320",
          "_2321",
          "_2322",
          "_2323",
          "_2324",
          "_2325",
          "_2326",
          "_2327",
          "_2328",
          "_2329",
          "_2330",
          "_2331",
          "_2332",
          "_2333",
          "_2334",
          "_2335",
          "_2336",
          "_2337",
          "_2338",
          "_2339",
          "_2340",
          "_2341",
          "_2342",
          "_2343",
          "_2355",
          "_2356",
          "_2357",
          "_2358",
          "_2359",
          "_2360",
          "_2361",
          "_2362",
          "_2363",
          "_2364",
          "_2365",
          "_2366",
          "_2367",
          "_2368",
          "_2369",
          "_2370",
          "_2371",
          "_2372",
          "_2373",
          "_2374",
          "_2375",
          "_2376",
          "_2377",
          "_2378",
          "_2379",
          "_2380",
          "_2381",
          "_2382",
          "_2383",
          "_2384",
          "_2385",
          "_2386",
          "_2387",
          "_2388",
          "_2389",
          "_2390",
          "_2391",
          "_2392",
          "_2393",
          "_2394",
          "_2395",
          "_2396",
          "_2397",
          "_2398",
          "_2399",
          "_2400",
          "_2401",
          "_2402",
          "_2403",
          "_2404",
          "_2405",
          "_2406",
          "_2407",
          "_2408",
          "_2409",
          "_2410",
          "_2411",
          "_2412",
          "_2413",
          "_2414",
          "_2415",
          "_2416",
          "_2417",
          "_2418",
          "_2419",
          "_2420",
          "_2421",
          "_2422",
          "_2423",
          "_2424",
          "_2425",
          "_2426",
          "_2427",
          "_2428",
          "_2429",
          "_2430",
          "_2431",
          "_2432",
          "_2433",
          "_2434",
          "_2435",
          "_2436",
          "_2437",
          "_2438",
          "_2439",
          "_2440",
          "_2441",
          "_2442",
          "_2443",
          "_2445",
          "_2447",
          "_2448",
          "_2449",
          "_2450",
          "_2451",
          "_2452",
          "_2453",
          "_2454",
          "_2455",
          "_2456",
          "_2457",
          "_2458",
          "_2459",
          "_2460",
          "_2461",
          "_2462",
          "_2463",
          "_2464",
          "_2465",
          "_2466",
          "_2467",
          "_2468",
          "_2469",
          "_2471",
          "_2472",
          "_2473",
          "_2474",
          "_2475",
          "_2476",
          "_2477",
          "_2478",
          "_2479",
          "_2480",
          "_2481",
          "_2482",
          "_2483",
          "_2484",
          "_2485",
          "_2486",
          "_2487",
          "_2488",
          "_2489",
          "_2490",
          "_2491",
          "_2492",
          "_2493",
          "_2494",
          "_2495",
          "_2496",
          "_2497",
          "_2498",
          "_2499",
          "_2500",
          "_2501",
          "_2502",
          "_2503",
          "_2504",
          "_2505",
          "_2506",
          "_2507",
          "_2508",
          "_2509",
          "_2510",
          "_2511",
          "_2512",
          "_2513",
          "_2514",
          "_2515",
          "_2516",
          "_2517",
          "_2518",
          "_2519",
          "_2520",
          "_2521",
          "_2523",
          "_2524",
          "_2525",
          "_2526",
          "_2527",
          "_2528",
          "_2529",
          "_2530",
          "_2531",
          "_2532",
          "_2533",
          "_2534",
          "_2535",
          "_2536",
          "_2537",
          "_2538",
          "_2539",
          "_2540",
          "_2541",
          "_2542",
          "_2543",
          "_2544",
          "_2545",
          "_2546",
          "_2547",
          "_2548",
          "_2549",
          "_2550",
          "_2551",
          "_2552",
          "_2553",
          "_2554",
          "_2555",
          "_2556",
          "_2557",
          "_2558",
          "_2559",
          "_2560",
          "_2561",
          "_2562",
          "_2563",
          "_2564",
          "_2565",
          "_2566",
          "_2567",
          "_2568",
          "_2569",
          "_2570",
          "_2571",
          "_2572",
          "_2573",
          "_2574",
          "_2575",
          "_2576",
          "_2577",
          "_2578",
          "_2579",
          "_2580",
          "_2581",
          "_2582",
          "_2583",
          "_2584",
          "_2585",
          "_2586",
          "_2587",
          "_2589",
          "_2590",
          "_2591",
          "_2592",
          "_2593",
          "_2594",
          "_2595",
          "_2596",
          "_2597",
          "_2598",
          "_2599",
          "_2600",
          "_2601",
          "_2602",
          "_2603",
          "_2604",
          "_2605",
          "_2606",
          "_2607",
          "_2608",
          "_2609",
          "_2610",
          "_2611",
          "_2612",
          "_2613",
          "_2614",
          "_2615",
          "_2616",
          "_2617",
          "_2618",
          "_2619",
          "_2620",
          "_2621",
          "_2622",
          "_2623",
          "_2624",
          "_2625",
          "_2626",
          "_2627",
          "_2629",
          "_2630",
          "_2631",
          "_2632",
          "_2633",
          "_2634",
          "_2635",
          "_2636",
          "_2637",
          "_2638",
          "_2639",
          "_2640",
          "_2641",
          "_2642",
          "_2643",
          "_2644",
          "_2645",
          "_2646",
          "_2647",
          "_2648",
          "_2649",
          "_2650",
          "_2651",
          "_2652",
          "_2653",
          "_2654",
          "_2655",
          "_2656",
          "_2657",
          "_2658",
          "_2659",
          "_2660",
          "_2661",
          "_2662",
          "_2663",
          "_2664",
          "_2665",
          "_2666",
          "_2667",
          "_2668",
          "_2669",
          "_2670",
          "_2671",
          "_2672",
          "_2673",
          "_2674",
          "_2675",
          "_2676",
          "_2677",
          "_2678",
          "_2679",
          "_2680",
          "_2681",
          "_2682",
          "_2683",
          "_2684",
          "_2685",
          "_2686",
          "_2687",
          "_2688",
          "_2689",
          "_2690",
          "_2691",
          "_2692",
          "_2693",
          "_2694",
          "_2695",
          "_2696",
          "_2697",
          "_2698",
          "_2699",
          "_2700",
          "_2701",
          "_2702",
          "_2703",
          "_2704",
          "_2705",
          "_2706",
          "_2707",
          "_2708",
          "_2709",
          "_2710",
          "_2711",
          "_2712",
          "_2713",
          "_2714",
          "_2715",
          "_2716",
          "_2717",
          "_2718",
          "_2719",
          "_2720",
          "_2721",
          "_2722",
          "_2723",
          "_2724",
          "_2725",
          "_2726",
          "_2727",
          "_2728",
          "_2729",
          "_2730",
          "_2731",
          "_2732",
          "_2733",
          "_2734",
          "_2735",
          "_2736",
          "_2737",
          "_2738",
          "_2739",
          "_2740",
          "_2741",
          "_2742",
          "_2743",
          "_2744",
          "_2745",
          "_2746",
          "_2747",
          "_2748",
          "_2749",
          "_2750",
          "_2751",
          "_2752",
          "_2753",
          "_2754",
          "_2755",
          "_2756",
          "_2757",
          "_2758",
          "_2759",
          "_2760",
          "_2761",
          "_2762",
          "_2763",
          "_2764",
          "_2765",
          "_2766",
          "_2767",
          "_2768",
          "_2769",
          "_2770",
          "_2771",
          "_2772",
          "_2773",
          "_2774",
          "_2775",
          "_2776",
          "_2777",
          "_2778",
          "_2779",
          "_2780",
          "_2781",
          "_2782",
          "_2783",
          "_2784",
          "_2785",
          "_2786",
          "_2787",
          "_2788",
          "_2789",
          "_2790",
          "_2791",
          "_2792",
          "_2793",
          "_2794",
          "_2795",
          "_2796",
          "_2797",
          "_2798",
          "_2799",
          "_2800",
          "_2801",
          "_2802",
          "_2803",
          "_2804",
          "_2805",
          "_2806",
          "_2807",
          "_2808",
          "_2809",
          "_2810",
          "_2811",
          "_2812",
          "_2813",
          "_2814",
          "_2815",
          "_2816",
          "_2817",
          "_2818",
          "_2819",
          "_2820",
          "_2821",
          "_2822",
          "_2823",
          "_2824",
          "_2825",
          "_2826",
          "_2827",
          "_2828",
          "_2829",
          "_2830",
          "_2831",
          "_2832",
          "_2833",
          "_2834",
          "_2835",
          "_2836",
          "_2837",
          "_2838",
          "_2839",
          "_2840",
          "_2841",
          "_2842",
          "_2843",
          "_2844",
          "_2845",
          "_2846",
          "_2847",
          "_2848",
          "_2849",
          "_2850",
          "_2851",
          "_2852",
          "_2853",
          "_2854",
          "_2855",
          "_2856",
          "_2857",
          "_2858",
          "_2859",
          "_2860",
          "_2861",
          "_2862",
          "_2863",
          "_2864",
          "_2865",
          "_2866",
          "_2867",
          "_2868",
          "_2869",
          "_2870",
          "_2871",
          "_2872",
          "_2873",
          "_2874",
          "_2875",
          "_2876",
          "_2877",
          "_2878",
          "_2879",
          "_2880",
          "_2881",
          "_2882",
          "_2883",
          "_2884",
          "_2885",
          "_2886",
          "_2887",
          "_2889",
          "_2890",
          "_2891",
          "_2892",
          "_2893",
          "_2894",
          "_2895",
          "_2896",
          "_2897",
          "_2898",
          "_2899",
          "_2900",
          "_2901",
          "_2902",
          "_2903",
          "_2904",
          "_2905",
          "_2906",
          "_2907",
          "_2908",
          "_2909",
          "_2910",
          "_2911",
          "_2912",
          "_2913",
          "_2914",
          "_2915",
          "_2916",
          "_2917",
          "_2918",
          "_2919",
          "_2920",
          "_2921",
          "_2922",
          "_2923",
          "_2924",
          "_2925",
          "_2926",
          "_2927",
          "_2928",
          "_2929",
          "_2930",
          "_2931",
          "_2932",
          "_2933",
          "_2934",
          "_2935",
          "_2936",
          "_2937",
          "_2938",
          "_2939",
          "_2940",
          "_2941",
          "_2942",
          "_2943",
          "_2944",
          "_2945",
          "_2946",
          "_2947",
          "_2948",
          "_2949",
          "_2950",
          "_2951",
          "_2952",
          "_2953",
          "_2954",
          "_2955",
          "_2956",
          "_2957",
          "_2958",
          "_2959",
          "_2960",
          "_2961",
          "_2962",
          "_2963",
          "_2964",
          "_2965",
          "_2966",
          "_2967",
          "_2968",
          "_2969",
          "_2970",
          "_2971",
          "_2972",
          "_2973",
          "_2974",
          "_2975",
          "_2976",
          "_2977",
          "_2978",
          "_2979",
          "_2980",
          "_2981",
          "_2982",
          "_2983",
          "_2984",
          "_2985",
          "_2986",
          "_2987",
          "_2988",
          "_2989",
          "_2990",
          "_2991",
          "_2992",
          "_2993",
          "_2994",
          "_2995",
          "_2996",
          "_2997",
          "_2998",
          "_2999",
          "_3000",
          "_3001",
          "_3002",
          "_3003",
          "_3004",
          "_3005",
          "_3006",
          "_3007",
          "_3008",
          "_3009",
          "_3010",
          "_3011",
          "_3012",
          "_3013",
          "_3014",
          "_3015",
          "_3016",
          "_3017",
          "_3018",
          "_3019",
          "_3020",
          "_3021",
          "_3022",
          "_3023",
          "_3024",
          "_3025",
          "_3026",
          "_3027",
          "_3028",
          "_3029",
          "_3030",
          "_3031",
          "_3032",
          "_3033",
          "_3034",
          "_3035",
          "_3036",
          "_3037",
          "_3038",
          "_3039",
          "_3040",
          "_3041",
          "_3042",
          "_3043",
          "_3044",
          "_3045",
          "_3046",
          "_3047",
          "_3048",
          "_3049",
          "_3050",
          "_3051",
          "_3052",
          "_3055",
          "_3056",
          "_3057",
          "_3058",
          "_3059",
          "_3060",
          "_3061",
          "_3062",
          "_3063",
          "_3064",
          "_3065",
          "_3066",
          "_3067",
          "_3068",
          "_3069",
          "_3070",
          "_3071",
          "_3072",
          "_3073",
          "_3074",
          "_3075",
          "_3076",
          "_3077",
          "_3078",
          "_3079",
          "_3080",
          "_3081",
          "_3082",
          "_3083",
          "_3084",
          "_3085",
          "_3086",
          "_3087",
          "_3088",
          "_3089",
          "_3090",
          "_3091",
          "_3092",
          "_3093",
          "_3094",
          "_3095",
          "_3096",
          "_3097",
          "_3098",
          "_3099",
          "_3100",
          "_3101",
          "_3102",
          "_3103",
          "_3104",
          "_3105",
          "_3106",
          "_3107",
          "_3108",
          "_3109",
          "_3110",
          "_3111",
          "_3112",
          "_3113",
          "_3114",
          "_3115",
          "_3116",
          "_3117",
          "_3118",
          "_3119",
          "_3120",
          "_3121",
          "_3122",
          "_3123",
          "_3124",
          "_3125",
          "_3126",
          "_3127",
          "_3128",
          "_3129",
          "_3130",
          "_3131",
          "_3132",
          "_3133",
          "_3134",
          "_3135",
          "_3136",
          "_3137",
          "_3138",
          "_3139",
          "_3140",
          "_3141",
          "_3142",
          "_3143",
          "_3144",
          "_3145",
          "_3146",
          "_3147",
          "_3148",
          "_3149",
          "_3150",
          "_3151",
          "_3152",
          "_3153",
          "_3154",
          "_3155",
          "_3156",
          "_3157",
          "_3158",
          "_3159",
          "_3160",
          "_3161",
          "_3162",
          "_3163",
          "_3164",
          "_3165",
          "_3166",
          "_3167",
          "_3168",
          "_3169",
          "_3170",
          "_3171",
          "_3172",
          "_3173",
          "_3174",
          "_3175",
          "_3176",
          "_3177",
          "_3178",
          "_3179",
          "_3180",
          "_3181",
          "_3182",
          "_3183",
          "_3184",
          "_3185",
          "_3186",
          "_3187",
          "_3188",
          "_3189",
          "_3190",
          "_3191",
          "_3192",
          "_3193",
          "_3194",
          "_3195",
          "_3196",
          "_3197",
          "_3198",
          "_3199",
          "_3200",
          "_3201",
          "_3202",
          "_3203",
          "_3204",
          "_3205",
          "_3206",
          "_3207",
          "_3208",
          "_3209",
          "_3210",
          "_3211",
          "_3212",
          "_3213",
          "_3214",
          "_3215",
          "_3216",
          "_3217",
          "_3218",
          "_3219",
          "_3220",
          "_3221",
          "_3222",
          "_3223",
          "_3224",
          "_3225",
          "_3226",
          "_3227",
          "_3228",
          "_3229",
          "_3230",
          "_3231",
          "_3232",
          "_3233",
          "_3234",
          "_3235",
          "_3236",
          "_3237",
          "_3238",
          "_3239",
          "_3240",
          "_3241",
          "_3242",
          "_3243",
          "_3244",
          "_3245",
          "_3246",
          "_3247",
          "_3248",
          "_3249",
          "_3250",
          "_3251",
          "_3252",
          "_3253",
          "_3254",
          "_3255",
          "_3256",
          "_3257",
          "_3258",
          "_3259",
          "_3260",
          "_3261",
          "_3262",
          "_3263",
          "_3264",
          "_3265",
          "_3267",
          "_3268",
          "_3269",
          "_3270",
          "_3271",
          "_3272",
          "_3273",
          "_3274",
          "_3275",
          "_3276",
          "_3277",
          "_3278",
          "_3279",
          "_3280",
          "_3281",
          "_3282",
          "_3283",
          "_3284",
          "_3285",
          "_3286",
          "_3289",
          "_3290",
          "_3291",
          "_3292",
          "_3293",
          "_3294",
          "_3295",
          "_3296",
          "_3297",
          "_3298",
          "_3299",
          "_3300",
          "_3301",
          "_3302",
          "_3303",
          "_3304",
          "_3305",
          "_3306",
          "_3307",
          "_3308",
          "_3309",
          "_3310",
          "_3311",
          "_3312",
          "_3313",
          "_3314",
          "_3315",
          "_3316",
          "_3317",
          "_3318",
          "_3319",
          "_3320",
          "_3321",
          "_3322",
          "_3323",
          "_3324",
          "_3325",
          "_3326",
          "_3327",
          "_3328",
          "_3329",
          "_3330",
          "_3331",
          "_3332",
          "_3333",
          "_3334",
          "_3335",
          "_3336",
          "_3337",
          "_3338",
          "_3339",
          "_3340",
          "_3341",
          "_3342",
          "_3343",
          "_3344",
          "_3345",
          "_3346",
          "_3347",
          "_3348",
          "_3349",
          "_3350",
          "_3351",
          "_3352",
          "_3353",
          "_3354",
          "_3355",
          "_3356",
          "_3357",
          "_3358",
          "_3359",
          "_3360",
          "_3361",
          "_3362",
          "_3363",
          "_3364",
          "_3365",
          "_3366",
          "_3367",
          "_3368",
          "_3369",
          "_3370",
          "_3371",
          "_3372",
          "_3373",
          "_3374",
          "_3375",
          "_3376",
          "_3377",
          "_3378",
          "_3379",
          "_3380",
          "_3381",
          "_3382",
          "_3383",
          "_3384",
          "_3385",
          "_3386",
          "_3387",
          "_3388",
          "_3389",
          "_3390",
          "_3391",
          "_3392",
          "_3393",
          "_3394",
          "_3395",
          "_3396",
          "_3397",
          "_3398",
          "_3399",
          "_3400",
          "_3401",
          "_3402",
          "_3403",
          "_3404",
          "_3405",
          "_3406",
          "_3407",
          "_3408",
          "_3409",
          "_3410",
          "_3411",
          "_3412",
          "_3413",
          "_3414",
          "_3415",
          "_3416",
          "_3417",
          "_3418",
          "_3419",
          "_3420",
          "_3421",
          "_3422",
          "_3423",
          "_3424",
          "_3425",
          "_3426",
          "_3427",
          "_3428",
          "_3429",
          "_3430",
          "_3431",
          "_3432",
          "_3433",
          "_3434",
          "_3435",
          "_3436",
          "_3437",
          "_3438",
          "_3439",
          "_3440",
          "_3441",
          "_3442",
          "_3443",
          "_3444",
          "_3445",
          "_3446",
          "_3447",
          "_3448",
          "_3449",
          "_3450",
          "_3451",
          "_3452",
          "_3453",
          "_3454",
          "_3455",
          "_3456",
          "_3457",
          "_3458",
          "_3459",
          "_3460",
          "_3461",
          "_3462",
          "_3463",
          "_3464",
          "_3465",
          "_3466",
          "_3467",
          "_3468",
          "_3469",
          "_3470",
          "_3471",
          "_3472",
          "_3473",
          "_3474",
          "_3475",
          "_3476",
          "_3477",
          "_3478",
          "_3479",
          "_3480",
          "_3481",
          "_3482",
          "_3483",
          "_3484",
          "_3485",
          "_3486",
          "_3487",
          "_3488",
          "_3489",
          "_3490",
          "_3491",
          "_3492",
          "_3493",
          "_3494",
          "_3495",
          "_3496",
          "_3497",
          "_3498",
          "_3499",
          "_3500",
          "_3501",
          "_3502",
          "_3503",
          "_3504",
          "_3505",
          "_3507",
          "_3508",
          "_3509",
          "_3510",
          "_3511",
          "_3512",
          "_3513",
          "_3514",
          "_3515",
          "_3516",
          "_3517",
          "_3518",
          "_3519",
          "_3520",
          "_3521",
          "_3522",
          "_3523",
          "_3524",
          "_3525",
          "_3526",
          "_3527",
          "_3528",
          "_3529",
          "_3530",
          "_3531",
          "_3532",
          "_3533",
          "_3534",
          "_3535",
          "_3536",
          "_3537",
          "_3538",
          "_3539",
          "_3540",
          "_3541",
          "_3542",
          "_3543",
          "_3544",
          "_3545",
          "_3546",
          "_3547",
          "_3548",
          "_3549",
          "_3550",
          "_3551",
          "_3552",
          "_3553",
          "_3554",
          "_3555",
          "_3556",
          "_3557",
          "_3558",
          "_3559",
          "_3560",
          "_3561",
          "_3562",
          "_3563",
          "_3564",
          "_3567",
          "_3568",
          "_3569",
          "_3570",
          "_3571",
          "_3572",
          "_3573",
          "_3574",
          "_3575",
          "_3576",
          "_3577",
          "_3578",
          "_3579",
          "_3580",
          "_3581",
          "_3582",
          "_3583",
          "_3584",
          "_3585",
          "_3586",
          "_3587",
          "_3588",
          "_3589",
          "_3590",
          "_3591",
          "_3592",
          "_3593",
          "_3594",
          "_3595",
          "_3596",
          "_3597",
          "_3598",
          "_3599",
          "_3600",
          "_3601",
          "_3602",
          "_3603",
          "_3604",
          "_3605",
          "_3606",
          "_3607",
          "_3608",
          "_3609",
          "_3610",
          "_3611",
          "_3612",
          "_3613",
          "_3614",
          "_3615",
          "_3616",
          "_3617",
          "_3618",
          "_3619",
          "_3620",
          "_3621",
          "_3622",
          "_3623",
          "_3624",
          "_3625",
          "_3626",
          "_3627",
          "_3628",
          "_3629",
          "_3630",
          "_3631",
          "_3632",
          "_3633",
          "_3634",
          "_3635",
          "_3636",
          "_3637",
          "_3638",
          "_3639",
          "_3640",
          "_3641",
          "_3642",
          "_3643",
          "_3644",
          "_3645",
          "_3646",
          "_3647",
          "_3648",
          "_3649",
          "_3650",
          "_3651",
          "_3652",
          "_3653",
          "_3654",
          "_3655",
          "_3656",
          "_3657",
          "_3658",
          "_3659",
          "_3660",
          "_3661",
          "_3662",
          "_3663",
          "_3664",
          "_3665",
          "_3666",
          "_3667",
          "_3668",
          "_3669",
          "_3670",
          "_3671",
          "_3672",
          "_3673",
          "_3674",
          "_3675",
          "_3676",
          "_3677",
          "_3678",
          "_3679",
          "_3680",
          "_3681",
          "_3682",
          "_3683",
          "_3684",
          "_3685",
          "_3686",
          "_3687",
          "_3688",
          "_3689",
          "_3690",
          "_3691",
          "_3692",
          "_3693",
          "_3694",
          "_3695",
          "_3696",
          "_3697",
          "_3698",
          "_3699",
          "_3700",
          "_3701",
          "_3702",
          "_3703",
          "_3704",
          "_3705",
          "_3706",
          "_3707",
          "_3708",
          "_3709",
          "_3710",
          "_3711",
          "_3712",
          "_3713",
          "_3714",
          "_3715",
          "_3716",
          "_3717",
          "_3718",
          "_3719",
          "_3720",
          "_3721",
          "_3722",
          "_3723",
          "_3724",
          "_3725",
          "_3726",
          "_3727",
          "_3728",
          "_3729",
          "_3730",
          "_3731",
          "_3732",
          "_3733",
          "_3734",
          "_3735",
          "_3736",
          "_3737",
          "_3738",
          "_3739",
          "_3740",
          "_3741",
          "_3742",
          "_3743",
          "_3744",
          "_3745",
          "_3746",
          "_3747",
          "_3748",
          "_3749",
          "_3750",
          "_3751",
          "_3752",
          "_3753",
          "_3754",
          "_3755",
          "_3756",
          "_3757",
          "_3758",
          "_3759",
          "_3760",
          "_3761",
          "_3762",
          "_3763",
          "_3764",
          "_3765",
          "_3766",
          "_3767",
          "_3768",
          "_3769",
          "_3770",
          "_3771",
          "_3772",
          "_3773",
          "_3774",
          "_3775",
          "_3776",
          "_3777",
          "_3778",
          "_3779",
          "_3780",
          "_3781",
          "_3782",
          "_3783",
          "_3784",
          "_3785",
          "_3786",
          "_3787",
          "_3788",
          "_3789",
          "_3790",
          "_3791",
          "_3792",
          "_3793",
          "_3794",
          "_3795",
          "_3796",
          "_3797",
          "_3798",
          "_3799",
          "_3800",
          "_3801",
          "_3802",
          "_3803",
          "_3804",
          "_3805",
          "_3806",
          "_3807",
          "_3808",
          "_3809",
          "_3810",
          "_3811",
          "_3812",
          "_3813",
          "_3814",
          "_3815",
          "_3816",
          "_3817",
          "_3818",
          "_3819",
          "_3820",
          "_3821",
          "_3822",
          "_3823",
          "_3824",
          "_3825",
          "_3826",
          "_3827",
          "_3828",
          "_3829",
          "_3830",
          "_3831",
          "_3832",
          "_3833",
          "_3834",
          "_3835",
          "_3836",
          "_3837",
          "_3838",
          "_3839",
          "_3840",
          "_3841",
          "_3842",
          "_3843",
          "_3844",
          "_3845",
          "_3846",
          "_3847",
          "_3848",
          "_3849",
          "_3850",
          "_3851",
          "_3852",
          "_3853",
          "_3854",
          "_3855",
          "_3856",
          "_3857",
          "_3858",
          "_3859",
          "_3860",
          "_3861",
          "_3862",
          "_3863",
          "_3864",
          "_3865",
          "_3866",
          "_3867",
          "_3868",
          "_3869",
          "_3870",
          "_3871",
          "_3872",
          "_3873",
          "_3874",
          "_3875",
          "_3876",
          "_3877",
          "_3878",
          "_3879",
          "_3880",
          "_3881",
          "_3882",
          "_3883",
          "_3884",
          "_3885",
          "_3886",
          "_3887",
          "_3888",
          "_3889",
          "_3890",
          "_3891",
          "_3892",
          "_3893",
          "_3894",
          "_3895",
          "_3896",
          "_3897",
          "_3898",
          "_3899",
          "_3900",
          "_3901",
          "_3902",
          "_3903",
          "_3904",
          "_3905",
          "_3906",
          "_3907",
          "_3908",
          "_3909",
          "_3910",
          "_3911",
          "_3912",
          "_3913",
          "_3914",
          "_3915",
          "_3916",
          "_3917",
          "_3918",
          "_3919",
          "_3920",
          "_3921",
          "_3922",
          "_3923",
          "_3924",
          "_3925",
          "_3926",
          "_3927",
          "_3928",
          "_3929",
          "_3930",
          "_3931",
          "_3932",
          "_3933",
          "_3934",
          "_3935",
          "_3936",
          "_3937",
          "_3938",
          "_3939",
          "_3940",
          "_3941",
          "_3942",
          "_3943",
          "_3944",
          "_3945",
          "_3946",
          "_3947",
          "_3948",
          "_3949",
          "_3950",
          "_3951",
          "_3952",
          "_3953",
          "_3954",
          "_3955",
          "_3956",
          "_3957",
          "_3958",
          "_3959",
          "_3960",
          "_3961",
          "_3962",
          "_3963",
          "_3964",
          "_3965",
          "_3966",
          "_3967",
          "_3968",
          "_3969",
          "_3970",
          "_3971",
          "_3972",
          "_3973",
          "_3974",
          "_3975",
          "_3976",
          "_3977",
          "_3978",
          "_3979",
          "_3980",
          "_3981",
          "_3982",
          "_3983",
          "_3984",
          "_3985",
          "_3986",
          "_3987",
          "_3988",
          "_3989",
          "_3990",
          "_3991",
          "_3992",
          "_3993",
          "_3994",
          "_3995",
          "_3996",
          "_3997",
          "_3998",
          "_3999"
        ]
      },
      "DomesticRelationshipStatus": {
        "type": "string",
        "example": "CivilUnion",
        "x-enumNames": [
          "CivilUnion",
          "DomesticPartnership",
          "Other",
          "RegisteredReciprocalBeneficiaryRelationship"
        ],
        "enum": [
          "CivilUnion",
          "DomesticPartnership",
          "Other",
          "RegisteredReciprocalBeneficiaryRelationship"
        ]
      },
      "DUDOCreditOverrideCode": {
        "type": "string",
        "example": "DisregardBankruptcyExtenuatingCircumstances",
        "x-enumNames": [
          "DisregardBankruptcyExtenuatingCircumstances",
          "DisregardForeclosureExtenuatingCircumstances",
          "DisregardBankruptcyIncorrectInformation",
          "DisregardForeclosureIncorrectInformation",
          "DisregardMortgageDelinquencyIncorrectInformation"
        ],
        "enum": [
          "DisregardBankruptcyExtenuatingCircumstances",
          "DisregardForeclosureExtenuatingCircumstances",
          "DisregardBankruptcyIncorrectInformation",
          "DisregardForeclosureIncorrectInformation",
          "DisregardMortgageDelinquencyIncorrectInformation"
        ]
      },
      "DynamicSchema": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "properties": {
            "type": "object",
            "readOnly": true,
            "additionalProperties": {
              "$ref": "#/components/schemas/DynamicSchemaElement"
            }
          },
          "type": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "DynamicSchemaElement": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "enum": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "format": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "items": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DynamicSchemaElementItem"
              }
            ]
          },
          "nullable": {
            "type": "boolean",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/DynamicSchemaType"
          }
        }
      },
      "DynamicSchemaElementItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "enum": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/DynamicSchemaType"
          }
        }
      },
      "DynamicSchemaRequestType": {
        "type": "string",
        "example": "CustomField",
        "x-enumNames": [
          "CustomField",
          "Fact",
          "ComputedField"
        ],
        "enum": [
          "CustomField",
          "Fact",
          "ComputedField"
        ]
      },
      "DynamicSchemaType": {
        "type": "string",
        "example": "string",
        "x-enumNames": [
          "String",
          "Number",
          "Integer",
          "Boolean",
          "Array"
        ],
        "enum": [
          "string",
          "number",
          "integer",
          "boolean",
          "array"
        ]
      },
      "EasementType": {
        "type": "string",
        "example": "Utility",
        "x-enumNames": [
          "Utility",
          "JointWithAdjoining",
          "NaturalResourceRights",
          "Other"
        ],
        "enum": [
          "Utility",
          "JointWithAdjoining",
          "NaturalResourceRights",
          "Other"
        ]
      },
      "EconsentCaptureMethod": {
        "type": "string",
        "example": "Electronic",
        "x-enumNames": [
          "Electronic",
          "Verbal"
        ],
        "enum": [
          "Electronic",
          "Verbal"
        ]
      },
      "EconsentStatus": {
        "type": "string",
        "example": "Accept",
        "x-enumNames": [
          "Accept",
          "Decline",
          "Withdrawn"
        ],
        "enum": [
          "Accept",
          "Decline",
          "Withdrawn"
        ]
      },
      "EffectiveAppraisalWaiver": {
        "type": "string",
        "example": "FannieMaeValueAcceptance",
        "x-enumNames": [
          "FannieMaeValueAcceptance",
          "FreddieMacAutomatedCollateralEvaluation",
          "FannieMaeValueAcceptanceWithPDR",
          "FreddieMacAutomatedCollateralEvaluationWithPDR"
        ],
        "enum": [
          "FannieMaeValueAcceptance",
          "FreddieMacAutomatedCollateralEvaluation",
          "FannieMaeValueAcceptanceWithPDR",
          "FreddieMacAutomatedCollateralEvaluationWithPDR"
        ]
      },
      "Employer": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "address": {
            "description": "The address of the employer. This should reflect the legal address as it appears on documents, not necessarily the office where the borrower works",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ]
          },
          "aliases": {
            "type": "array",
            "description": "A list of all of the other full names an employer might go by/that might appear on other documents",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "emailAddress": {
            "type": "string",
            "description": "Email address that can be used to reach the employer for a verification of income",
            "nullable": true
          },
          "employmentClassificationType": {
            "description": "Whether this is the borrower's primary or secondary employer",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmploymentClassificationType"
              }
            ]
          },
          "endDate": {
            "type": "string",
            "description": "The date that the borrower ended work with this employer, if the borrower no longer works there",
            "format": "date",
            "nullable": true
          },
          "jobTitle": {
            "type": "string",
            "description": "The borrower's job title, as represented by the employer",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the borrower's employer",
            "nullable": true
          },
          "numberOfMonthsInThisLineOfWork": {
            "type": "integer",
            "description": "The number of months that the borrower has been in this line of work, irrespective of employer",
            "nullable": true
          },
          "ownershipPercentage": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "description": "The phone number used to contact the employer. This will be used for verbal verification of income, so should be a contact point for HR, etc",
            "nullable": true
          },
          "specialBorrowerEmployerRelationshipIndicator": {
            "type": "boolean",
            "description": "Indicates that the borrower has a special relationship with the employer, typically one of family",
            "nullable": true
          },
          "specialBorrowerEmployerRelationshipType": {
            "description": "Specifies a unique category of employer which is the source of income for the borrower",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpecialBorrowerEmployerRelationshipType"
              }
            ]
          },
          "startDate": {
            "type": "string",
            "description": "The date that the borrower started work with this employer",
            "format": "date",
            "nullable": true
          },
          "status": {
            "description": "Whether the employer is a present or past employer for ths borrower",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmployerStatus"
              }
            ]
          },
          "verbalVerificationCallDate": {
            "type": "string",
            "description": "The date on which the phone call for verbal verification of employment took place",
            "format": "date",
            "nullable": true
          },
          "verbalVerificationEmployerContactFullName": {
            "type": "string",
            "description": "The name of the contact at the employer who provided verbal verification of employment",
            "nullable": true
          },
          "verbalVerificationEmployerContactTitle": {
            "type": "string",
            "description": "The title of the contact at the employer who provided verbal verification of employment",
            "nullable": true
          },
          "verbalVerificationLenderCallerFullName": {
            "type": "string",
            "description": "The name of the employee at the lender who performed verbal verification of employment",
            "nullable": true
          },
          "verbalVerificationLenderCallerTitle": {
            "type": "string",
            "description": "The title of the employee at the lender who performed verbal verification of employment",
            "nullable": true
          },
          "verbalVerificationPhoneNumberSource": {
            "description": "The source the employer phone number came from for verbal verification of employment",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VerbalVerificationPhoneNumberSource"
              }
            ]
          },
          "verificationEmployerStatus": {
            "description": "Reflects whether the employer indicated the employee was active or inactive in the verification, either verbal or otherwise",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VerificationEmployerStatus"
              }
            ]
          },
          "verificationOfEmploymentCurrentAsOfDate": {
            "type": "string",
            "description": "The date as of which the verification of employment is current. Provided by a verified data source if available; otherwise entered by the user who performs the verbal verification",
            "format": "date",
            "nullable": true
          }
        }
      },
      "EmployerStatus": {
        "type": "string",
        "example": "Current",
        "x-enumNames": [
          "Current",
          "Previous"
        ],
        "enum": [
          "Current",
          "Previous"
        ]
      },
      "EmploymentClassificationType": {
        "type": "string",
        "example": "Primary",
        "x-enumNames": [
          "Primary",
          "Secondary"
        ],
        "enum": [
          "Primary",
          "Secondary"
        ]
      },
      "EnergyImprovementType": {
        "type": "string",
        "example": "InstallationOfSolarHeatingOrCooling",
        "x-enumNames": [
          "InstallationOfSolarHeatingOrCooling",
          "ReplacementOfAMajorSystem",
          "AdditionOfANewFeature",
          "InsulationCaulkingWeatherstripping",
          "RepaymentOfAPACELoan",
          "Other",
          "Geothermal",
          "WindTurbine"
        ],
        "enum": [
          "InstallationOfSolarHeatingOrCooling",
          "ReplacementOfAMajorSystem",
          "AdditionOfANewFeature",
          "InsulationCaulkingWeatherstripping",
          "RepaymentOfAPACELoan",
          "Other",
          "Geothermal",
          "WindTurbine"
        ]
      },
      "EntityRelationshipChange": {
        "type": "string",
        "example": "Added",
        "x-enumNames": [
          "Added",
          "Deleted"
        ],
        "enum": [
          "Added",
          "Deleted"
        ]
      },
      "EntityRelationshipWebhook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "change": {
            "readOnly": true,
            "$ref": "#/components/schemas/EntityRelationshipChange"
          },
          "entity1Id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "entity1Type": {
            "type": "string",
            "readOnly": true
          },
          "entity2Id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "entity2Type": {
            "type": "string",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "loanChannel": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanChannel"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "path": {
            "type": "string",
            "readOnly": true,
            "description": "Path is set for non many-to-many relationships, and indicates the specific relationship that was changed (as a JSONPath string).\nWhen Path is set, Entity1 is the entity that has the field, and Entity2 is the entity that is being linked.\nIn a one:many relationship, Entity1 is the child (many) entity, and Entity2 is the parent (one) entity.",
            "nullable": true
          },
          "retries": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "sourceType": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSourceType"
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSubscriptionType"
          },
          "userId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "version": {
            "readOnly": true,
            "$ref": "#/components/schemas/ApiVersion"
          }
        }
      },
      "EntityResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "entityId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "entityType": {
            "type": "string",
            "readOnly": true
          },
          "errorDetails": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanCreationErrorDetails"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "refMappings": {
            "type": "object",
            "readOnly": true,
            "nullable": true,
            "additionalProperties": {
              "type": "string",
              "format": "guid"
            }
          }
        }
      },
      "EscrowDisbursement": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "disbursementType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EscrowDisbursementType"
              }
            ]
          },
          "estimateConfiguration": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EstimateConfiguration"
              }
            ]
          },
          "fileContactId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "firstDisbursementDate": {
            "type": "string",
            "readOnly": true,
            "description": "First disbursement date",
            "format": "date",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "isAdminEstimatedPayments": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "otherHousingExpenseId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "paidTo": {
            "type": "string",
            "description": "Paid to",
            "nullable": true
          },
          "paymentFrequency": {
            "readOnly": true,
            "description": "Payment frequency",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EscrowPaymentFrequencyType"
              }
            ]
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EscrowPayment"
            }
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          },
          "totalAnnualAmount": {
            "type": "number",
            "readOnly": true,
            "description": "Total annual amount",
            "format": "decimal",
            "nullable": true
          },
          "totalAnnualAmountEstimate": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          }
        }
      },
      "EscrowDisbursementType": {
        "type": "string",
        "example": "PropertyTax",
        "x-enumNames": [
          "PropertyTax",
          "StateTax",
          "HomeInsurance",
          "FloodInsurance",
          "MortgageInsurance",
          "WaterSewerAssessment",
          "SupplementalPropertyInsurance",
          "Other",
          "FinancedUSDAGuaranteeFee",
          "EarthquakeInsurance",
          "WindAndHailInsurance",
          "CityTax",
          "VillageTax",
          "SchoolTax",
          "TownTax",
          "FireInsurance",
          "VolcanoInsurance",
          "HurricaneInsurance"
        ],
        "enum": [
          "PropertyTax",
          "StateTax",
          "HomeInsurance",
          "FloodInsurance",
          "MortgageInsurance",
          "WaterSewerAssessment",
          "SupplementalPropertyInsurance",
          "Other",
          "FinancedUSDAGuaranteeFee",
          "EarthquakeInsurance",
          "WindAndHailInsurance",
          "CityTax",
          "VillageTax",
          "SchoolTax",
          "TownTax",
          "FireInsurance",
          "VolcanoInsurance",
          "HurricaneInsurance"
        ]
      },
      "EscrowPayment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "amount": {
            "type": "number",
            "description": "Payment amount",
            "format": "decimal",
            "nullable": true
          },
          "amountEstimate": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "isPrepaid": {
            "type": "boolean",
            "nullable": true
          },
          "paymentDate": {
            "type": "string",
            "description": "Payment date",
            "format": "date",
            "nullable": true
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          }
        }
      },
      "EscrowPaymentFrequencyType": {
        "type": "string",
        "example": "Monthly",
        "x-enumNames": [
          "Monthly",
          "SemiAnnually",
          "Annually",
          "Other",
          "Quarterly"
        ],
        "enum": [
          "Monthly",
          "SemiAnnually",
          "Annually",
          "Other",
          "Quarterly"
        ]
      },
      "EstimateConfiguration": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "firstPaymentDateEstimate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "paymentDatesEstimate": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/MonthDay"
            }
          }
        }
      },
      "ExceptionConditionDecision": {
        "type": "string",
        "example": "Approved",
        "x-enumNames": [
          "Approved",
          "Denied"
        ],
        "enum": [
          "Approved",
          "Denied"
        ]
      },
      "ExcessPurchasePriceAwarenessType": {
        "type": "string",
        "example": "NotAware",
        "x-enumNames": [
          "NotAware",
          "AwareAtTimeOfContract",
          "AwareNowAndMovingForward"
        ],
        "enum": [
          "NotAware",
          "AwareAtTimeOfContract",
          "AwareNowAndMovingForward"
        ]
      },
      "FannieMaeInvestorFeatureCode": {
        "type": "string",
        "example": "_001",
        "x-enumNames": [
          "_001",
          "_003",
          "_007",
          "_009",
          "_013",
          "_014",
          "_019",
          "_033",
          "_036",
          "_037",
          "_038",
          "_054",
          "_076",
          "_087",
          "_107",
          "_118",
          "_127",
          "_151",
          "_155",
          "_162",
          "_165",
          "_168",
          "_170",
          "_173",
          "_175",
          "_176",
          "_177",
          "_180",
          "_181",
          "_184",
          "_202",
          "_211",
          "_212",
          "_215",
          "_220",
          "_221",
          "_235",
          "_279",
          "_281",
          "_296",
          "_304",
          "_343",
          "_375",
          "_416",
          "_508",
          "_588",
          "_630",
          "_631",
          "_679",
          "_707",
          "_754",
          "_773",
          "_774",
          "_777",
          "_784",
          "_785",
          "_791",
          "_792",
          "_798",
          "_801",
          "_807",
          "_808",
          "_818",
          "_839",
          "_840",
          "_841",
          "_859",
          "_861",
          "_868",
          "_871",
          "_874",
          "_877",
          "_880",
          "_884",
          "_900",
          "_919",
          "_920"
        ],
        "enum": [
          "_001",
          "_003",
          "_007",
          "_009",
          "_013",
          "_014",
          "_019",
          "_033",
          "_036",
          "_037",
          "_038",
          "_054",
          "_076",
          "_087",
          "_107",
          "_118",
          "_127",
          "_151",
          "_155",
          "_162",
          "_165",
          "_168",
          "_170",
          "_173",
          "_175",
          "_176",
          "_177",
          "_180",
          "_181",
          "_184",
          "_202",
          "_211",
          "_212",
          "_215",
          "_220",
          "_221",
          "_235",
          "_279",
          "_281",
          "_296",
          "_304",
          "_343",
          "_375",
          "_416",
          "_508",
          "_588",
          "_630",
          "_631",
          "_679",
          "_707",
          "_754",
          "_773",
          "_774",
          "_777",
          "_784",
          "_785",
          "_791",
          "_792",
          "_798",
          "_801",
          "_807",
          "_808",
          "_818",
          "_839",
          "_840",
          "_841",
          "_859",
          "_861",
          "_868",
          "_871",
          "_874",
          "_877",
          "_880",
          "_884",
          "_900",
          "_919",
          "_920"
        ]
      },
      "FeeCalculationMethod": {
        "type": "string",
        "example": "FixedAmount",
        "x-enumNames": [
          "FixedAmount",
          "PercentOfLoan"
        ],
        "enum": [
          "FixedAmount",
          "PercentOfLoan"
        ]
      },
      "FeeCategory": {
        "type": "string",
        "example": "OriginationCharges",
        "x-enumNames": [
          "OriginationCharges",
          "ThirdPartyServices",
          "TaxesAndGovernmentFees",
          "Prepaids",
          "InitialEscrowPayments",
          "Other"
        ],
        "enum": [
          "OriginationCharges",
          "ThirdPartyServices",
          "TaxesAndGovernmentFees",
          "Prepaids",
          "InitialEscrowPayments",
          "Other"
        ]
      },
      "FeeChange": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "closingCostId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "currentValue": {
            "type": "number",
            "readOnly": true,
            "format": "decimal",
            "nullable": true
          },
          "description": {
            "type": "string",
            "readOnly": true
          },
          "disclosedValue": {
            "type": "number",
            "readOnly": true,
            "format": "decimal",
            "nullable": true
          },
          "isTotalLenderCredit": {
            "type": "boolean",
            "readOnly": true,
            "nullable": true
          }
        }
      },
      "FeePaidToParty": {
        "type": "string",
        "example": "Broker",
        "x-enumNames": [
          "Broker",
          "Lender",
          "BrokerAffiliate",
          "LenderAffiliate",
          "Other",
          "Investor",
          "ThirdPartyProvider"
        ],
        "enum": [
          "Broker",
          "Lender",
          "BrokerAffiliate",
          "LenderAffiliate",
          "Other",
          "Investor",
          "ThirdPartyProvider"
        ]
      },
      "FeeRefundType": {
        "type": "string",
        "example": "OriginationFeeReduction",
        "x-enumNames": [
          "OriginationFeeReduction",
          "DirectPayment"
        ],
        "enum": [
          "OriginationFeeReduction",
          "DirectPayment"
        ]
      },
      "FeesProvider": {
        "type": "string",
        "example": "LodeStar",
        "x-enumNames": [
          "LodeStar",
          "SmartFees",
          "Greenlight",
          "Vesta"
        ],
        "enum": [
          "LodeStar",
          "SmartFees",
          "Greenlight",
          "Vesta"
        ]
      },
      "FHAAppraisalLoggingQueryStatus": {
        "type": "string",
        "example": "Queried",
        "x-enumNames": [
          "Queried",
          "NotQueried"
        ],
        "enum": [
          "Queried",
          "NotQueried"
        ]
      },
      "FHACaseCancelStatus": {
        "type": "string",
        "example": "Cancelled",
        "x-enumNames": [
          "Cancelled",
          "NotCancelled"
        ],
        "enum": [
          "Cancelled",
          "NotCancelled"
        ]
      },
      "FHACaseQueryStatus": {
        "type": "string",
        "example": "NotPulled",
        "x-enumNames": [
          "NotPulled",
          "Pulled"
        ],
        "enum": [
          "NotPulled",
          "Pulled"
        ]
      },
      "FHACaseTransferStatus": {
        "type": "string",
        "example": "TransferSubmitted",
        "x-enumNames": [
          "TransferSubmitted",
          "NotTransferred"
        ],
        "enum": [
          "TransferSubmitted",
          "NotTransferred"
        ]
      },
      "FHAConstructionType": {
        "type": "string",
        "example": "Existing",
        "x-enumNames": [
          "Existing",
          "RecentConstruction",
          "ProposedConstruction"
        ],
        "enum": [
          "Existing",
          "RecentConstruction",
          "ProposedConstruction"
        ]
      },
      "FHAInsuranceApplicationStatus": {
        "type": "string",
        "example": "NotSubmitted",
        "x-enumNames": [
          "NotSubmitted",
          "Submitted"
        ],
        "enum": [
          "NotSubmitted",
          "Submitted"
        ]
      },
      "FHARefinanceAuthorizationStatus": {
        "type": "string",
        "example": "NotSubmitted",
        "x-enumNames": [
          "NotSubmitted",
          "Submitted"
        ],
        "enum": [
          "NotSubmitted",
          "Submitted"
        ]
      },
      "FHARefinanceType": {
        "type": "string",
        "example": "Simple",
        "x-enumNames": [
          "Simple",
          "Streamline",
          "RateTerm"
        ],
        "enum": [
          "Simple",
          "Streamline",
          "RateTerm"
        ]
      },
      "FHASectionOfActType": {
        "type": "string",
        "example": "_203B",
        "x-enumNames": [
          "_203B",
          "_203H",
          "_203K",
          "_245A",
          "_248",
          "_251",
          "_513",
          "FHATitleIInsuranceForManufacturedHomes",
          "FHATitleIInsuranceForPropertyImprovementLoans",
          "Other",
          "_184",
          "_247"
        ],
        "enum": [
          "_203B",
          "_203H",
          "_203K",
          "_245A",
          "_248",
          "_251",
          "_513",
          "FHATitleIInsuranceForManufacturedHomes",
          "FHATitleIInsuranceForPropertyImprovementLoans",
          "Other",
          "_184",
          "_247"
        ]
      },
      "FHAStreamlineRefinanceType": {
        "type": "string",
        "example": "CreditQualifying",
        "x-enumNames": [
          "CreditQualifying",
          "NonCreditQualifying"
        ],
        "enum": [
          "CreditQualifying",
          "NonCreditQualifying"
        ]
      },
      "FieldChange": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "changeType": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/OntologyChangeType"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "fieldName": {
            "type": "string",
            "readOnly": true
          },
          "modelId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "modelType": {
            "type": "string",
            "readOnly": true
          },
          "newValue": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "oldValue": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "subFieldName": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          }
        }
      },
      "FieldInputRequiredFormRow": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "fieldName": {
            "type": "string",
            "readOnly": true
          },
          "isRequired": {
            "type": "boolean",
            "readOnly": true
          },
          "modelType": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "FieldType": {
        "type": "string",
        "example": "Bool",
        "x-enumNames": [
          "Bool",
          "String",
          "Decimal",
          "Int",
          "Ushort",
          "DateTime",
          "IncomeValue",
          "TelephoneNumber",
          "Address",
          "BankTransaction",
          "CreditScore",
          "Geocode",
          "HousingCounselingSession",
          "Dropdown",
          "InsuranceDetails",
          "PropertyEasement",
          "OwnershipBreakdown",
          "NonResidentialUnit",
          "MultipleUnitOwner",
          "HMDAEthnicityDetails",
          "HMDARaceDetails",
          "HMDAGenderDetails",
          "OwnershipDetails",
          "DateOnly",
          "FileContact",
          "SupplementaryInsuranceDetails",
          "VerificationProvider",
          "OwnershipInfo",
          "StateLicensingInfo",
          "FileContactProvidedService",
          "Form4506C",
          "PreviousVALoan",
          "MilitaryServicePeriod",
          "Uint",
          "Money",
          "Short",
          "MultiSelectDropdown",
          "PropertyParcel",
          "IncomeValueWithYear",
          "PerUnitInformation",
          "ULDDResponse",
          "UCDResponse",
          "LoanPayment",
          "AddressHistoryGap",
          "EmploymentHistoryGap",
          "Form4506CSelections_v2",
          "Form4506CTaxTranscript",
          "Bankruptcy",
          "Signer",
          "YearMonth",
          "AlternativeLoanOption",
          "ProgramEligibilityFailure"
        ],
        "enum": [
          "Bool",
          "String",
          "Decimal",
          "Int",
          "Ushort",
          "DateTime",
          "IncomeValue",
          "TelephoneNumber",
          "Address",
          "BankTransaction",
          "CreditScore",
          "Geocode",
          "HousingCounselingSession",
          "Dropdown",
          "InsuranceDetails",
          "PropertyEasement",
          "OwnershipBreakdown",
          "NonResidentialUnit",
          "MultipleUnitOwner",
          "HMDAEthnicityDetails",
          "HMDARaceDetails",
          "HMDAGenderDetails",
          "OwnershipDetails",
          "DateOnly",
          "FileContact",
          "SupplementaryInsuranceDetails",
          "VerificationProvider",
          "OwnershipInfo",
          "StateLicensingInfo",
          "FileContactProvidedService",
          "Form4506C",
          "PreviousVALoan",
          "MilitaryServicePeriod",
          "Uint",
          "Money",
          "Short",
          "MultiSelectDropdown",
          "PropertyParcel",
          "IncomeValueWithYear",
          "PerUnitInformation",
          "ULDDResponse",
          "UCDResponse",
          "LoanPayment",
          "AddressHistoryGap",
          "EmploymentHistoryGap",
          "Form4506CSelections_v2",
          "Form4506CTaxTranscript",
          "Bankruptcy",
          "Signer",
          "YearMonth",
          "AlternativeLoanOption",
          "ProgramEligibilityFailure"
        ]
      },
      "FileContact": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "address": {
            "description": "Mailing address",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ]
          },
          "affiliatedWithLender": {
            "type": "boolean",
            "description": "Affiliated with lender",
            "nullable": true
          },
          "aliases": {
            "type": "array",
            "description": "A list of all of the other full names a non-borrower contact might go by/that might appear on other documents",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "amBestRating": {
            "description": "AM Best Rating",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AMBestRating"
              }
            ]
          },
          "companyName": {
            "type": "string",
            "description": "Company name",
            "nullable": true
          },
          "companyNmlsId": {
            "type": "string",
            "description": "Company NMLS",
            "nullable": true
          },
          "companyStateLicenseNumbers": {
            "type": "array",
            "description": "Company state license numbers",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/StateLicensingInfo"
            }
          },
          "demotechRating": {
            "description": "Demotech Rating",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DemotechRating"
              }
            ]
          },
          "emailAddress": {
            "type": "string",
            "description": "Email address",
            "nullable": true
          },
          "fannieMaeId": {
            "type": "string",
            "description": "Fannie Mae ID",
            "nullable": true
          },
          "faxNumber": {
            "type": "string",
            "description": "Fax number",
            "nullable": true
          },
          "fileContactType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanFileContactType"
              }
            ]
          },
          "firstName": {
            "type": "string",
            "description": "First name",
            "nullable": true
          },
          "freddieMacId": {
            "type": "string",
            "description": "Freddie Mac ID",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "individualNmlsId": {
            "type": "string",
            "description": "Individual NMLS",
            "nullable": true
          },
          "individualStateLicenseNumbers": {
            "type": "array",
            "description": "Individual state license numbers",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/StateLicensingInfo"
            }
          },
          "krollRating": {
            "description": "Kroll Rating",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/KrollRating"
              }
            ]
          },
          "lastName": {
            "type": "string",
            "description": "Last name",
            "nullable": true
          },
          "mobilePhoneNumber": {
            "type": "string",
            "description": "Mobile phone number",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number",
            "nullable": true
          },
          "powerOfAttorneySignatureText": {
            "type": "string",
            "description": "Power of attorney signature text",
            "nullable": true
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          },
          "sAndPRating": {
            "description": "S&P Rating",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SAndPRating"
              }
            ]
          },
          "servicesProvided": {
            "type": "array",
            "description": "A list of services and their associated charge rates provided by this contact",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContactProvidedService"
            }
          },
          "source": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanFileContactSource"
              }
            ]
          },
          "usingPowerOfAttorneyIndicator": {
            "type": "boolean",
            "description": "Whether the non-borrower contact would like to provide an agent with power of attorney for closing",
            "nullable": true
          }
        }
      },
      "FileContactProvidedService": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "priceRange": {
            "type": "string",
            "nullable": true
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          },
          "required": {
            "type": "boolean",
            "nullable": true
          },
          "service": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "FileContactStatus": {
        "type": "string",
        "example": "Pending",
        "x-enumNames": [
          "Pending",
          "Approved",
          "Rejected"
        ],
        "enum": [
          "Pending",
          "Approved",
          "Rejected"
        ]
      },
      "FileMetadata": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "fileSize": {
            "type": "integer",
            "readOnly": true,
            "format": "int64",
            "nullable": true
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "name": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "FloodOrderStatus": {
        "type": "string",
        "example": "Pending",
        "x-enumNames": [
          "Pending",
          "Received",
          "InResearch",
          "Cancelled",
          "Rejected",
          "Completed",
          "Error",
          "AdditionalInformationNeeded"
        ],
        "enum": [
          "Pending",
          "Received",
          "InResearch",
          "Cancelled",
          "Rejected",
          "Completed",
          "Error",
          "AdditionalInformationNeeded"
        ]
      },
      "Form4506CJointFilingType": {
        "type": "string",
        "example": "Borrower",
        "x-enumNames": [
          "Borrower",
          "NonBorrower"
        ],
        "enum": [
          "Borrower",
          "NonBorrower"
        ]
      },
      "Form4506CSelections": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "borrowerFiledJointlyIndicator": {
            "type": "boolean",
            "description": "Did this borrower file jointly?",
            "nullable": true
          },
          "filedAddress": {
            "description": "Filed address",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ]
          },
          "filedAddressSameAsCurrentIndicator": {
            "type": "boolean",
            "description": "Same as current",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "jointBorrowerId": {
            "type": "string",
            "description": "Associated borrower",
            "format": "guid",
            "nullable": true
          },
          "jointFilingType": {
            "description": "Filed jointly with",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Form4506CJointFilingType"
              }
            ]
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          },
          "sameAsNextYearIndicator": {
            "type": "boolean",
            "description": "Same as next year?",
            "nullable": true
          },
          "taxTranscripts": {
            "type": "array",
            "description": "Tax transcripts",
            "items": {
              "$ref": "#/components/schemas/Form4506CTaxTranscript"
            }
          }
        }
      },
      "Form4506CTaxTranscript": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "formDocumentId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          },
          "status": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Form4506TaxTranscriptStatus"
              }
            ]
          },
          "taxReturnDocumentCode": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaxReturnDocumentCode"
              }
            ]
          },
          "transcriptType": {
            "description": "Transcript type",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Form4506CTranscriptType"
              }
            ]
          },
          "years": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        }
      },
      "Form4506CTranscriptType": {
        "type": "string",
        "example": "ReturnTranscript",
        "x-enumNames": [
          "ReturnTranscript",
          "AccountTranscript",
          "RecordOfAccount"
        ],
        "enum": [
          "ReturnTranscript",
          "AccountTranscript",
          "RecordOfAccount"
        ]
      },
      "Form4506TaxTranscriptStatus": {
        "type": "string",
        "example": "Submitted",
        "x-enumNames": [
          "Submitted",
          "Completed",
          "OrderUnassigned",
          "OrderInProcess",
          "AdditionalDataRequested",
          "Cancelled",
          "Rejected",
          "ReadyToUpdate"
        ],
        "enum": [
          "Submitted",
          "Completed",
          "OrderUnassigned",
          "OrderInProcess",
          "AdditionalDataRequested",
          "Cancelled",
          "Rejected",
          "ReadyToUpdate"
        ]
      },
      "FormInputValue": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "fieldName",
          "modelType",
          "value"
        ],
        "properties": {
          "fieldName": {
            "type": "string"
          },
          "modelType": {
            "type": "string"
          },
          "value": {}
        }
      },
      "FraudCondition": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "actionStep": {
            "type": "string",
            "readOnly": true,
            "description": "DataVerify only",
            "nullable": true
          },
          "category": {
            "type": "string",
            "readOnly": true,
            "description": "DataVerify only",
            "nullable": true
          },
          "code": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "description": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "fraudConditionCategory": {
            "readOnly": true,
            "description": "FraudGuard only",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/FraudConditionCategory"
              }
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "isCleared": {
            "type": "boolean",
            "readOnly": true,
            "description": "FraudGuard only",
            "nullable": true
          },
          "isHighImpact": {
            "type": "boolean",
            "readOnly": true,
            "description": "FraudGuard only",
            "nullable": true
          },
          "isTrackable": {
            "type": "boolean",
            "readOnly": true,
            "description": "FraudGuard only",
            "nullable": true
          },
          "notes": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FraudConditionNote"
            }
          },
          "provider": {
            "readOnly": true,
            "$ref": "#/components/schemas/FraudProvider"
          },
          "recommendation": {
            "readOnly": true,
            "description": "FraudGuard only",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/FraudConditionRecommendation"
              }
            ]
          },
          "scoringAnalysis": {
            "type": "string",
            "readOnly": true,
            "description": "DataVerify only",
            "nullable": true
          },
          "sequence": {
            "type": "integer",
            "readOnly": true,
            "description": "DataVerify only",
            "nullable": true
          },
          "severity": {
            "type": "string",
            "readOnly": true,
            "description": "DataVerify only",
            "nullable": true
          },
          "status": {
            "type": "string",
            "readOnly": true,
            "description": "DataVerify only",
            "nullable": true
          },
          "subcategory": {
            "type": "string",
            "readOnly": true,
            "description": "DataVerify only",
            "nullable": true
          },
          "subject": {
            "type": "string",
            "readOnly": true,
            "description": "DataVerify only",
            "nullable": true
          }
        }
      },
      "FraudConditionCategory": {
        "type": "string",
        "example": "EmploymentIncome",
        "x-enumNames": [
          "EmploymentIncome",
          "PropertyValuation",
          "Identity",
          "Occupancy",
          "LoanParticipants",
          "Financing",
          "DownPayment",
          "StrawBuyer",
          "ThirdPartyAlerts",
          "PropertyFlipping",
          "AddressValidation",
          "AddressQuestionable",
          "PhoneNumberQuestionable",
          "AppraiserIssues",
          "SubjectProperty",
          "LocalMarketActivity",
          "AssetsLiabilities",
          "Ownership"
        ],
        "enum": [
          "EmploymentIncome",
          "PropertyValuation",
          "Identity",
          "Occupancy",
          "LoanParticipants",
          "Financing",
          "DownPayment",
          "StrawBuyer",
          "ThirdPartyAlerts",
          "PropertyFlipping",
          "AddressValidation",
          "AddressQuestionable",
          "PhoneNumberQuestionable",
          "AppraiserIssues",
          "SubjectProperty",
          "LocalMarketActivity",
          "AssetsLiabilities",
          "Ownership"
        ]
      },
      "FraudConditionNote": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "auditorCode": {
            "type": "string",
            "readOnly": true,
            "description": "FraudGuard only",
            "nullable": true
          },
          "auditorFirstName": {
            "type": "string",
            "readOnly": true,
            "description": "FraudGuard only",
            "nullable": true
          },
          "auditorLastName": {
            "type": "string",
            "readOnly": true,
            "description": "FraudGuard only",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "date": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "finding": {
            "type": "string",
            "readOnly": true,
            "description": "FraudGuard only",
            "nullable": true
          },
          "stipulation": {
            "type": "string",
            "readOnly": true,
            "description": "FraudGuard only",
            "nullable": true
          }
        }
      },
      "FraudConditionRecommendation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "participant": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "recommendations": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "FraudProvider": {
        "type": "string",
        "example": "FraudGuard",
        "x-enumNames": [
          "FraudGuard",
          "DataVerify"
        ],
        "enum": [
          "FraudGuard",
          "DataVerify"
        ]
      },
      "FreddieMacInvestorFeatureCode": {
        "type": "string",
        "example": "_001",
        "x-enumNames": [
          "_001",
          "_019",
          "_033",
          "_130",
          "_203",
          "_532",
          "D25",
          "D76",
          "G18",
          "H31",
          "H37",
          "H61",
          "J05",
          "J07",
          "J11",
          "J18",
          "J22",
          "J44",
          "J54",
          "J66",
          "J84",
          "J95",
          "J97",
          "K01",
          "K02"
        ],
        "enum": [
          "_001",
          "_019",
          "_033",
          "_130",
          "_203",
          "_532",
          "D25",
          "D76",
          "G18",
          "H31",
          "H37",
          "H61",
          "J05",
          "J07",
          "J11",
          "J18",
          "J22",
          "J44",
          "J54",
          "J66",
          "J84",
          "J95",
          "J97",
          "K01",
          "K02"
        ]
      },
      "FundingType": {
        "type": "string",
        "example": "Wet",
        "x-enumNames": [
          "Wet",
          "Dry"
        ],
        "enum": [
          "Wet",
          "Dry"
        ]
      },
      "Geocode": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "countyCode": {
            "type": "string",
            "description": "The 3 digit code that corresponds to the county the property is in, as determined by the FFIEC",
            "nullable": true
          },
          "msaCode": {
            "type": "string",
            "description": "The 4 or 5 digit Metropolitan Statistical Area code, as determined by the FFIEC",
            "nullable": true
          },
          "tractCode": {
            "type": "string",
            "description": "The code that describes the census tract the property is in, as determined by the FFIEC",
            "nullable": true
          }
        }
      },
      "GeorgiaLicenseType": {
        "type": "string",
        "example": "MortgageBrokerProcessorLicense",
        "x-enumNames": [
          "MortgageBrokerProcessorLicense",
          "MortgageLenderLicense"
        ],
        "enum": [
          "MortgageBrokerProcessorLicense",
          "MortgageLenderLicense"
        ]
      },
      "GiftSource": {
        "type": "string",
        "example": "CommunityNonProfit",
        "x-enumNames": [
          "CommunityNonProfit",
          "Employer",
          "FederalAgency",
          "Lender",
          "LocalAgency",
          "NonParentRelative",
          "Other",
          "Parent",
          "Relative",
          "ReligiousNonProfit",
          "StateAgency",
          "UnmarriedPartner",
          "UnrelatedFriend"
        ],
        "enum": [
          "CommunityNonProfit",
          "Employer",
          "FederalAgency",
          "Lender",
          "LocalAgency",
          "NonParentRelative",
          "Other",
          "Parent",
          "Relative",
          "ReligiousNonProfit",
          "StateAgency",
          "UnmarriedPartner",
          "UnrelatedFriend"
        ]
      },
      "GlobalFileContact": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "address": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ]
          },
          "affiliatedWithLender": {
            "type": "boolean",
            "nullable": true
          },
          "aliases": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "amBestRating": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AMBestRating"
              }
            ]
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "companyNmlsId": {
            "type": "string",
            "nullable": true
          },
          "companyStateLicenseNumbers": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/StateLicensingInfoFull"
            }
          },
          "demotechRating": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DemotechRating"
              }
            ]
          },
          "emailAddress": {
            "type": "string",
            "nullable": true
          },
          "fannieMaeId": {
            "type": "string",
            "description": "Fannie Mae ID",
            "nullable": true
          },
          "faxNumber": {
            "type": "string",
            "nullable": true
          },
          "fileContactType": {
            "$ref": "#/components/schemas/GlobalFileContactType"
          },
          "firstName": {
            "type": "string"
          },
          "freddieMacId": {
            "type": "string",
            "description": "Freddie Mac ID",
            "nullable": true
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "individualNmlsId": {
            "type": "string",
            "nullable": true
          },
          "individualStateLicenseNumbers": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/StateLicensingInfoFull"
            }
          },
          "krollRating": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/KrollRating"
              }
            ]
          },
          "lastName": {
            "type": "string"
          },
          "mobilePhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "powerOfAttorneySignatureText": {
            "type": "string",
            "nullable": true
          },
          "sAndPRating": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SAndPRating"
              }
            ]
          },
          "servicesProvided": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContactProvidedService"
            }
          },
          "status": {
            "$ref": "#/components/schemas/FileContactStatus"
          },
          "usingPowerOfAttorneyIndicator": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "GlobalFileContactType": {
        "type": "string",
        "example": "Appraiser",
        "x-enumNames": [
          "Appraiser",
          "EscrowAgent",
          "InsuranceAgent",
          "Inspector",
          "Notary",
          "TitleAgent",
          "RealEstateAgent",
          "PropertySeller",
          "NonBorrowingOwner",
          "PartnerBroker",
          "PartnerWholesaler",
          "ClosingAgent",
          "Surveyor",
          "AppraisalManagementCompany",
          "FloodDeterminationCompany",
          "ClosingAttorney",
          "PropertyAndCasualtyInsuranceCompany",
          "MortgageInsuranceCompany",
          "RecordingOffice",
          "Builder",
          "CountyTaxAssessor",
          "CityTaxAssessor",
          "SchoolTaxAssessor",
          "VillagePropertyTaxCollector",
          "TownPropertyTaxCollector",
          "IRSTaxFormThirdParty",
          "TrusteeCompany",
          "HomeOwnersAssociation",
          "HomeManufacturer",
          "Servicer",
          "CorrespondentLender",
          "RenovationConsultant",
          "StateTaxAssessor"
        ],
        "enum": [
          "Appraiser",
          "EscrowAgent",
          "InsuranceAgent",
          "Inspector",
          "Notary",
          "TitleAgent",
          "RealEstateAgent",
          "PropertySeller",
          "NonBorrowingOwner",
          "PartnerBroker",
          "PartnerWholesaler",
          "ClosingAgent",
          "Surveyor",
          "AppraisalManagementCompany",
          "FloodDeterminationCompany",
          "ClosingAttorney",
          "PropertyAndCasualtyInsuranceCompany",
          "MortgageInsuranceCompany",
          "RecordingOffice",
          "Builder",
          "CountyTaxAssessor",
          "CityTaxAssessor",
          "SchoolTaxAssessor",
          "VillagePropertyTaxCollector",
          "TownPropertyTaxCollector",
          "IRSTaxFormThirdParty",
          "TrusteeCompany",
          "HomeOwnersAssociation",
          "HomeManufacturer",
          "Servicer",
          "CorrespondentLender",
          "RenovationConsultant",
          "StateTaxAssessor"
        ]
      },
      "HawaiianLavaZone": {
        "type": "string",
        "example": "ZoneOne",
        "x-enumNames": [
          "ZoneOne",
          "ZoneTwo",
          "ZoneThree",
          "ZoneFour",
          "ZoneFive",
          "ZoneSix",
          "ZoneSeven",
          "ZoneEight",
          "ZoneNine"
        ],
        "enum": [
          "ZoneOne",
          "ZoneTwo",
          "ZoneThree",
          "ZoneFour",
          "ZoneFive",
          "ZoneSix",
          "ZoneSeven",
          "ZoneEight",
          "ZoneNine"
        ]
      },
      "HawaiiLicenseType": {
        "type": "string",
        "example": "MortgageLoanOriginatorCompanyLicense",
        "x-enumNames": [
          "MortgageLoanOriginatorCompanyLicense",
          "MortgageServicerLicense"
        ],
        "enum": [
          "MortgageLoanOriginatorCompanyLicense",
          "MortgageServicerLicense"
        ]
      },
      "HELOCDrawAmortizationType": {
        "type": "string",
        "example": "Fixed",
        "x-enumNames": [
          "Fixed",
          "Floating"
        ],
        "enum": [
          "Fixed",
          "Floating"
        ]
      },
      "HELOCLineFixedOrFloatingType": {
        "type": "string",
        "example": "Fixed",
        "x-enumNames": [
          "Fixed",
          "Floating"
        ],
        "enum": [
          "Fixed",
          "Floating"
        ]
      },
      "HMDAApplicationSubmissionType": {
        "type": "string",
        "example": "NotApplicable",
        "x-enumNames": [
          "NotApplicable",
          "NotSubmittedDirectly",
          "SubmittedDirectly"
        ],
        "enum": [
          "NotApplicable",
          "NotSubmittedDirectly",
          "SubmittedDirectly"
        ]
      },
      "HMDACoveredLoanInitiallyPayableToReportingInstitutionStatusType": {
        "type": "string",
        "example": "InitiallyPayable",
        "x-enumNames": [
          "InitiallyPayable",
          "NotApplicable",
          "NotInitiallyPayable"
        ],
        "enum": [
          "InitiallyPayable",
          "NotApplicable",
          "NotInitiallyPayable"
        ]
      },
      "HMDADispositionType": {
        "type": "string",
        "example": "ApplicationApprovedButNotAccepted",
        "x-enumNames": [
          "ApplicationApprovedButNotAccepted",
          "ApplicationDenied",
          "ApplicationWithdrawn",
          "FileClosedForIncompleteness",
          "LoanOriginated",
          "LoanPurchasedByYourInstitution",
          "PreapprovalRequestApprovedButNotAccepted",
          "PreapprovalRequestDenied"
        ],
        "enum": [
          "ApplicationApprovedButNotAccepted",
          "ApplicationDenied",
          "ApplicationWithdrawn",
          "FileClosedForIncompleteness",
          "LoanOriginated",
          "LoanPurchasedByYourInstitution",
          "PreapprovalRequestApprovedButNotAccepted",
          "PreapprovalRequestDenied"
        ]
      },
      "HMDAEthnicityDetails": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "hmdaEthnicityCollectedBasedOnVisualObservationOrSurnameIndicator": {
            "type": "boolean",
            "description": "Was this collected on basis of appearance or surname?",
            "nullable": true
          },
          "hmdaEthnicityOriginTypes": {
            "type": "array",
            "description": "Ethnicity designation",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/HMDAEthnicityOriginType"
            }
          },
          "hmdaEthnicityTypes": {
            "type": "array",
            "description": "Ethnicity",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/HMDAEthnicityType"
            }
          },
          "otherHMDAEthnicityOriginType": {
            "type": "string",
            "description": "Other ethnicity designation",
            "nullable": true
          }
        }
      },
      "HMDAEthnicityOriginType": {
        "type": "string",
        "example": "Cuban",
        "x-enumNames": [
          "Cuban",
          "Mexican",
          "Other",
          "PuertoRican"
        ],
        "enum": [
          "Cuban",
          "Mexican",
          "Other",
          "PuertoRican"
        ]
      },
      "HMDAEthnicityType": {
        "type": "string",
        "example": "HispanicOrLatino",
        "x-enumNames": [
          "HispanicOrLatino",
          "NotHispanicOrLatino",
          "PreferNotToDisclose"
        ],
        "enum": [
          "HispanicOrLatino",
          "NotHispanicOrLatino",
          "PreferNotToDisclose"
        ]
      },
      "HMDAGenderDetails": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "hmdaGenderCollectedBasedOnVisualObservationOrNameIndicator": {
            "type": "boolean",
            "description": "Was this collected on basis of appearance or surname?",
            "nullable": true
          },
          "hmdaGenderTypes": {
            "type": "array",
            "description": "Gender",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/HMDAGenderType"
            }
          }
        }
      },
      "HMDAGenderType": {
        "type": "string",
        "example": "Female",
        "x-enumNames": [
          "Female",
          "Male",
          "PreferNotToDisclose"
        ],
        "enum": [
          "Female",
          "Male",
          "PreferNotToDisclose"
        ]
      },
      "HMDAPurchaserType": {
        "type": "string",
        "example": "AffiliateInstitution",
        "x-enumNames": [
          "AffiliateInstitution",
          "CommercialOrSavingsBank",
          "FannieMae",
          "FarmerMac",
          "FinancialInstitution",
          "FreddieMac",
          "GinnieMae",
          "MortgageCompany",
          "NotApplicable",
          "Other",
          "PrivateSecuritization"
        ],
        "enum": [
          "AffiliateInstitution",
          "CommercialOrSavingsBank",
          "FannieMae",
          "FarmerMac",
          "FinancialInstitution",
          "FreddieMac",
          "GinnieMae",
          "MortgageCompany",
          "NotApplicable",
          "Other",
          "PrivateSecuritization"
        ]
      },
      "HMDARaceDesignationType": {
        "type": "string",
        "example": "AsianIndian",
        "x-enumNames": [
          "AsianIndian",
          "Chinese",
          "Filipino",
          "Japanese",
          "Korean",
          "OtherAsian",
          "Vietnamese"
        ],
        "enum": [
          "AsianIndian",
          "Chinese",
          "Filipino",
          "Japanese",
          "Korean",
          "OtherAsian",
          "Vietnamese"
        ]
      },
      "HMDARaceDesignationTypePacificIslander": {
        "type": "string",
        "example": "GuamanianOrChamorro",
        "x-enumNames": [
          "GuamanianOrChamorro",
          "NativeHawaiian",
          "OtherPacificIslander",
          "Samoan"
        ],
        "enum": [
          "GuamanianOrChamorro",
          "NativeHawaiian",
          "OtherPacificIslander",
          "Samoan"
        ]
      },
      "HMDARaceDetails": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "hmdaRaceCollectedBasedOnVisualObservationOrSurnameIndicator": {
            "type": "boolean",
            "description": "Was this collected on basis of appearance or surname?",
            "nullable": true
          },
          "hmdaRaceDesignationOtherAsianDescription": {
            "type": "string",
            "description": "Other Asian designation",
            "nullable": true
          },
          "hmdaRaceDesignationOtherPacificIslanderDescription": {
            "type": "string",
            "description": "Other Pacific Islander designation",
            "nullable": true
          },
          "hmdaRaceDesignationTypes": {
            "type": "array",
            "description": "Asian designation",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/HMDARaceDesignationType"
            }
          },
          "hmdaRaceDesignationTypesPacificIslander": {
            "type": "array",
            "description": "Pacific Islander designation",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/HMDARaceDesignationTypePacificIslander"
            }
          },
          "hmdaRaceEnrolledOrPrincipalTribe": {
            "type": "string",
            "description": "American Indian or Alaska Native tribe",
            "nullable": true
          },
          "hmdaRaceTypes": {
            "type": "array",
            "description": "Race",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/HMDARaceType"
            }
          }
        }
      },
      "HMDARaceType": {
        "type": "string",
        "example": "AmericanIndianOrAlaskaNative",
        "x-enumNames": [
          "AmericanIndianOrAlaskaNative",
          "Asian",
          "BlackOrAfricanAmerican",
          "NativeHawaiianOrOtherPacificIslander",
          "White",
          "PreferNotToDisclose"
        ],
        "enum": [
          "AmericanIndianOrAlaskaNative",
          "Asian",
          "BlackOrAfricanAmerican",
          "NativeHawaiianOrOtherPacificIslander",
          "White",
          "PreferNotToDisclose"
        ]
      },
      "HousingCounselingMethod": {
        "type": "string",
        "example": "FaceToFace",
        "x-enumNames": [
          "FaceToFace",
          "Telephone",
          "Internet"
        ],
        "enum": [
          "FaceToFace",
          "Telephone",
          "Internet"
        ]
      },
      "HousingCounselingProviderType": {
        "type": "string",
        "example": "AmericanHomeownerEducationAndCounselingInstituteApproved",
        "x-enumNames": [
          "AmericanHomeownerEducationAndCounselingInstituteApproved",
          "HUDApprovedCounselingAgency",
          "LenderTrained",
          "LocalHousingCounselingAgency",
          "MultiStateOrganization",
          "NationalIntermediary",
          "RegionalIntermediary",
          "StateHousingFinanceAgency",
          "Other",
          "Unknown",
          "MortgageInsuranceCompany",
          "NonProfitOrganization"
        ],
        "enum": [
          "AmericanHomeownerEducationAndCounselingInstituteApproved",
          "HUDApprovedCounselingAgency",
          "LenderTrained",
          "LocalHousingCounselingAgency",
          "MultiStateOrganization",
          "NationalIntermediary",
          "RegionalIntermediary",
          "StateHousingFinanceAgency",
          "Other",
          "Unknown",
          "MortgageInsuranceCompany",
          "NonProfitOrganization"
        ]
      },
      "HousingCounselingSession": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "agencyTaxIDNumber": {
            "type": "string",
            "description": "Agency tax ID number",
            "nullable": true
          },
          "counselingCompletedDate": {
            "type": "string",
            "description": "Completed date",
            "format": "date",
            "nullable": true
          },
          "housingCounselingAgencyFullName": {
            "type": "string",
            "description": "Agency name",
            "nullable": true
          },
          "housingCounselingMethod": {
            "description": "Counseling format",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/HousingCounselingMethod"
              }
            ]
          },
          "housingCounselingProviderType": {
            "description": "Counseling provider type",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/HousingCounselingProviderType"
              }
            ]
          },
          "housingCounselingSettingType": {
            "description": "Counseling setting",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/HousingCounselingSettingType"
              }
            ]
          },
          "housingCounselingTopics": {
            "type": "array",
            "description": "Counseling topic",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/HousingCounselingTopic"
            }
          },
          "housingCounselingType": {
            "description": "Counseling type",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/HousingCounselingType"
              }
            ]
          },
          "hudAgencyID": {
            "type": "string",
            "description": "HUD agency ID",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          }
        }
      },
      "HousingCounselingSettingType": {
        "type": "string",
        "example": "Classroom",
        "x-enumNames": [
          "Classroom",
          "HomeStudy",
          "Other"
        ],
        "enum": [
          "Classroom",
          "HomeStudy",
          "Other"
        ]
      },
      "HousingCounselingTopic": {
        "type": "string",
        "example": "FairHousing",
        "x-enumNames": [
          "FairHousing",
          "PrePurchaseEducation",
          "BudgetingAndCreditRepair",
          "FinancialManagementAndBudgeting",
          "HomeImprovementAndRehabilitation",
          "LossMitigation",
          "MarketingAndOutreachInitiatives",
          "MobilityAndRelocation",
          "DelinquencyAndDefaultResolution",
          "NonDelinquencyPostPurchase",
          "Other",
          "PredatoryLendingEducation",
          "PrePurchaseCounseling",
          "PrePurchaseHomebuyerEducation",
          "RentalHousing",
          "ResolvingOrPreventingMortgageDelinquency",
          "ReverseMortgages",
          "ServicesForHomeless"
        ],
        "enum": [
          "FairHousing",
          "PrePurchaseEducation",
          "BudgetingAndCreditRepair",
          "FinancialManagementAndBudgeting",
          "HomeImprovementAndRehabilitation",
          "LossMitigation",
          "MarketingAndOutreachInitiatives",
          "MobilityAndRelocation",
          "DelinquencyAndDefaultResolution",
          "NonDelinquencyPostPurchase",
          "Other",
          "PredatoryLendingEducation",
          "PrePurchaseCounseling",
          "PrePurchaseHomebuyerEducation",
          "RentalHousing",
          "ResolvingOrPreventingMortgageDelinquency",
          "ReverseMortgages",
          "ServicesForHomeless"
        ]
      },
      "HousingCounselingType": {
        "type": "string",
        "example": "Counseling",
        "x-enumNames": [
          "Counseling",
          "Education"
        ],
        "enum": [
          "Counseling",
          "Education"
        ]
      },
      "IdahoLicenseType": {
        "type": "string",
        "example": "MortgageBrokerLenderLicense",
        "x-enumNames": [
          "MortgageBrokerLenderLicense",
          "RegulatedLenderLicense"
        ],
        "enum": [
          "MortgageBrokerLenderLicense",
          "RegulatedLenderLicense"
        ]
      },
      "ILAPLDSubmissionStatus": {
        "title": "ILAPLDSubmissionStatus",
        "type": "string",
        "example": "RequiresSubmission",
        "x-enumNames": [
          "RequiresSubmission",
          "Submitted",
          "NeedsUpdate",
          "Updated",
          "SuccessfullyProcessed"
        ],
        "enum": [
          "RequiresSubmission",
          "Submitted",
          "NeedsUpdate",
          "Updated",
          "SuccessfullyProcessed"
        ]
      },
      "ImprovementCostsEscrowType": {
        "type": "string",
        "example": "ConstructionMortgage",
        "x-enumNames": [
          "ConstructionMortgage",
          "EnergyEfficientMortgage",
          "RenovationMortgage"
        ],
        "enum": [
          "ConstructionMortgage",
          "EnergyEfficientMortgage",
          "RenovationMortgage"
        ]
      },
      "Income": {
        "type": "object",
        "description": "The income model.",
        "example": {
          "incomeType": "Employment",
          "payType": "Salaried",
          "employer": {
            "employmentClassificationType": "Primary",
            "status": "Current",
            "name": "Google",
            "jobTitle": "Manager",
            "startDate": "2019-02-15",
            "numberOfMonthsInThisLineOfWork": 360
          },
          "statedEmploymentBaseIncome": {
            "amount": 10000,
            "amountType": "Monthly"
          },
          "qualifiedEmploymentBaseIncome": {
            "amount": 3900,
            "amountType": "Monthly"
          },
          "qualifiedEmploymentBonusIncome": {
            "amount": 6800,
            "amountType": "Monthly"
          }
        },
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "alimonyRegularPaymentsForSixMonthsIndicator": {
            "type": "boolean",
            "nullable": true
          },
          "assetBasedIncomeAssetsIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "guid"
            }
          },
          "assetBasedIncomeAssetsRefs": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "autoAllowanceLiability": {
            "writeOnly": true,
            "description": "A reference to the auto loan on the application the auto allowance is meant to be spent on",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Liability"
              }
            ]
          },
          "autoAllowanceLiabilityId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "autoAllowanceLiabilityRef": {
            "type": "string",
            "nullable": true
          },
          "boarderFullName": {
            "type": "string",
            "description": "Full name of the current boarder",
            "nullable": true
          },
          "borrower": {
            "writeOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Borrower"
              }
            ]
          },
          "borrowerId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "borrowerRef": {
            "type": "string",
            "nullable": true
          },
          "businessAmortizationCasualtyLossHistory": {
            "type": "array",
            "description": "A timeseries of the amortization/casualty loss associated with this income over the last few years (IRS 1040 Schedule C, Part V OR Schedule E, Lines 14 and 19 OR Form 1065, Line 20 OR Form 1120S, Line 19 OR Form 1120, Line 26)",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "businessDepletionHistory": {
            "type": "array",
            "description": "A timeseries of the depletion associated with this income over the last few years (IRS 1040 Schedule C, Line 12 OR Form 1065, Line 17 OR Form 1120S, Line 15 OR Form 1120, Line 21)",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "businessDepreciationHistory": {
            "type": "array",
            "description": "A timeseries of the depreciation associated with this income over the last few years (IRS 1040 Schedule C, Line 13 OR Schedule E, Line 18 OR Form 1065, Line 16a OR Form 1120S, Line 14 OR Form 1120, Line 20)",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "businessMortgagesOrNotesPayableInLessThanOneYearHistory": {
            "type": "array",
            "description": "A timeseries of the amounts of notes payable in less than 1 year associated with this income over the last few years (Form 1065, Schedule L, Line 16, Column D OR Form 1120S, Schedule L, Line 17, Col D OR Form 1120, Schedule L, Line 17, Column D)",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "businessNonDeductibleTravelAndEntertainmentExpensesHistory": {
            "type": "array",
            "description": "A timeseries of the non-deductible travel and entertainment expenses associated with this income over the last few years (IRS 1040 Schedule C, Line 24b OR Form 1065, Schedule M1, Line 4b OR Form 1120S, Schedule M1, Line 3b OR Form 1120, Schedule M1, Line 5c)",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "businessNonRecurringOtherIncomeOrLossHistory": {
            "type": "array",
            "description": "A timeseries of the non-recurring profit/loss associated with this income over the last few years (IRS 1040 Schedule C, Line 6 OR Form 1065, Lines 5-7 OR Form 1120S, Lines 4 and 5 OR Form 1120, Line 10)",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "capitalGainsAsset": {
            "writeOnly": true,
            "description": "A reference to the asset on the application that provides the capital gains income",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Asset"
              }
            ]
          },
          "capitalGainsAssetId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "capitalGainsAssetRef": {
            "type": "string",
            "nullable": true
          },
          "cCorpDividendsPaidToBorrower": {
            "type": "array",
            "description": "A timeseries of the borrower's received dividends associated with this income over the last few years",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "cCorpNonrecurringCapitalGainsOrLosses": {
            "type": "array",
            "description": "A timeseries of the corporation's non-recurring capital gains or losses associated with this income over the last few years (Form 1120, Lines 8 and 9)",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "cCorpTaxableIncomeHistory": {
            "type": "array",
            "description": "A timeseries of the corporation's taxable income associated with this income over the last few years (Form 1120, Line 30)",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "cCorpTotalTaxHistory": {
            "type": "array",
            "description": "A timeseries of the corporation's paid taxes associated with this income over the last few years (Form 1120, Line 31)",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "computedFields": {
            "type": "object",
            "x-ms-dynamic-schema": {
              "operationId": "GetDynamicSchema",
              "parameters": {
                "entityType": "Income",
                "fieldType": "ComputedField",
                "processVersionId": {
                  "parameterResponseReference": "processVersionId"
                }
              }
            },
            "readOnly": true,
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "contractorPayerName": {
            "type": "string",
            "description": "The party providing the borrower with this income as a contractor",
            "nullable": true
          },
          "customFields": {
            "type": "object",
            "x-ms-dynamic-schema": {
              "operationId": "GetDynamicSchema",
              "parameters": {
                "entityType": "Income",
                "fieldType": "CustomField",
                "processVersionId": {
                  "parameterResponseReference": "processVersionId"
                }
              }
            },
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "disabilityConvertedLongTermPaymentAmount": {
            "description": "The amount and frequency that will be received in disability benefits after the conversion to the long term amount",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "disabilityEndDateIndicator": {
            "type": "boolean",
            "description": "Indicates whether these disability benefits payments ever cease",
            "nullable": true
          },
          "disabilityPaymentTerminationDate": {
            "type": "string",
            "description": "The date of the last disability benefit payment",
            "format": "date",
            "nullable": true
          },
          "disabilityPaymentType": {
            "description": "Whether the disability payments are long term or short term benefits",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DisabilityPaymentType"
              }
            ]
          },
          "disabilityTypeConversionDate": {
            "type": "string",
            "description": "If the disability benefits are currently short term, and will continue long term but at a reduced rate, this is the date that the conversion takes place. Specifically, this is the first date of the payment being received at the reduced rate.",
            "format": "date",
            "nullable": true
          },
          "documentedBaseIncomeExcludingGrossUp": {
            "description": "Qualified base income (excluding gross-up)",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "documentedCurrentIncome": {
            "description": "Current income that has supporting documentation",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "documentedIncomeHistory": {
            "type": "array",
            "description": "Income history that has supporting documentation",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "employer": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Employer"
              }
            ]
          },
          "employmentBaseIncomeHistory": {
            "type": "array",
            "description": "A timeseries of the base pay amounts and frequencies associated with this income over the last few years",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "employmentBonusIncomeHistory": {
            "type": "array",
            "description": "A timeseries of the bonus amounts and frequencies associated with this income over the last few years",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "employmentCommissionIncomeHistory": {
            "type": "array",
            "description": "A timeseries of the commission amounts and frequencies associated with this income over the last few years",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "employmentOtherIncomeHistory": {
            "type": "array",
            "description": "A timeseries of the other pay amounts and frequencies associated with this income over the last few years",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "employmentOvertimeIncomeHistory": {
            "type": "array",
            "description": "A timeseries of the overtime amounts and frequencies associated with this income over the last few years",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "employmentRestrictedStockIncomeHistory": {
            "type": "array",
            "description": "A timeseries of the restricted stock amounts and frequencies associated with this income over the last few years",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "employmentTipIncomeHistory": {
            "type": "array",
            "description": "A timeseries of the tip earnings amounts and frequencies associated with this income over the last few years",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "facts": {
            "type": "object",
            "x-ms-dynamic-schema": {
              "operationId": "GetDynamicSchema",
              "parameters": {
                "entityType": "Income",
                "fieldType": "Fact",
                "processVersionId": {
                  "parameterResponseReference": "processVersionId"
                }
              }
            },
            "readOnly": true,
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "fairRentalDays": {
            "type": "integer",
            "description": "The number of days in the previous year that the property was occupied and rented. (IRS 1040 Schedule E, Line 2",
            "nullable": true
          },
          "foreignIncomeIndicator": {
            "type": "boolean",
            "description": "If true, indicates that this income comes from a foreign source",
            "nullable": true
          },
          "fosterCareHistoryNumberOfMonths": {
            "type": "integer",
            "description": "Number of months for which foster care income has been received",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "incomeType": {
            "description": "The type of income, such as employment, rental, etc",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeType"
              }
            ]
          },
          "incomeVerifications": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Verification"
            }
          },
          "interestAndDividendsAsset": {
            "writeOnly": true,
            "description": "A reference to the asset on the application that provides the interest or dividend income",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Asset"
              }
            ]
          },
          "interestAndDividendsAssetId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "interestAndDividendsAssetRef": {
            "type": "string",
            "nullable": true
          },
          "interestAndDividendsExpectedFutureIncome": {
            "description": "The amount and frequency of income that is expected to be received in interest/dividends in future years",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "militaryBasePayHistory": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "militaryClothesAllowanceHistory": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "militaryCombatPayHistory": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "militaryEntitlementsEstimateAmount": {
            "description": "Entitlements",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "militaryFlightPayHistory": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "militaryHazardPayHistory": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "militaryOverseasPayHistory": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "militaryPropPayHistory": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "militaryQuartersAllowanceHistory": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "militaryRationsAllowanceHistory": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "militaryVariableHousingAllowanceHistory": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "mortgageCreditCertificatePercentageOfInterest": {
            "type": "number",
            "description": "The percentage of the interest that the mortgage credit certificate will cover",
            "format": "decimal",
            "nullable": true
          },
          "mortgageDifferentialPaymentDurationMonths": {
            "type": "integer",
            "description": "The number of months the mortgage differential payments will be provided for",
            "nullable": true
          },
          "mortgageDifferentialPaymentSource": {
            "description": "The employer providing the mortgage differential payment",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Employer"
              }
            ]
          },
          "netRentalRealEstateHistory": {
            "type": "array",
            "description": "A timeseries of the net rental income or loss amount - from both real estate and other sources - associated with this income over the last few years",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "noteDurationMonths": {
            "type": "integer",
            "description": "The number of months over which the note will be paid",
            "nullable": true
          },
          "noteFirstInstallmentDate": {
            "type": "string",
            "description": "The date that the first payment under the note was made",
            "format": "date",
            "nullable": true
          },
          "notePaymentEndDate": {
            "type": "string",
            "description": "The date on which the final payment under the note will be made",
            "format": "date",
            "nullable": true
          },
          "notePaymentEndDateIndicator": {
            "type": "boolean",
            "description": "Indicates whether payments under the note ever cease",
            "nullable": true
          },
          "noteTotalAmountDue": {
            "type": "number",
            "description": "The total amount owned to the borrower per the note",
            "format": "decimal",
            "nullable": true
          },
          "occupancyRate": {
            "type": "number",
            "description": "The percent of the year the linked property was occupied",
            "format": "decimal",
            "nullable": true
          },
          "otherIncomeType": {
            "type": "string",
            "description": "Further description of the income type if not in the list of income types",
            "nullable": true
          },
          "otherNetIncomeOrLossHistory": {
            "type": "array",
            "description": "A timeseries of other net income or loss associated with this income over the last few years.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "ownershipPercentage": {
            "type": "number",
            "description": "What percent of the  business is owned by the borrower",
            "format": "decimal",
            "nullable": true
          },
          "partnershipGuaranteedPaymentsToPartnerHistory": {
            "type": "array",
            "description": "A timeseries of the guaranteed payments to partner amount associated with this income over the last few years (Form 1065, Line 4c)",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "partnershipIncomeOrLossFromOtherPartnershipsHistory": {
            "type": "array",
            "description": "A timeseries of the income or loss from other partnerships associated with this income over the last few years",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "partnershipNetRentalRealEstateOtherNetIncomeOrLossHistory": {
            "type": "array",
            "description": "A timeseries of the partnership net rental income or loss amount - from both real estate and other sources - associated with this income over the last few years (Form 1065, Lines 2 and 3)",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "partnershipOrdinaryIncomeOrLossHistory": {
            "type": "array",
            "description": "A timeseries of the partnership income or loss amount associated with this income over the last few years (Form 1065, Line 1)",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "payType": {
            "description": "Pay type",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomePayType"
              }
            ]
          },
          "publicAssistanceEndDate": {
            "type": "string",
            "description": "The date of the final payment of the public assistance",
            "format": "date",
            "nullable": true
          },
          "publicAssistanceEndDateIndicator": {
            "type": "boolean",
            "description": "Indicates whether the public assistance income will ever cease",
            "nullable": true
          },
          "qualifiedBaseIncomeExcludingGrossUp": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "qualifiedEmploymentBaseIncome": {
            "description": "Qualified employment base",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "qualifiedEmploymentBonusIncome": {
            "description": "Qualified employment bonus",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "qualifiedEmploymentCommissionIncome": {
            "description": "Qualified employment commission",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "qualifiedEmploymentOtherIncome": {
            "description": "Qualified employment other",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "qualifiedEmploymentOvertimeIncome": {
            "description": "Qualified employment overtime",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "qualifiedEmploymentRestrictedStockIncome": {
            "description": "Qualified employment restricted stock income",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "qualifiedEmploymentTipIncome": {
            "description": "Qualified employment tips",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "qualifiedGrossIncome": {
            "description": "Qualified non-employment gross income",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "qualifiedIncomeIncludesGrossUpOfNonTaxableIncomeIndicator": {
            "type": "boolean",
            "description": "Does qualified income include a gross up of non-taxable income?",
            "nullable": true
          },
          "qualifiedMilitaryClothesAllowance": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "qualifiedMilitaryCombatPay": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "qualifiedMilitaryEntitlementsEstimateAmount": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "qualifiedMilitaryFlightPay": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "qualifiedMilitaryHazardPay": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "qualifiedMilitaryOverseasPay": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "qualifiedMilitaryPropPay": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "qualifiedMilitaryQuartersAllowance": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "qualifiedMilitaryRationsAllowance": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "qualifiedMilitaryVariableHousingAllowance": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "qualifiedMonthlyIncome": {
            "type": "number",
            "description": "The final, qualified monthly number used to calculate final DTI. Today, this field is manually populated by underwriters. Not used for employment, self-employment, military, or rental incomes.",
            "format": "decimal",
            "nullable": true
          },
          "qualifiedRentalNetIncome": {
            "description": "Qualified net rental income",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "qualifiedSelfEmploymentGrossIncome": {
            "description": "Qualified self-employment income",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          },
          "rentalGrossIncomeHistory": {
            "type": "array",
            "description": "A timeseries of the gross rental income associated with this income over the last few years",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "rentalNetIncomeHistory": {
            "type": "array",
            "description": "A timeseries of the net rental income associated with this income over the last few years",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "rentalProperty": {
            "writeOnly": true,
            "description": "The owned property being rented out to earn this rental income",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Property"
              }
            ]
          },
          "rentalPropertyId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "rentalPropertyRef": {
            "type": "string",
            "nullable": true
          },
          "retirementAsset": {
            "writeOnly": true,
            "description": "A reference to the asset on the application that provides the retirement income",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Asset"
              }
            ]
          },
          "retirementAssetId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "retirementAssetRef": {
            "type": "string",
            "nullable": true
          },
          "royaltyPaymentEndDate": {
            "type": "string",
            "description": "The date of the final royalty payment",
            "format": "date",
            "nullable": true
          },
          "royaltyPaymentEndDateIndicator": {
            "type": "boolean",
            "description": "Indicates whether payments under the royalty agreement ever cease",
            "nullable": true
          },
          "royaltyRelatedDepreciationHistory": {
            "type": "array",
            "description": "A timeseries of the depreciation associated with this royalty income over the last few years (IRS 1040 Schedule E, Line 18)",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "royaltyRelatedExpenseHistory": {
            "type": "array",
            "description": "A timeseries of the expenses associated with this royalty income over the last few years (IRS 1040 Schedule E, Line 20)",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "royaltySource": {
            "type": "string",
            "description": "The payer of the royalty income",
            "nullable": true
          },
          "sCorpNetRentalRealEstateOtherNetIncomeOrLossHistory": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "sCorpOrdinaryIncomeOrLossHistory": {
            "type": "array",
            "description": "A timeseries of the ordinary profit/loss associated with this income over the last few years (Form 1120S, Line 6)",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "seasonalIncomeIndicator": {
            "type": "boolean",
            "description": "If true, indicates that this income comes from a seasonal source",
            "nullable": true
          },
          "selfEmploymentBusiness": {
            "writeOnly": true,
            "description": "The borrower-owned business that provides this self employment income",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BorrowerBusiness"
              }
            ]
          },
          "selfEmploymentBusinessId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "selfEmploymentBusinessRef": {
            "type": "string",
            "nullable": true
          },
          "selfEmploymentEstimatedGrossIncome": {
            "description": "Estimated self-employment income",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "selfEmploymentGrossIncomeHistory": {
            "type": "array",
            "description": "Gross self-employment income",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "socialSecurityBenefitType": {
            "description": "Type of social security program providing the income",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SocialSecurityBenefitType"
              }
            ]
          },
          "socialSecurityOwnAccountIndicator": {
            "type": "boolean",
            "description": "Indicates whether the borrower is receiving benefits due to their own work history, or somebody else's (e.g. a deceased spouse)",
            "nullable": true
          },
          "soleProprietorshipNetProfitOrLossHistory": {
            "type": "array",
            "description": "A timeseries of the net profit/loss associated with this income over the last few years (IRS 1040 Schedule C, Line 31)",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "soleProprietorshipNonDeductibleBusinessUseOfHomeHistory": {
            "type": "array",
            "description": "A timeseries of the business use of home amount associated with this income over the last few years (IRS 1040 Schedule C, Line 6)",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeValueWithYear"
            }
          },
          "statedEmploymentBaseIncome": {
            "description": "Stated employment base",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "statedEmploymentBonusIncome": {
            "description": "Stated employment bonus",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "statedEmploymentCommissionIncome": {
            "description": "Stated employment commission",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "statedEmploymentOtherIncome": {
            "description": "Stated employment other",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "statedEmploymentOvertimeIncome": {
            "description": "Stated employment overtime",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "statedEmploymentRestrictedStockIncome": {
            "description": "Stated employment restricted stock income",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "statedEmploymentTipIncome": {
            "description": "Stated employment tips",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "statedGrossIncome": {
            "description": "Stated non-employment gross income",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "statedGrossPreviousEmploymentIncome": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "statedMilitaryClothesAllowance": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "statedMilitaryCombatPay": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "statedMilitaryEntitlementsEstimateAmount": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "statedMilitaryFlightPay": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "statedMilitaryHazardPay": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "statedMilitaryOverseasPay": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "statedMilitaryPropPay": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "statedMilitaryQuartersAllowance": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "statedMilitaryRationsAllowance": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "statedMilitaryVariableHousingAllowance": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "statedPreviousRentalIncome": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "statedRentalNetIncome": {
            "readOnly": true,
            "description": "Stated net rental income",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "statedSelfEmploymentGrossIncome": {
            "description": "Stated self-employment income",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeValue"
              }
            ]
          },
          "taxableIndicator": {
            "type": "boolean",
            "description": "If true, indicates that this income is taxable",
            "nullable": true
          },
          "temporaryLeaveReturnToWorkDate": {
            "type": "string",
            "description": "The date on which the borrower will end temporary leave and return to work",
            "format": "date",
            "nullable": true
          },
          "temporaryLeaveStartDate": {
            "type": "string",
            "description": "The date on which the borrower began temporary leave and left work",
            "format": "date",
            "nullable": true
          },
          "tenantContactPhoneNumber": {
            "type": "string",
            "description": "The single best phone number to contact the tenants of the rental property",
            "nullable": true
          },
          "tenantFullNames": {
            "type": "array",
            "description": "A list of the current tenant's full names",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "totalCalculatedQualifiedMonthlyIncome": {
            "type": "number",
            "readOnly": true,
            "description": "Sum of applicable qualified monthly income",
            "format": "decimal",
            "nullable": true
          },
          "trustIncomeEndDate": {
            "type": "string",
            "description": "The date of the final trust payment",
            "format": "date",
            "nullable": true
          },
          "trustIncomeEndDateIndicator": {
            "type": "boolean",
            "description": "Indicates whether payments from this trust ever cease",
            "nullable": true
          },
          "trustName": {
            "type": "string",
            "description": "The legal name of the trust making income distributions",
            "nullable": true
          },
          "unemploymentAssociatedWithSeasonalIncomeIndicator": {
            "type": "boolean",
            "description": "Describes whether this unemployment income is seasonal. In most cases, unemployment benefits must be associated with seasonal income in order to be used for qualifying",
            "nullable": true
          },
          "unemploymentSeasonalIncome": {
            "writeOnly": true,
            "description": "The seasonal income the borrower has that justifies a regular and recurring receipt of unemployment benefits (e.g. a seasonal job where they have income on-season and receive unemployment benefits off-season)",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Income"
              }
            ]
          },
          "unemploymentSeasonalIncomeId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "unemploymentSeasonalIncomeRef": {
            "type": "string",
            "nullable": true
          },
          "vaBenefitType": {
            "description": "Describes the program under which the VA benefits are provided. In some cases, certain types of benefits cannot be used as qualifying income.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VABenefitType"
              }
            ]
          }
        }
      },
      "IncomeAmountType": {
        "type": "string",
        "example": "Weekly",
        "x-enumNames": [
          "Weekly",
          "BiWeekly",
          "SemiMonthly",
          "Monthly",
          "Quarterly",
          "SemiYearly",
          "Annual",
          "AsOf",
          "Hourly"
        ],
        "enum": [
          "Weekly",
          "BiWeekly",
          "SemiMonthly",
          "Monthly",
          "Quarterly",
          "SemiYearly",
          "Annual",
          "AsOf",
          "Hourly"
        ]
      },
      "IncomePayType": {
        "type": "string",
        "example": "Salaried",
        "x-enumNames": [
          "Salaried",
          "Hourly"
        ],
        "enum": [
          "Salaried",
          "Hourly"
        ]
      },
      "IncomeType": {
        "type": "string",
        "example": "Employment",
        "x-enumNames": [
          "Employment",
          "MilitaryEmployment",
          "SelfEmployment",
          "IndependentContractor",
          "Rental",
          "AccessoryUnit",
          "Boarder",
          "SocialSecurity",
          "Pension",
          "CapitalGains",
          "DividendsInterest",
          "Retirement",
          "DeferredCompensation",
          "AutomobileAllowance",
          "HousingAllowance",
          "Disability",
          "PublicAssistance",
          "UnemploymentBenefits",
          "VABenefitsNonEducational",
          "Alimony",
          "ChildSupport",
          "SeparateMaintenance",
          "FosterCare",
          "HousingChoiceVoucherProgram",
          "MortgageCreditCertificate",
          "MortgageDifferential",
          "NotesReceivableInstallment",
          "Royalties",
          "TemporaryLeave",
          "Trust",
          "Other",
          "AssetBasedIncome"
        ],
        "enum": [
          "Employment",
          "MilitaryEmployment",
          "SelfEmployment",
          "IndependentContractor",
          "Rental",
          "AccessoryUnit",
          "Boarder",
          "SocialSecurity",
          "Pension",
          "CapitalGains",
          "DividendsInterest",
          "Retirement",
          "DeferredCompensation",
          "AutomobileAllowance",
          "HousingAllowance",
          "Disability",
          "PublicAssistance",
          "UnemploymentBenefits",
          "VABenefitsNonEducational",
          "Alimony",
          "ChildSupport",
          "SeparateMaintenance",
          "FosterCare",
          "HousingChoiceVoucherProgram",
          "MortgageCreditCertificate",
          "MortgageDifferential",
          "NotesReceivableInstallment",
          "Royalties",
          "TemporaryLeave",
          "Trust",
          "Other",
          "AssetBasedIncome"
        ]
      },
      "IncomeValue": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "amount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "amountType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeAmountType"
              }
            ]
          },
          "asOfDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "hoursPerWeek": {
            "type": "integer",
            "description": "Hours Per Week",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          }
        }
      },
      "IncomeValueWithYear": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "amount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "amountType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncomeAmountType"
              }
            ]
          },
          "asOfDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "hoursPerWeek": {
            "type": "integer",
            "description": "Hours Per Week",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          },
          "year": {
            "type": "integer",
            "nullable": true
          }
        }
      },
      "IncomeVerificationConsentType": {
        "type": "string",
        "example": "Verbal",
        "x-enumNames": [
          "Verbal",
          "Written",
          "Electronic"
        ],
        "enum": [
          "Verbal",
          "Written",
          "Electronic"
        ]
      },
      "IndianaLicenseType": {
        "type": "string",
        "example": "SecretaryOfState",
        "x-enumNames": [
          "SecretaryOfState",
          "DepartmentOfFinancialInstitutions"
        ],
        "enum": [
          "SecretaryOfState",
          "DepartmentOfFinancialInstitutions"
        ]
      },
      "InitialEscrowPaymentType": {
        "type": "string",
        "example": "PropertyTax",
        "x-enumNames": [
          "PropertyTax",
          "HomeownersInsurancePremium",
          "FloodInsurancePremium",
          "MortgageInsurancePremium",
          "Other",
          "USDARuralDevelopmentGuaranteeFee",
          "VAFundingFee",
          "StateTax",
          "CityTax",
          "WaterSewerAssessment",
          "SupplementalPropertyInsurance",
          "EarthquakeInsurance",
          "WindAndHailInsurance",
          "VillageTax",
          "SchoolTax",
          "TownTax",
          "FireInsurance",
          "VolcanoInsurance",
          "HurricaneInsurance"
        ],
        "enum": [
          "PropertyTax",
          "HomeownersInsurancePremium",
          "FloodInsurancePremium",
          "MortgageInsurancePremium",
          "Other",
          "USDARuralDevelopmentGuaranteeFee",
          "VAFundingFee",
          "StateTax",
          "CityTax",
          "WaterSewerAssessment",
          "SupplementalPropertyInsurance",
          "EarthquakeInsurance",
          "WindAndHailInsurance",
          "VillageTax",
          "SchoolTax",
          "TownTax",
          "FireInsurance",
          "VolcanoInsurance",
          "HurricaneInsurance"
        ]
      },
      "InputRequiredCondition": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "entityId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "entityType": {
            "type": "string",
            "readOnly": true
          },
          "path": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "InstructionsObjectiveTaskChecklistEntry": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "isCompleted": {
            "type": "boolean",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "InsuranceDetails": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "homeOwnersInsuranceOrdered": {
            "type": "string",
            "description": "Home insurance ordered",
            "format": "date",
            "nullable": true
          },
          "homeOwnersInsuranceReceived": {
            "type": "string",
            "description": "Home insurance received",
            "format": "date",
            "nullable": true
          },
          "insuranceContactEmailAddress": {
            "type": "string",
            "description": "The best email address to reach the insurance provider",
            "nullable": true
          },
          "insuranceContactFaxNumber": {
            "type": "string",
            "description": "The best fax number to reach the insurance provider",
            "nullable": true
          },
          "insuranceContactPhoneNumber": {
            "type": "string",
            "description": "The best phone number to reach the insurance provider",
            "nullable": true
          },
          "insuranceDwellingCoverageAmount": {
            "type": "number",
            "description": "If applicable, the amount of coverage that the insurance policy provides for the primary structure of the property (on homeowner's insurance, this would be coverage A)",
            "format": "decimal",
            "nullable": true
          },
          "insurancePolicyEffectiveDate": {
            "type": "string",
            "description": "The date that the insurance policy becomes effective and coverage begins",
            "format": "date",
            "nullable": true
          },
          "insurancePolicyExpirationDate": {
            "type": "string",
            "description": "The date that the insurance policy expires and coverage stops or needs to be renewed",
            "format": "date",
            "nullable": true
          },
          "insurancePolicyNextPremiumDueDate": {
            "type": "string",
            "description": "The date at which the insurance policy's premium is next due",
            "format": "date",
            "nullable": true
          },
          "insurancePolicyNumber": {
            "type": "string",
            "description": "The carrier-assigned policy number on the insurance policy",
            "nullable": true
          },
          "insurancePolicyPremiumAmount": {
            "type": "number",
            "description": "The insurance policy's premium amount",
            "format": "decimal",
            "nullable": true
          },
          "insurancePolicyPremiumPaymentPeriodMonths": {
            "type": "integer",
            "description": "How many months each premium payment covers",
            "nullable": true
          },
          "insuranceProvider": {
            "type": "string",
            "description": "The licensed agency providing the insurance",
            "nullable": true
          },
          "insuranceReplacementCostEstimateAmount": {
            "type": "number",
            "description": "If applicable, the insurance provider's estimate of the replacement cost of the home",
            "format": "decimal",
            "nullable": true
          }
        }
      },
      "IntegrationCallMetadata": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "provider": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "request": {
            "readOnly": true,
            "$ref": "#/components/schemas/IntegrationMessageMetadata"
          },
          "requestDate": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "response": {
            "readOnly": true,
            "$ref": "#/components/schemas/IntegrationMessageMetadata"
          },
          "statusDescription": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "type": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          }
        }
      },
      "IntegrationCallWebhook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "callId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "callType": {
            "type": "string",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "integrationProvider": {
            "type": "string",
            "readOnly": true
          },
          "integrationType": {
            "readOnly": true,
            "$ref": "#/components/schemas/IntegrationType"
          },
          "loanChannel": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanChannel"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "retries": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "sourceType": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSourceType"
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSubscriptionType"
          },
          "userId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "version": {
            "readOnly": true,
            "$ref": "#/components/schemas/ApiVersion"
          }
        }
      },
      "IntegrationMessageMetadata": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "contentLength": {
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "contentType": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          }
        }
      },
      "IntegrationType": {
        "type": "string",
        "example": "AUS",
        "x-enumNames": [
          "AUS",
          "DocEngine",
          "IncomeVerification",
          "Pricing",
          "Flood",
          "Appraisal",
          "Compliance",
          "Pmi",
          "Credit",
          "Fraud",
          "Fees"
        ],
        "enum": [
          "AUS",
          "DocEngine",
          "IncomeVerification",
          "Pricing",
          "Flood",
          "Appraisal",
          "Compliance",
          "Pmi",
          "Credit",
          "Fraud",
          "Fees"
        ]
      },
      "InterestRateBuydownFundingSource": {
        "type": "string",
        "example": "Borrower",
        "x-enumNames": [
          "Borrower",
          "Builder",
          "Employer",
          "Lender",
          "Seller",
          "Other"
        ],
        "enum": [
          "Borrower",
          "Builder",
          "Employer",
          "Lender",
          "Seller",
          "Other"
        ]
      },
      "InterestRateBuydownPlan": {
        "type": "string",
        "example": "ThreeTwoOne",
        "x-enumNames": [
          "ThreeTwoOne",
          "TwoOne",
          "OneOne",
          "One"
        ],
        "enum": [
          "ThreeTwoOne",
          "TwoOne",
          "OneOne",
          "One"
        ]
      },
      "InvestorFee": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "feeAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "feeType": {
            "type": "string",
            "nullable": true
          },
          "investorFeeType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvestorFeeType"
              }
            ]
          }
        }
      },
      "InvestorFeeType": {
        "type": "string",
        "example": "Other",
        "x-enumNames": [
          "Other",
          "AdministrationFee",
          "DelayedPurchaseFee",
          "FloodCertFee",
          "TaxServiceFee",
          "UnderwritingFee"
        ],
        "enum": [
          "Other",
          "AdministrationFee",
          "DelayedPurchaseFee",
          "FloodCertFee",
          "TaxServiceFee",
          "UnderwritingFee"
        ]
      },
      "IowaLicenseType": {
        "type": "string",
        "example": "MortgageBankerLicense",
        "x-enumNames": [
          "MortgageBankerLicense",
          "MasterLoanCompanyRegistration"
        ],
        "enum": [
          "MortgageBankerLicense",
          "MasterLoanCompanyRegistration"
        ]
      },
      "JobName": {
        "type": "string",
        "example": "CreditPull",
        "x-enumNames": [
          "CreditPull",
          "PricingRequestRateLockExtension",
          "PricingGetPricingActions",
          "PricingRequestReprice",
          "PricingApproveLock",
          "PricingApproveExtension",
          "PricingGetQuote",
          "PricingSelectQuote",
          "PricingRequestRateLock",
          "AusRequest",
          "FeesPull"
        ],
        "enum": [
          "CreditPull",
          "PricingRequestRateLockExtension",
          "PricingGetPricingActions",
          "PricingRequestReprice",
          "PricingApproveLock",
          "PricingApproveExtension",
          "PricingGetQuote",
          "PricingSelectQuote",
          "PricingRequestRateLock",
          "AusRequest",
          "FeesPull"
        ]
      },
      "JobStatus": {
        "type": "string",
        "example": "NotStarted",
        "x-enumNames": [
          "NotStarted",
          "InProgress",
          "Completed",
          "Failed",
          "TimedOut"
        ],
        "enum": [
          "NotStarted",
          "InProgress",
          "Completed",
          "Failed",
          "TimedOut"
        ]
      },
      "JobStatusDetails": {
        "type": "object",
        "description": "Information about the status of an asynchronous job request.\nThe \"details\" field may be an arbitrary type",
        "example": {
          "details": "<any>",
          "errors": [
            "string"
          ],
          "jobStatus": "NotStarted"
        },
        "additionalProperties": false,
        "properties": {
          "details": {
            "readOnly": true,
            "nullable": true
          },
          "errors": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "jobStatus": {
            "readOnly": true,
            "$ref": "#/components/schemas/JobStatus"
          }
        }
      },
      "JobStatusUpdateWebhook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "jobId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "jobName": {
            "readOnly": true,
            "$ref": "#/components/schemas/JobName"
          },
          "jobStatus": {
            "readOnly": true,
            "$ref": "#/components/schemas/JobStatus"
          },
          "loanChannel": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanChannel"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "retries": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "sourceType": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSourceType"
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSubscriptionType"
          },
          "userId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "version": {
            "readOnly": true,
            "$ref": "#/components/schemas/ApiVersion"
          }
        }
      },
      "KentuckyLicenseType": {
        "type": "string",
        "example": "MortgageBrokerLicense",
        "x-enumNames": [
          "MortgageBrokerLicense",
          "MortgageCompanyLicense"
        ],
        "enum": [
          "MortgageBrokerLicense",
          "MortgageCompanyLicense"
        ]
      },
      "KrollRating": {
        "type": "string",
        "example": "AAA",
        "x-enumNames": [
          "AAA",
          "AA",
          "A",
          "BBB",
          "BB",
          "B",
          "CCC",
          "CC",
          "D",
          "R"
        ],
        "enum": [
          "AAA",
          "AA",
          "A",
          "BBB",
          "BB",
          "B",
          "CCC",
          "CC",
          "D",
          "R"
        ]
      },
      "LanguagePreferenceType": {
        "type": "string",
        "example": "English",
        "x-enumNames": [
          "English",
          "Chinese",
          "Korean",
          "Spanish",
          "Tagalog",
          "Vietnamese",
          "Other",
          "RefuseToAnswer"
        ],
        "enum": [
          "English",
          "Chinese",
          "Korean",
          "Spanish",
          "Tagalog",
          "Vietnamese",
          "Other",
          "RefuseToAnswer"
        ]
      },
      "LateChargeType": {
        "type": "string",
        "example": "NoLateCharges",
        "x-enumNames": [
          "NoLateCharges",
          "FlatDollarAmount",
          "PercentageOfTotalPayment",
          "PercentageOfNetPayment",
          "PercentOfPrincipalAndInterest",
          "PercentageOfDelinquentInterest",
          "PercentageOfPrincipalBalance"
        ],
        "enum": [
          "NoLateCharges",
          "FlatDollarAmount",
          "PercentageOfTotalPayment",
          "PercentageOfNetPayment",
          "PercentOfPrincipalAndInterest",
          "PercentageOfDelinquentInterest",
          "PercentageOfPrincipalBalance"
        ]
      },
      "Liability": {
        "type": "object",
        "description": "The liability model.",
        "example": {
          "liabilityType": "Mortgage",
          "monthlyPaymentAmount": 1587.35
        },
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "accountDateOpened": {
            "type": "string",
            "description": "The date the liability was originated",
            "format": "date",
            "nullable": true
          },
          "accountIdentifier": {
            "type": "string",
            "description": "Unique account identifier for the liability, often the last 4 digits of an account number of some sort",
            "nullable": true
          },
          "accountInDisputeIndicator": {
            "type": "boolean",
            "description": "Indicates if the borrower disputed this liability",
            "nullable": true
          },
          "accountReportedDate": {
            "type": "string",
            "description": "The date that the credit liability data was reported by the liability holder",
            "format": "date",
            "nullable": true
          },
          "accountStatus": {
            "description": "The status of the liability account as of the Account Status Date",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LiabilityAccountStatus"
              }
            ]
          },
          "additionHousingExpensesMonthlyPayment": {
            "type": "number",
            "description": "If the monthly mortgage payment does not include all housing expenses, this is the amount of housing expenses paid monthly outside of the monthly mortgage payment",
            "format": "decimal",
            "nullable": true
          },
          "alimonyPayeeName": {
            "type": "string",
            "description": "Who is getting paid the alimony",
            "nullable": true
          },
          "applicableMonthlyPayments": {
            "type": "number",
            "readOnly": true,
            "description": "Applicable monthly payments",
            "format": "decimal",
            "nullable": true
          },
          "assetCollateral": {
            "writeOnly": true,
            "description": "A reference to the asset on the application that collateralizes this liability",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Asset"
              }
            ]
          },
          "assetCollateralId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "assetCollateralRef": {
            "type": "string",
            "nullable": true
          },
          "associatedProperty": {
            "writeOnly": true,
            "description": "A reference to the property on the loan that this liability is a lien against",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Property"
              }
            ]
          },
          "associatedPropertyId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "associatedPropertyRef": {
            "type": "string",
            "nullable": true
          },
          "borrowers": {
            "type": "array",
            "writeOnly": true,
            "items": {
              "$ref": "#/components/schemas/Borrower"
            }
          },
          "borrowersIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "guid"
            }
          },
          "borrowersRefs": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "computedFields": {
            "type": "object",
            "x-ms-dynamic-schema": {
              "operationId": "GetDynamicSchema",
              "parameters": {
                "entityType": "Liability",
                "fieldType": "ComputedField",
                "processVersionId": {
                  "parameterResponseReference": "processVersionId"
                }
              }
            },
            "readOnly": true,
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "couldTakePrecedenceOverFirstMortgageIndicator": {
            "type": "boolean",
            "description": "Indicates that this is a liability that could get precedence in the event of default on the first mortgage. Typically for liens such as tax liens, PACE loans, etc",
            "nullable": true
          },
          "creditLiability120DaysLateCount": {
            "type": "integer",
            "readOnly": true,
            "description": "Number of times the liability account was reported 120 days late by the liability holder",
            "format": "int32",
            "nullable": true
          },
          "creditLiability30DaysLateCount": {
            "type": "integer",
            "readOnly": true,
            "description": "Number of times the liability account was reported 30 days late by the liability holder",
            "format": "int32",
            "nullable": true
          },
          "creditLiability60DaysLateCount": {
            "type": "integer",
            "readOnly": true,
            "description": "Number of times the liability account was reported 60 days late by the liability holder",
            "format": "int32",
            "nullable": true
          },
          "creditLiability90DaysLateCount": {
            "type": "integer",
            "readOnly": true,
            "description": "Number of times the liability account was reported 90 days late by the liability holder",
            "format": "int32",
            "nullable": true
          },
          "creditorAddress": {
            "description": "The address of the creditor",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ]
          },
          "creditorBusinessType": {
            "description": "The type of business of the liability holder",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CreditorBusinessType"
              }
            ]
          },
          "creditorEmailAddress": {
            "type": "string",
            "description": "The best email address to contact the creditor",
            "nullable": true
          },
          "creditorName": {
            "type": "string",
            "description": "The name of the party to whom the liability is owned. Often a financial institution",
            "nullable": true
          },
          "creditorPhoneNumber": {
            "type": "string",
            "description": "The best phone number to contact the creditor",
            "nullable": true
          },
          "creditReportRemarks": {
            "type": "array",
            "description": "Remarks about this liability from the credit report",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "customFields": {
            "type": "object",
            "x-ms-dynamic-schema": {
              "operationId": "GetDynamicSchema",
              "parameters": {
                "entityType": "Liability",
                "fieldType": "CustomField",
                "processVersionId": {
                  "parameterResponseReference": "processVersionId"
                }
              }
            },
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "dailyAccruedInterestAmount": {
            "type": "number",
            "description": "The amount of interest accrued daily on the liability. Used for liabilities being paid off at closing to help adjust payoff amount when closing date moves",
            "format": "decimal",
            "nullable": true
          },
          "exclusionIndicator": {
            "type": "boolean",
            "readOnly": true,
            "description": "Indicates that the liability should be excluded from the DTI calculation",
            "nullable": true
          },
          "exclusionReasonType": {
            "readOnly": true,
            "description": "Explains why the liability should be excluded from the DTI calculation",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LiabilityExclusionReasonType"
              }
            ]
          },
          "expenseDescription": {
            "type": "string",
            "description": "Free form text to describe the expense",
            "nullable": true
          },
          "facts": {
            "type": "object",
            "x-ms-dynamic-schema": {
              "operationId": "GetDynamicSchema",
              "parameters": {
                "entityType": "Liability",
                "fieldType": "Fact",
                "processVersionId": {
                  "parameterResponseReference": "processVersionId"
                }
              }
            },
            "readOnly": true,
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "highBalance": {
            "type": "number",
            "description": "The highest the balance of this liability has been in the previous year, as reflected on the credit report",
            "format": "decimal",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "isExpense": {
            "type": "boolean",
            "readOnly": true,
            "description": "Indiciates whether or not the liability type is classified as an expense",
            "nullable": true
          },
          "isQualifyingLiability": {
            "type": "boolean",
            "readOnly": true,
            "description": "Indicates if the liability is applicable for qualification, based on having a non-zero UPB, a non-zero monthly payment on a revolving credit line, or being a HELOC",
            "nullable": true
          },
          "lastActivityDate": {
            "type": "string",
            "description": "The date of last account activity, such as last charge or last payment",
            "format": "date",
            "nullable": true
          },
          "liabilityIntent": {
            "description": "Liability intent",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LiabilityIntent"
              }
            ]
          },
          "liabilitySubtype": {
            "description": "The subtype of liability",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LiabilitySubtype"
              }
            ]
          },
          "liabilityType": {
            "description": "The type of liability, such as a mortgage, installment loan, etc",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LiabilityType"
              }
            ]
          },
          "monthlyPaymentAmount": {
            "type": "number",
            "description": "The amount the borrower must pay monthly to service the liability",
            "format": "decimal",
            "nullable": true
          },
          "monthsReviewed": {
            "type": "integer",
            "description": "The number of months of account history reported by the liability holder",
            "nullable": true
          },
          "mortgageCurrentHolder": {
            "description": "The investor who currently holds the mortgage",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MortgageHolderType"
              }
            ]
          },
          "mortgageLienType": {
            "description": "The lien type of this existing mortgage",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LienPriorityType"
              }
            ]
          },
          "mortgageMonthlyPaymentIncludesAllHousingExpensesIndicator": {
            "type": "boolean",
            "description": "Indicates that the monthly mortgage payment as reflected in the monthly payment amount field (and likely in the credit report as well) includes escrowed housing expenses such as taxes and insurance. If not, those need to be added separately",
            "nullable": true
          },
          "mortgageType": {
            "description": "Type of mortgage (conventional, FHA, etc) for an existing liability",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MortgageType"
              }
            ]
          },
          "mostRecentLate120Date": {
            "readOnly": true,
            "description": "Most recent date that the account had a 120 da late payment",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/YearMonth"
              }
            ]
          },
          "mostRecentLate30Date": {
            "readOnly": true,
            "description": "Most recent date that the account had a 30 day late payment",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/YearMonth"
              }
            ]
          },
          "mostRecentLate60Date": {
            "readOnly": true,
            "description": "Most recent date that the account had a 60 day late payment",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/YearMonth"
              }
            ]
          },
          "mostRecentLate90Date": {
            "readOnly": true,
            "description": "Most recent date that the account had a 90 day late payment",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/YearMonth"
              }
            ]
          },
          "nextPaymentDueDate": {
            "type": "string",
            "description": "The date of the next payment due on the mortgage; only shows for mortgage liabilities",
            "format": "date",
            "nullable": true
          },
          "nonTraditionalCreditIndicator": {
            "type": "boolean",
            "description": "Indicates that this liability is being self reported to establish alternative credit history",
            "nullable": true
          },
          "nonTraditionalCreditReferenceIndividualFullName": {
            "type": "string",
            "description": "Full name of the person providing the reference with respect to the alternative credit - that it was extended and paid promptly",
            "nullable": true
          },
          "nonTraditionalCreditType": {
            "description": "The type of alternative credit - eg rent, phone bills, etc",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/NonTraditionalCreditType"
              }
            ]
          },
          "otherExpenseType": {
            "type": "string",
            "description": "Further description of the expense type if not in the list of expense types",
            "nullable": true
          },
          "otherLiabilityType": {
            "type": "string",
            "description": "Further description of the liability type if not in the list of liability types",
            "nullable": true
          },
          "pastDueAmount": {
            "type": "number",
            "description": "The amount that the borrower is currently past due",
            "format": "decimal",
            "nullable": true
          },
          "paymentStatus": {
            "description": "The payment status of the liability - whether it is current or delinquent, and if delinquent, how delinquent",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LiabilityPaymentStatus"
              }
            ]
          },
          "payoffAmount": {
            "type": "number",
            "description": "This is the amount required to pay off the liability to zero. This should not be used to fill in an amount that partially pays off the liability.",
            "format": "decimal",
            "nullable": true
          },
          "payoffBeforeClosingIndicator": {
            "type": "boolean",
            "readOnly": true,
            "description": "Indicates that this liability is to be paid off before closing, and therefore can be excluded from DTI. This should be used to subtract the unpaid balance from available assets.",
            "nullable": true
          },
          "planToPayoffIndicator": {
            "type": "boolean",
            "readOnly": true,
            "description": "Indicates that this liability is to be paid off at closing, and therefore can be excluded from DTI. This will add the unpaid balance to cash to close.",
            "nullable": true
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          },
          "remainingTermNumberOfMonths": {
            "type": "integer",
            "description": "The number of months until the liability must be repaid in full",
            "nullable": true
          },
          "reportedHistory": {
            "type": "array",
            "description": "The reported delinquency history of the liability as reflected on the credit report",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LiabilityReportValue"
            }
          },
          "revolvingCreditLimitAmount": {
            "type": "number",
            "description": "For certain liability types that are revolving credit lines, the maximum balance that the line can be drawn to",
            "format": "decimal",
            "nullable": true
          },
          "subordinateFinancingBelowMarketIndicator": {
            "type": "boolean",
            "description": "Indicates that the subordinate financing was previously offered at a below market rate, for example as a seller incentive",
            "nullable": true
          },
          "subordinateFinancingOriginallyUsedToPurchasePropertyIndicator": {
            "type": "boolean",
            "description": "Indicates that the subordinate financing was used to purchase the property. If the subordinate financing is being refinanced, this characterization determines whether the refinance is a cash-out or not",
            "nullable": true
          },
          "subordinateFinancingToSubjectMortgageIndicator": {
            "type": "boolean",
            "description": "Indicates that the liability is subordinate to the first mortgage on the home. If this is true, there are a bunch of other questions about the subordinate financing that need to be asked",
            "nullable": true
          },
          "subordinateFinancingType": {
            "description": "The type of subordinate financing - e.g. community seconds loan",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubordinateFinancingType"
              }
            ]
          },
          "subordinationAgreementMaximumLoanAmount": {
            "type": "number",
            "readOnly": true,
            "description": "The maximum loan amount per subordination agreement",
            "format": "decimal",
            "nullable": true
          },
          "timeframe": {
            "description": "Whether this liability is a past liability, current liability, or future (proposed) liability",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LiabilityTimeframe"
              }
            ]
          },
          "titleLienOrderStatus": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TitleLienOrderStatus"
              }
            ]
          },
          "unpaidBalanceAmount": {
            "type": "number",
            "description": "The total balance outstanding on the liability",
            "format": "decimal",
            "nullable": true
          }
        }
      },
      "LiabilityAccountStatus": {
        "type": "string",
        "example": "Closed",
        "x-enumNames": [
          "Closed",
          "Frozen",
          "Open",
          "Paid",
          "Refinanced",
          "Transferred"
        ],
        "enum": [
          "Closed",
          "Frozen",
          "Open",
          "Paid",
          "Refinanced",
          "Transferred"
        ]
      },
      "LiabilityExclusionReasonType": {
        "type": "string",
        "example": "AssociatedPropertySoldAndFinancingContingenciesClear",
        "x-enumNames": [
          "AssociatedPropertySoldAndFinancingContingenciesClear",
          "BusinessDebtPaidFromBusinessFunds",
          "AssignedToAnotherPartyByCourt",
          "PaidByOthers",
          "NonApplicantDebt",
          "FewerThanTenMonthsPaymentsLeft",
          "RentalPaymentForPreviousResidence",
          "DebtIsAssetCollateralized",
          "_30DayChargeAccount",
          "Utilities"
        ],
        "enum": [
          "AssociatedPropertySoldAndFinancingContingenciesClear",
          "BusinessDebtPaidFromBusinessFunds",
          "AssignedToAnotherPartyByCourt",
          "PaidByOthers",
          "NonApplicantDebt",
          "FewerThanTenMonthsPaymentsLeft",
          "RentalPaymentForPreviousResidence",
          "DebtIsAssetCollateralized",
          "_30DayChargeAccount",
          "Utilities"
        ]
      },
      "LiabilityIntent": {
        "type": "string",
        "example": "DoNothing",
        "x-enumNames": [
          "DoNothing",
          "PayAtClosing",
          "PayBeforeClosing",
          "Subordinate",
          "ExcludeLessThan10MonthsLeft",
          "ExcludePaidByOthers",
          "ExcludeAssignedToAnotherParty",
          "ExcludeAssociatedPropertySold",
          "ExcludeBusinessDebtPaidFromBusinessFunds",
          "ExcludeDebtIsAssetCollateralized",
          "ExcludeNonApplicantDebt",
          "ExcludeRentalPaymentFromPreviousResidence",
          "ExcludeOther",
          "Exclude30DayChargeAccount",
          "ExcludeUtilities"
        ],
        "enum": [
          "DoNothing",
          "PayAtClosing",
          "PayBeforeClosing",
          "Subordinate",
          "ExcludeLessThan10MonthsLeft",
          "ExcludePaidByOthers",
          "ExcludeAssignedToAnotherParty",
          "ExcludeAssociatedPropertySold",
          "ExcludeBusinessDebtPaidFromBusinessFunds",
          "ExcludeDebtIsAssetCollateralized",
          "ExcludeNonApplicantDebt",
          "ExcludeRentalPaymentFromPreviousResidence",
          "ExcludeOther",
          "Exclude30DayChargeAccount",
          "ExcludeUtilities"
        ]
      },
      "LiabilityPaymentStatus": {
        "type": "string",
        "example": "Current",
        "x-enumNames": [
          "Current",
          "Delinquent30",
          "Delinquent60",
          "Delinquent90",
          "Delinquent120",
          "Repossession",
          "Foreclosure",
          "WageEarnerPlan",
          "Collection",
          "ChargeOff",
          "BankruptcyOrWageEarnerPlan",
          "CollectionOrChargeOff",
          "ForeclosureOrRepossession",
          "TooNew"
        ],
        "enum": [
          "Current",
          "Delinquent30",
          "Delinquent60",
          "Delinquent90",
          "Delinquent120",
          "Repossession",
          "Foreclosure",
          "WageEarnerPlan",
          "Collection",
          "ChargeOff",
          "BankruptcyOrWageEarnerPlan",
          "CollectionOrChargeOff",
          "ForeclosureOrRepossession",
          "TooNew"
        ]
      },
      "LiabilityReportStatus": {
        "type": "string",
        "example": "Current",
        "x-enumNames": [
          "Current",
          "Delinquent30",
          "Delinquent60",
          "Delinquent90",
          "Delinquent120",
          "Collection",
          "VoluntarySurrender",
          "Repossession",
          "ChargeOff",
          "Foreclosure",
          "WageEarnerPlan",
          "NoActivity",
          "DelinquentOver120"
        ],
        "enum": [
          "Current",
          "Delinquent30",
          "Delinquent60",
          "Delinquent90",
          "Delinquent120",
          "Collection",
          "VoluntarySurrender",
          "Repossession",
          "ChargeOff",
          "Foreclosure",
          "WageEarnerPlan",
          "NoActivity",
          "DelinquentOver120"
        ]
      },
      "LiabilityReportValue": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          },
          "reportedStatus": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LiabilityReportStatus"
              }
            ]
          },
          "yearMonth": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/YearMonth"
              }
            ]
          }
        }
      },
      "LiabilitySubtype": {
        "type": "string",
        "example": "Agriculture",
        "x-enumNames": [
          "Agriculture",
          "Airplane",
          "ApplianceOrFurniture",
          "AttorneyFees",
          "AutoLease",
          "AutoLoanEquityTransfer",
          "Automobile",
          "AutoRefinance",
          "BiMonthlyMortgageTermsInYears",
          "Boat",
          "Business",
          "BusinessCreditCard",
          "Camper",
          "ChargeAccount",
          "CheckCreditOrLineOfCredit",
          "ChildSupport",
          "Collection",
          "CollectionAttorney",
          "Comaker",
          "CombinedCreditPlan",
          "CommercialCreditObligation",
          "CommercialLineOfCredit",
          "CommercialMortgage",
          "ConditionalSalesContract",
          "ConditionalSalesContractRefinance",
          "Consolidation",
          "ConstructionLoan",
          "ConventionalRealEstateMortgage",
          "CreditCard",
          "CreditLineSecured",
          "DebitCard",
          "DebtCounselingService",
          "DeferredStudentLoan",
          "DepositRelated",
          "Educational",
          "Employment",
          "FactoringCompanyAccount",
          "FamilySupport",
          "FarmersHomeAdministrationFHMA",
          "FederalConsolidatedLoan",
          "FHAComakerNotBorrower",
          "FHAHomeImprovement",
          "FHARealEstateMortgage",
          "FinanceStatement",
          "GovernmentBenefit",
          "GovernmentEmployeeAdvance",
          "GovernmentFeeForService",
          "GovernmentFine",
          "GovernmentGrant",
          "GovernmentMiscellaneousDebt",
          "GovernmentOverpayment",
          "GovernmentSecuredDirectLoan",
          "GovernmentSecuredGuaranteeLoan",
          "GovernmentUnsecuredDirectLoan",
          "GovernmentUnsecuredGuaranteeLoan",
          "HomeEquity",
          "HomeEquityLineOfCredit",
          "HomeImprovement",
          "HouseholdGoods",
          "HouseholdGoodsAndOtherCollateralAuto",
          "HouseholdGoodsSecured",
          "InstallmentLoan",
          "InstallmentSalesContract",
          "InsuranceClaims",
          "Lease",
          "LenderPlacedInsurance",
          "ManualMortgage",
          "ManufacturedHome",
          "MedicalDebt",
          "MobileHome",
          "MobilePhone",
          "Mortgage",
          "NoteLoan",
          "NoteLoanWithComaker",
          "Other",
          "PartiallySecured",
          "PersonalLoan",
          "RealEstateJuniorLiens",
          "RealEstateLoanEquityTransfer",
          "RealEstateMortgageWithoutOtherCollateral",
          "RealEstateSpecificTypeUnknown",
          "Recreational",
          "RecreationalVehicle",
          "Refinance",
          "RefundAnticipationLoan",
          "RentalAgreement",
          "ResidentialLoan",
          "ReturnedCheck",
          "RevolvingBusinessLines",
          "SecondMortgage",
          "Secured",
          "SecuredByCosigner",
          "SecuredCreditCard",
          "SecuredHomeImprovement",
          "SemiMonthlyMortgagePayment",
          "SinglePaymentLoan",
          "SpouseSupport",
          "SummaryOfAccountsWithSameStatus",
          "TimeSharedLoan",
          "Title1Loan",
          "UnknownLoanType",
          "Unsecured",
          "UtilityCompany",
          "VeteransAdministrationLoan",
          "VeteransAdministrationRealEstateMortgage"
        ],
        "enum": [
          "Agriculture",
          "Airplane",
          "ApplianceOrFurniture",
          "AttorneyFees",
          "AutoLease",
          "AutoLoanEquityTransfer",
          "Automobile",
          "AutoRefinance",
          "BiMonthlyMortgageTermsInYears",
          "Boat",
          "Business",
          "BusinessCreditCard",
          "Camper",
          "ChargeAccount",
          "CheckCreditOrLineOfCredit",
          "ChildSupport",
          "Collection",
          "CollectionAttorney",
          "Comaker",
          "CombinedCreditPlan",
          "CommercialCreditObligation",
          "CommercialLineOfCredit",
          "CommercialMortgage",
          "ConditionalSalesContract",
          "ConditionalSalesContractRefinance",
          "Consolidation",
          "ConstructionLoan",
          "ConventionalRealEstateMortgage",
          "CreditCard",
          "CreditLineSecured",
          "DebitCard",
          "DebtCounselingService",
          "DeferredStudentLoan",
          "DepositRelated",
          "Educational",
          "Employment",
          "FactoringCompanyAccount",
          "FamilySupport",
          "FarmersHomeAdministrationFHMA",
          "FederalConsolidatedLoan",
          "FHAComakerNotBorrower",
          "FHAHomeImprovement",
          "FHARealEstateMortgage",
          "FinanceStatement",
          "GovernmentBenefit",
          "GovernmentEmployeeAdvance",
          "GovernmentFeeForService",
          "GovernmentFine",
          "GovernmentGrant",
          "GovernmentMiscellaneousDebt",
          "GovernmentOverpayment",
          "GovernmentSecuredDirectLoan",
          "GovernmentSecuredGuaranteeLoan",
          "GovernmentUnsecuredDirectLoan",
          "GovernmentUnsecuredGuaranteeLoan",
          "HomeEquity",
          "HomeEquityLineOfCredit",
          "HomeImprovement",
          "HouseholdGoods",
          "HouseholdGoodsAndOtherCollateralAuto",
          "HouseholdGoodsSecured",
          "InstallmentLoan",
          "InstallmentSalesContract",
          "InsuranceClaims",
          "Lease",
          "LenderPlacedInsurance",
          "ManualMortgage",
          "ManufacturedHome",
          "MedicalDebt",
          "MobileHome",
          "MobilePhone",
          "Mortgage",
          "NoteLoan",
          "NoteLoanWithComaker",
          "Other",
          "PartiallySecured",
          "PersonalLoan",
          "RealEstateJuniorLiens",
          "RealEstateLoanEquityTransfer",
          "RealEstateMortgageWithoutOtherCollateral",
          "RealEstateSpecificTypeUnknown",
          "Recreational",
          "RecreationalVehicle",
          "Refinance",
          "RefundAnticipationLoan",
          "RentalAgreement",
          "ResidentialLoan",
          "ReturnedCheck",
          "RevolvingBusinessLines",
          "SecondMortgage",
          "Secured",
          "SecuredByCosigner",
          "SecuredCreditCard",
          "SecuredHomeImprovement",
          "SemiMonthlyMortgagePayment",
          "SinglePaymentLoan",
          "SpouseSupport",
          "SummaryOfAccountsWithSameStatus",
          "TimeSharedLoan",
          "Title1Loan",
          "UnknownLoanType",
          "Unsecured",
          "UtilityCompany",
          "VeteransAdministrationLoan",
          "VeteransAdministrationRealEstateMortgage"
        ]
      },
      "LiabilityTimeframe": {
        "type": "string",
        "example": "Past",
        "x-enumNames": [
          "Past",
          "Current",
          "Future"
        ],
        "enum": [
          "Past",
          "Current",
          "Future"
        ]
      },
      "LiabilityType": {
        "type": "string",
        "example": "CollectionsJudgmentsAndLiens",
        "x-enumNames": [
          "CollectionsJudgmentsAndLiens",
          "UnsecuredInstallment",
          "SecuredInstallment",
          "LeasePayment",
          "Open30DayChargeAccount",
          "RevolvingCreditLine",
          "Taxes",
          "TaxLien",
          "HELOC",
          "HomeEquityLoan",
          "PACELoan",
          "Mortgage",
          "OtherLiability",
          "Alimony",
          "ChildSupport",
          "JobRelatedExpenses",
          "SeparateMaintenanceExpense",
          "OtherExpense",
          "EquityBuyout",
          "DeferredStudentLoan"
        ],
        "enum": [
          "CollectionsJudgmentsAndLiens",
          "UnsecuredInstallment",
          "SecuredInstallment",
          "LeasePayment",
          "Open30DayChargeAccount",
          "RevolvingCreditLine",
          "Taxes",
          "TaxLien",
          "HELOC",
          "HomeEquityLoan",
          "PACELoan",
          "Mortgage",
          "OtherLiability",
          "Alimony",
          "ChildSupport",
          "JobRelatedExpenses",
          "SeparateMaintenanceExpense",
          "OtherExpense",
          "EquityBuyout",
          "DeferredStudentLoan"
        ]
      },
      "LienPriorityType": {
        "type": "string",
        "example": "FirstLien",
        "x-enumNames": [
          "FirstLien",
          "SecondLien",
          "ThirdLien",
          "FourthLien"
        ],
        "enum": [
          "FirstLien",
          "SecondLien",
          "ThirdLien",
          "FourthLien"
        ]
      },
      "Loan": {
        "type": "object",
        "description": "The loan model.",
        "example": {
          "loanType": "Mortgage",
          "loanPurpose": "Purchase",
          "loanAmount": 350000,
          "loanProduct": {
            "lienType": "FirstLien",
            "mortgageType": "Conventional",
            "loanAmortizationType": "FixedRateMortgage",
            "mortgageSizeType": "Conforming",
            "pricingEngineNoteRate": 2.25,
            "loanTermMonthsCount": 360
          },
          "borrowers": [
            {
              "firstName": "Alice",
              "lastName": "Freddie",
              "emailAddress": "alicetest@vestatech.io",
              "citizenshipType": "USCitizen",
              "intentToOccupy": true,
              "firstTimeHomebuyerIndicator": true
            }
          ],
          "subjectProperty": {
            "propertyType": "SingleFamily",
            "estimatedValueAmount": 500000,
            "numberOfUnits": 1,
            "address": {
              "line": "123 S Main St",
              "city": "Rochester",
              "state": "Michigan",
              "zipCode": "48307"
            }
          },
          "incomes": [
            {
              "incomeType": "Employment",
              "payType": "Salaried",
              "employer": {
                "employmentClassificationType": "Primary",
                "status": "Current",
                "name": "Google",
                "jobTitle": "Manager",
                "startDate": "2019-02-15",
                "numberOfMonthsInThisLineOfWork": 360
              },
              "statedEmploymentBaseIncome": {
                "amount": 10000,
                "amountType": "Monthly"
              },
              "qualifiedEmploymentBaseIncome": {
                "amount": 3900,
                "amountType": "Monthly"
              },
              "qualifiedEmploymentBonusIncome": {
                "amount": 6800,
                "amountType": "Monthly"
              }
            }
          ],
          "assets": [
            {
              "assetType": "SavingsAccount",
              "institutionName": "Chase",
              "assetValue": 239839,
              "accountIdentifier": "2245",
              "usableFundsAmount": 239839
            }
          ],
          "liabilities": [
            {
              "liabilityType": "Mortgage",
              "monthlyPaymentAmount": 1587.35
            }
          ],
          "concurrentFinancings": [
            {
              "loanAmount": 12500,
              "monthlyPaymentAmount": 250,
              "helocIndicator": true,
              "mortgageType": "Conventional"
            }
          ],
          "borrowerBusinesses": [
            {
              "name": "Mom and Pop Sweets",
              "address": {
                "line": "123 Candy Ln",
                "city": "Rochester",
                "state": "Michigan",
                "zipCode": "48307"
              },
              "foundedDate": "2015-10-23"
            }
          ],
          "closingCosts": [
            {
              "isAPRFeeIndicator": false,
              "feePaidToType": "ThirdPartyProvider",
              "feeCategory": "Prepaids",
              "prepaidExpenseType": "HomeownersInsurancePremium"
            }
          ],
          "prorations": [
            {
              "amount": 750,
              "paidFromDate": "2023-01-01",
              "paidThroughDate": "2023-05-09",
              "paidByParty": "Seller",
              "prorationType": "CountyPropertyTax"
            }
          ]
        },
        "additionalProperties": false,
        "properties": {
          "acquisitionCost": {
            "type": "number",
            "readOnly": true,
            "description": "For construction loans, this is the sum of the cost of construction improvement costs and cost of the lot. Otherwise, this is the sum of purchase price, energy improvements and renovation costs.",
            "format": "decimal",
            "nullable": true
          },
          "actingAsAttorney": {
            "type": "boolean",
            "description": "Acting as attorney on transaction",
            "nullable": true
          },
          "actingAsAttorneyFor": {
            "description": "Acting as attorney on transaction for:",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanOriginatorActingOnBehalfType"
              }
            ]
          },
          "actingAsRealEstateBroker": {
            "type": "boolean",
            "description": "Acting as real estate broker on transaction",
            "nullable": true
          },
          "actingAsRealEstateBrokerFor": {
            "description": "Acting as real estate broker on transaction for:",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanOriginatorActingOnBehalfType"
              }
            ]
          },
          "actualDisbursementDate": {
            "type": "string",
            "readOnly": true,
            "description": "Date the loan funds were actually disbursed.",
            "format": "date",
            "nullable": true
          },
          "additionalRefinanceBenefits": {
            "type": "array",
            "description": "Benefits associated with the loan. Used for net tangible benefit tests.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AdditionalRefinanceBenefitType"
            }
          },
          "adverseActionInitialSentDate": {
            "type": "string",
            "readOnly": true,
            "description": "Date the first denial Adverse Action Notice was sent to the borrower",
            "format": "date",
            "nullable": true
          },
          "affiliatedBusinessDisclosureInitialSentDate": {
            "type": "string",
            "readOnly": true,
            "description": "Date the first Affiliated Business Disclosure was sent to the borrower",
            "format": "date",
            "nullable": true
          },
          "affordableLoanDetails": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AffordableLoanDetails"
              }
            ]
          },
          "affordableLoanIndicator": {
            "type": "boolean",
            "description": "Indicates that this loan is an affordable loan",
            "nullable": true
          },
          "allBorrowerHasRequiredInfoForDisclosure": {
            "type": "boolean",
            "readOnly": true,
            "description": "All borrowers have required info for disclosure including full name, email, and tax identifier"
          },
          "alternativeLoanLevelCreditScoreCalculationMethod": {
            "description": "The method used to calculate the loan level credit score across multiple borrowers. If this field is null, the loan level credit score is calculated as the lowest median credit score of the borrowers.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AlternativeLoanLevelCreditScoreCalculationMethod"
              }
            ]
          },
          "antiSteeringSafeHarborInitialSentDate": {
            "type": "string",
            "readOnly": true,
            "description": "Date the first Anti-Steering Safe Harbor Disclosure was sent to the borrower",
            "format": "date",
            "nullable": true
          },
          "appraisalContingencyDate": {
            "type": "string",
            "description": "Last day that the buyer can back out of a purchase due to appraisal issues, as specified in the purchase contract.",
            "format": "date",
            "nullable": true
          },
          "appraisalDisclosureInitialSentDate": {
            "type": "string",
            "readOnly": true,
            "description": "Date the first Notice of Right to Receive Written Copy of Appraisal was sent to the borrower",
            "format": "date",
            "nullable": true
          },
          "appraisalInitialSentDate": {
            "type": "string",
            "readOnly": true,
            "description": "Date the appraisal was sent to the borrower",
            "format": "date",
            "nullable": true
          },
          "appraisalManagementCompanies": {
            "type": "array",
            "description": "A list of the appraisal management company file contacts on the loan",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "appraisalReviewerCHUMSId": {
            "type": "string",
            "description": "The six character identifier of the FHA-approved appraiser",
            "nullable": true
          },
          "appraisalWaivers": {
            "type": "array",
            "description": "Indicates which appraisal waiver programs, such as FNMA PIW or FMAC ACE, this loan is eligible for. This field is automatically populated based on AUS results",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AppraisalWaiver"
            }
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Asset"
            }
          },
          "assignedUsers": {
            "type": "array",
            "readOnly": true,
            "description": "The users assigned to this loan for processing, underwriting, and other tasks",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "attorneys": {
            "type": "array",
            "description": "A list of the attorney file contacts on the loan",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "ausResponses": {
            "type": "array",
            "readOnly": true,
            "description": "A list of all of the AUS runs and responses that have previously been run",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AUSResponse"
            }
          },
          "baseGuarantyFeePercent": {
            "type": "number",
            "description": "The guaranty fee rate prior to applying any adjustments, such as buyup/buydown. This can be specified in a price sheet, commitment, or other agreement. The guaranty fee is a portion of the interest on the loan that is paid to a party to ensure the timely payment of principal and interest to the holders of securities backed by the loan.",
            "format": "decimal",
            "nullable": true
          },
          "borrowerBusinesses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BorrowerBusiness"
            }
          },
          "borrowerCount": {
            "type": "integer",
            "readOnly": true,
            "description": "The number of borrowers on the loan",
            "nullable": true
          },
          "borrowerDeclinedAppraisalWaiver": {
            "type": "boolean",
            "description": "Did borrower decline appraisal waiver?",
            "nullable": true
          },
          "borrowerDidShopForTitleIndicator": {
            "type": "boolean",
            "description": "This will override the 'Did shop for' indicator on all title closing costs",
            "nullable": true
          },
          "borrowerInitialEscrowPaymentClosingCostsPaidBeforeClosing": {
            "type": "number",
            "readOnly": true,
            "description": "The portion of the closing costs that the borrower has paid before closing, specifically for initial escrow payments",
            "format": "decimal",
            "nullable": true
          },
          "borrowerOriginationChargesClosingCostsPaidBeforeClosing": {
            "type": "number",
            "readOnly": true,
            "description": "The origination charges related to closing costs that the borrower has paid prior to the closing event",
            "format": "decimal",
            "nullable": true
          },
          "borrowerOtherClosingCostsPaidBeforeClosing": {
            "type": "number",
            "readOnly": true,
            "description": "The amount of other closing costs, not including points and fees, that the borrower paid before the closing date",
            "format": "decimal",
            "nullable": true
          },
          "borrowerOtherDeductionDescription": {
            "type": "string",
            "description": "Borrower other deductions description",
            "nullable": true
          },
          "borrowerPaidInitialEscrowPaymentClosingCosts": {
            "type": "number",
            "readOnly": true,
            "description": "The initial escrow payment at closing that is paid by the borrower",
            "format": "decimal",
            "nullable": true
          },
          "borrowerPaidInitialEscrowPaymentClosingCostsEstimate": {
            "type": "number",
            "description": "An estimate of the initial escrow payment costs that the borrower is expected to pay at closing",
            "format": "decimal",
            "nullable": true
          },
          "borrowerPaidOriginationChargesClosingCosts": {
            "type": "number",
            "readOnly": true,
            "description": "The origination charges related to closing costs that are paid by the borrower",
            "format": "decimal",
            "nullable": true
          },
          "borrowerPaidOriginationChargesClosingCostsEstimate": {
            "type": "number",
            "description": "An estimate of the origination charges that the borrower is expected to pay at closing",
            "format": "decimal",
            "nullable": true
          },
          "borrowerPaidOtherClosingCosts": {
            "type": "number",
            "readOnly": true,
            "description": "The sum of other closing costs, typically those that are optional, that the borrower is responsible for paying",
            "format": "decimal",
            "nullable": true
          },
          "borrowerPaidOtherClosingCostsEstimate": {
            "type": "number",
            "description": "An estimate of other closing costs, typically those that are optional, that the borrower is expected to pay",
            "format": "decimal",
            "nullable": true
          },
          "borrowerPaidPrepaidsClosingCosts": {
            "type": "number",
            "readOnly": true,
            "description": "The amount of prepaid closing costs that the borrower is responsible for, including items such as insurance and taxes",
            "format": "decimal",
            "nullable": true
          },
          "borrowerPaidPrepaidsClosingCostsEstimate": {
            "type": "number",
            "description": "An estimate of the prepaid closing costs that the borrower is expected to pay",
            "format": "decimal",
            "nullable": true
          },
          "borrowerPaidTaxesAndGovernmentFeesClosingCosts": {
            "type": "number",
            "readOnly": true,
            "description": "The total amount of taxes and government fees related to closing costs that the borrower is responsible for",
            "format": "decimal",
            "nullable": true
          },
          "borrowerPaidTaxesAndGovernmentFeesClosingCostsEstimate": {
            "type": "number",
            "description": "Estimated taxes and government fees that the borrower is expected to pay as part of the closing costs",
            "format": "decimal",
            "nullable": true
          },
          "borrowerPaidThirdPartyServicesClosingCosts": {
            "type": "number",
            "readOnly": true,
            "description": "The total amount paid by the borrower for third-party services related to closing, such as title insurance and appraisal fees",
            "format": "decimal",
            "nullable": true
          },
          "borrowerPaidThirdPartyServicesClosingCostsEstimate": {
            "type": "number",
            "description": "An estimate of the closing costs for services provided by third parties, which are expected to be paid by the borrower",
            "format": "decimal",
            "nullable": true
          },
          "borrowerPrepaidsClosingCostsPaidBeforeClosing": {
            "type": "number",
            "readOnly": true,
            "description": "The amount of prepaid closing costs that the borrower has paid prior to the closing date",
            "format": "decimal",
            "nullable": true
          },
          "borrowers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Borrower"
            }
          },
          "borrowersWillPayTIFromEscrowIndicator": {
            "type": "boolean",
            "description": "Indicates that the borrowers have elected to pay taxes and insurance from escrow. This is a very common option that is relevant for servicing down the line",
            "nullable": true
          },
          "borrowerTaxesAndGovernmentFeesClosingCostsPaidBeforeClosing": {
            "type": "number",
            "readOnly": true,
            "description": "The amount of taxes and government fees related to closing costs that the borrower has paid prior to closing",
            "format": "decimal",
            "nullable": true
          },
          "borrowerThirdPartyServicesClosingCostsPaidBeforeClosing": {
            "type": "number",
            "readOnly": true,
            "description": "The amount paid by the borrower for third-party services prior to closing",
            "format": "decimal",
            "nullable": true
          },
          "builders": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "businessPurposeIndicator": {
            "type": "boolean",
            "description": "When true, indicates that the covered loan has a business purpose as specified in the HMDA LAR reporting requirements. Used for HMDA reporting",
            "nullable": true
          },
          "buyerRealEstateAgents": {
            "type": "array",
            "description": "A list of the buyer real estate agent file contacts on the loan",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "capitalPartners": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LoanCapitalPartner"
            }
          },
          "cashToClose": {
            "type": "number",
            "readOnly": true,
            "description": "The total amount of funds needed to close the mortgage transaction",
            "format": "decimal",
            "nullable": true
          },
          "cashToCloseEstimate": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "cemaLoanIndicator": {
            "type": "boolean",
            "description": "Indicates that this loan is a Consolidation, Extension, and Modification Agreement (CEMA) loan. CEMA loans are only available in New York state.",
            "nullable": true
          },
          "changeInCircumstancesDueDate": {
            "type": "string",
            "readOnly": true,
            "description": "Change in circumstances due date",
            "format": "date",
            "nullable": true
          },
          "changeInCircumstancesTriggerDate": {
            "type": "string",
            "readOnly": true,
            "description": "Change in circumstances trigger date",
            "format": "date",
            "nullable": true
          },
          "charmBookletInitialSentDate": {
            "type": "string",
            "readOnly": true,
            "description": "Date the first CHARM Booklet was sent to the borrower",
            "format": "date",
            "nullable": true
          },
          "cityTaxAssessors": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "cityTaxEscrowedIndicator": {
            "type": "boolean",
            "description": "Indicates whether the city taxes are escrowed",
            "nullable": true
          },
          "cityTaxMonthlyPayment": {
            "type": "number",
            "description": "The monthly payment for city taxes",
            "format": "decimal",
            "nullable": true
          },
          "clearedToCloseDate": {
            "type": "string",
            "readOnly": true,
            "description": "Date the underwriter designated this loan clear to close.",
            "format": "date",
            "nullable": true
          },
          "closedAt": {
            "type": "string",
            "description": "The date the loan actually closed",
            "format": "date-time",
            "nullable": true
          },
          "closedEndSubordinateLiensAmount": {
            "type": "number",
            "readOnly": true,
            "description": "The outstanding amount on all closed-end subordinate liens for the subject property, derived from either liability or concurrent financing. Only applicable to first liens",
            "format": "decimal",
            "nullable": true
          },
          "closingAgents": {
            "type": "array",
            "description": "A list of the closing agent file contacts on the loan",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "closingCosts": {
            "type": "array",
            "description": "A list of all of the closing costs on the loan",
            "items": {
              "$ref": "#/components/schemas/ClosingCost"
            }
          },
          "closingCostsFinanced": {
            "type": "number",
            "readOnly": true,
            "description": "The amount of closing costs to be included in the mortgage loan",
            "format": "decimal",
            "nullable": true
          },
          "closingCostsFinancedEstimate": {
            "type": "number",
            "description": "Estimated amount of closing costs that will be financed as part of the loan amount",
            "format": "decimal",
            "nullable": true
          },
          "closingDate": {
            "type": "string",
            "description": "Closing date of the loan. This date is always the expected closing date. To know when the loan actually closed use the ClosedAt field",
            "format": "date",
            "nullable": true
          },
          "closingDateScheduledIndicator": {
            "type": "boolean",
            "description": "Indicates that closing date is scheduled",
            "nullable": true
          },
          "closingInstructions": {
            "type": "array",
            "description": "Describes the conditions that must be met in order to complete the closing",
            "items": {
              "$ref": "#/components/schemas/ClosingInstruction"
            }
          },
          "closingPackageReceivedDate": {
            "type": "string",
            "description": "Date the fully executed closing package was received by the lender after closing",
            "format": "date",
            "nullable": true
          },
          "closingPackageSentDate": {
            "type": "string",
            "readOnly": true,
            "description": "Date the closing package was sent to the borrower",
            "format": "date",
            "nullable": true
          },
          "closingSigningMethod": {
            "description": "The method used to notarize documents for the closing",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ClosingSigningMethod"
              }
            ]
          },
          "combinedLoanToValueRatio": {
            "type": "number",
            "readOnly": true,
            "description": "The base combined loan to value ratio (rounded to 2 decimal places) - the value of all liens on the subject property, including the subject mortgage not including any financed mortgage premium, divided by the value of the subject property. If the actual property value is not populated, the estimated property value is used to compute this field",
            "format": "decimal",
            "nullable": true
          },
          "combinedLoanToValueRatioUnrounded": {
            "type": "number",
            "readOnly": true,
            "description": "The base combined loan to value ratio (unrounded) - the value of all liens on the subject property, including the subject mortgage not including any financed mortgage premium, divided by the value of the subject property. If the actual property value is not populated, the estimated property value is used to compute this field",
            "format": "decimal",
            "nullable": true
          },
          "committedToInvestorDate": {
            "type": "string",
            "description": "Date the mortgage was committed to an investor.",
            "format": "date",
            "nullable": true
          },
          "computedFields": {
            "type": "object",
            "x-ms-dynamic-schema": {
              "operationId": "GetDynamicSchema",
              "parameters": {
                "entityType": "Loan",
                "fieldType": "ComputedField",
                "processVersionId": {
                  "parameterResponseReference": "processVersionId"
                }
              }
            },
            "readOnly": true,
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "concurrentFinancings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConcurrentFinancing"
            }
          },
          "conflictSharedInterests": {
            "type": "object",
            "description": "Conflict shared interests",
            "nullable": true,
            "x-dictionaryKey": {
              "$ref": "#/components/schemas/ConflictSharedInterest"
            },
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "guid"
              }
            }
          },
          "constructionLoanDetails": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConstructionLoanDetails"
              }
            ]
          },
          "constructionLoanIndicator": {
            "type": "boolean",
            "description": "Indicates that this loan is for new construction",
            "nullable": true
          },
          "conversionOfLandContractOrContractForDeedIndicator": {
            "type": "boolean",
            "description": "Indicates that this loan is to pay off a land contract, e.g. convert it to a regular mortgage",
            "nullable": true
          },
          "correspondentLenders": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "counterofferExpirationDate": {
            "type": "string",
            "description": "Date on which the lender-provided counteroffer expires",
            "format": "date",
            "nullable": true
          },
          "counterofferSentDate": {
            "type": "string",
            "description": "Date on which lender provided a counteroffer to the borrower because the borrower did not qualify for the terms or product they originally applied for",
            "format": "date",
            "nullable": true
          },
          "countyTaxAssessors": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "createdAt": {
            "type": "string",
            "readOnly": true,
            "format": "date-time"
          },
          "creditInquiries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreditInquiry"
            }
          },
          "creditReportAgencies": {
            "type": "array",
            "description": "A list of the credit report agency file contacts on the loan",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "crmIdentifier": {
            "type": "string",
            "description": "Unique identifier used to reference this loan in a CRM system",
            "nullable": true
          },
          "currentEscrowBalance": {
            "type": "number",
            "readOnly": true,
            "description": "The amount of money currently in escrow",
            "format": "decimal",
            "nullable": true
          },
          "currentEscrowBalanceMetadata": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComputedFieldMetadataDecimal"
              }
            ]
          },
          "currentLoanStage": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "currentLoanStageChangedDate": {
            "type": "string",
            "readOnly": true,
            "description": "The date when the current loan stage was last updated or modified",
            "format": "date-time",
            "nullable": true
          },
          "currentOutstandingPrincipal": {
            "type": "number",
            "readOnly": true,
            "description": "The amount of principal left on the loan",
            "format": "decimal",
            "nullable": true
          },
          "currentOutstandingPrincipalMetadata": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComputedFieldMetadataDecimal"
              }
            ]
          },
          "customFields": {
            "type": "object",
            "x-ms-dynamic-schema": {
              "operationId": "GetDynamicSchema",
              "parameters": {
                "entityType": "Loan",
                "fieldType": "CustomField",
                "processVersionId": {
                  "parameterResponseReference": "processVersionId"
                }
              }
            },
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "dateOfLastPayment": {
            "type": "string",
            "readOnly": true,
            "description": "The date of the last payment made on the loan",
            "format": "date",
            "nullable": true
          },
          "dateOfLastPaymentMetadata": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComputedFieldMetadataDateOnly"
              }
            ]
          },
          "daysInterestPaidAtFunding": {
            "type": "integer",
            "description": "The number of days of interest owed to either the lender or the investor after the loan has been purchased",
            "nullable": true
          },
          "debtToIncomeRatio": {
            "type": "number",
            "readOnly": true,
            "description": "The overall debt to income ratio for the loan - all monthly debt + housing expenses for all borrowers, divided by total monthly income for all borrowers",
            "format": "decimal",
            "nullable": true
          },
          "debtToIncomeRatioEstimate": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "delinquentPaymentsOverPastTwelveMonthsCount": {
            "type": "integer",
            "description": "Delinquent payments over past 12 months",
            "nullable": true
          },
          "disbursementDate": {
            "type": "string",
            "readOnly": true,
            "description": "Date the loan funds are scheduled to be disbursed. This is calculated in accordance with the funding type and lender's configuration.",
            "format": "date",
            "nullable": true
          },
          "disbursementDateMetadata": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComputedFieldMetadataDateOnly"
              }
            ]
          },
          "documentCustodianIdentifier": {
            "type": "string",
            "description": "The unique identifier assigned to the document custodian for the investor purchase advice.",
            "nullable": true
          },
          "documentCustodianName": {
            "type": "string",
            "description": "The name of the document custodian for the investor purchase advice.",
            "nullable": true
          },
          "downPaymentAmount": {
            "type": "number",
            "readOnly": true,
            "description": "Down payment amount for a purchase loan. This field is computed as the purchase price minus the loan amount",
            "format": "decimal",
            "nullable": true
          },
          "downPaymentPercentage": {
            "type": "number",
            "readOnly": true,
            "description": "Down payment percentage for a purchase loan. This field is computed as the purchase price minus the loan amount",
            "format": "decimal",
            "nullable": true
          },
          "duplicatedFromLoanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "earliestAllowedClosingDate": {
            "type": "string",
            "readOnly": true,
            "description": "Earliest allowed closing date of the loan ",
            "format": "date",
            "nullable": true
          },
          "earnestMoneyDepositAmount": {
            "type": "number",
            "description": "The deposit amount that was made as a show of good faith by buyer to bind the conditions of a sale of real estate",
            "format": "decimal",
            "nullable": true
          },
          "earthquakeInsuranceEscrowedIndicator": {
            "type": "boolean",
            "description": "Indicates whether the earthquake insurance is escrowed",
            "nullable": true
          },
          "earthquakeInsuranceMonthlyPayment": {
            "type": "number",
            "readOnly": true,
            "description": "The monthly payment for earthquake insurance",
            "format": "decimal",
            "nullable": true
          },
          "ecoaApplicationSubmittedDate": {
            "type": "string",
            "readOnly": true,
            "description": "The date the application was submitted according to ECOA guidelines",
            "format": "date",
            "nullable": true
          },
          "ecoaTriggeredDate": {
            "type": "string",
            "readOnly": true,
            "description": "ECOA trigger date, currently earliest credit consent date across all borrowers",
            "format": "date-time",
            "nullable": true
          },
          "effectiveAppraisalWaiver": {
            "readOnly": true,
            "description": "Effective appraisal waiver",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EffectiveAppraisalWaiver"
              }
            ]
          },
          "eligibleForMaxFinancingIndicator": {
            "type": "boolean",
            "description": "Is this property eligible for maximum financing (high loan-to-value mortgage)?",
            "nullable": true
          },
          "energyImprovementAmount": {
            "type": "number",
            "description": "The amount of the loan proceeds being spent on energy improvements for the property, including payoff of previous debts incurred for energy improvements",
            "format": "decimal",
            "nullable": true
          },
          "energyImprovementTypes": {
            "type": "array",
            "description": "The specific energy improvements being made on the property, such as installation of solar heating/cooling, replacement of a major system, or repayment of a PACE loan",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/EnergyImprovementType"
            }
          },
          "eNoteIndicator": {
            "type": "boolean",
            "description": "Indicates that an eNote is used as part of this loan",
            "nullable": true
          },
          "escrowAgents": {
            "type": "array",
            "description": "A list of the escrow agent file contacts on the loan",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "escrowAggregateAdjustment": {
            "type": "number",
            "readOnly": true,
            "description": "The amount of any adjustment made to the initial escrow account balance based on Regulation X requirements",
            "format": "decimal",
            "nullable": true
          },
          "escrowAggregateAdjustmentEstimate": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "escrowBalanceLenderTransferringToInvestor": {
            "type": "number",
            "description": "The amount in the escrow account that is owed to the investor",
            "format": "decimal",
            "nullable": true
          },
          "escrowDisbursements": {
            "type": "array",
            "description": "Payments made from the escrow account for expenses like taxes and insurance",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/EscrowDisbursement"
            }
          },
          "escrowHoldbackInspectionCompletionDate": {
            "type": "string",
            "description": "Date the inspection of the repairs was completed",
            "format": "date",
            "nullable": true
          },
          "escrowHoldbackInspectionRequired": {
            "type": "boolean",
            "description": "Indicates whether an inspection of the repairs is required",
            "nullable": true
          },
          "escrowHoldbackRepairCompletionDate": {
            "type": "string",
            "description": "Date the repair work was completed",
            "format": "date",
            "nullable": true
          },
          "escrowHoldbackRepairCompletionDueDate": {
            "type": "string",
            "description": "Expected completion date for repair work",
            "format": "date",
            "nullable": true
          },
          "escrowHoldbackRepairsDescription": {
            "type": "string",
            "description": "Description of repairs required for escrow holdback completion",
            "nullable": true
          },
          "escrowInitialBalance": {
            "type": "number",
            "readOnly": true,
            "description": "The initial balance of the escrow account",
            "format": "decimal",
            "nullable": true
          },
          "escrowInitialBalanceEstimate": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "escrowNumber": {
            "type": "string",
            "description": "The unique identifier assigned to the escrow account",
            "nullable": true
          },
          "escrowPropertyInsuranceExFloodWaiverIndicator": {
            "type": "boolean",
            "description": "Indicates whether escrow for property insurance excluding flood are waived",
            "nullable": true
          },
          "escrowPropertyTaxesWaiverIndicator": {
            "type": "boolean",
            "description": "Indicates whether escrow is waived for property taxes",
            "nullable": true
          },
          "escrowWaiverFeeAmount": {
            "type": "number",
            "description": "The amount of the fee charged for opting out of an escrow account",
            "format": "decimal",
            "nullable": true
          },
          "escrowWaiverInterestRateIncreasePercent": {
            "type": "number",
            "description": "The amount of the interest rate increase for opting out of an escrow account",
            "format": "decimal",
            "nullable": true
          },
          "expectedBrokerCompensationAmount": {
            "type": "number",
            "description": "Expected amount paid to the broker as part of their compensation. Used for brokered loans",
            "format": "decimal",
            "nullable": true
          },
          "facts": {
            "type": "object",
            "x-ms-dynamic-schema": {
              "operationId": "GetDynamicSchema",
              "parameters": {
                "entityType": "Loan",
                "fieldType": "Fact",
                "processVersionId": {
                  "parameterResponseReference": "processVersionId"
                }
              }
            },
            "readOnly": true,
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "failureToPayNonEscrowedItemsConsequences": {
            "type": "string",
            "description": "The consequences of failing to pay non-escrowed items",
            "nullable": true
          },
          "feeQuoteIdentifier": {
            "type": "integer",
            "description": "The quote identifier corresponding to a fee request",
            "format": "int64",
            "nullable": true
          },
          "feesPaidToInvestor": {
            "type": "array",
            "description": "A list of fee types paid to the investor upon loan purchase",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/InvestorFee"
            }
          },
          "fhaActionDate": {
            "type": "string",
            "description": "Date the FHA takes action on the loan, such as approving or denying the application",
            "format": "date",
            "nullable": true
          },
          "fhaAgencyCaseNumber": {
            "type": "string",
            "description": "This loan's case number for FHA Connection",
            "nullable": true
          },
          "fhaAppraisalLoggingQueryStatus": {
            "description": "The status of the FHA appraisal logging query",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/FHAAppraisalLoggingQueryStatus"
              }
            ]
          },
          "fhaCaseAssignmentDate": {
            "type": "string",
            "description": "The date the lender registers the loan through FHA connection. This date can impact the upfront and renewal MI rates for FHA Loans",
            "format": "date-time",
            "nullable": true
          },
          "fhaCaseCancelStatus": {
            "description": "The status of the FHA case transfer action to a new lender.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/FHACaseCancelStatus"
              }
            ]
          },
          "fhaCaseLastAction": {
            "type": "string",
            "description": "The last action reported from running FHA case query",
            "nullable": true
          },
          "fhaCaseLastActionDate": {
            "type": "string",
            "description": "The date of the last action reported from running FHA case query",
            "format": "date",
            "nullable": true
          },
          "fhaCaseQueryLastPulled": {
            "type": "string",
            "description": "The date the FHA case query was last pulled",
            "format": "date-time",
            "nullable": true
          },
          "fhaCaseQueryStatus": {
            "description": "The status of the FHA pull case query action",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/FHACaseQueryStatus"
              }
            ]
          },
          "fhaCaseTransferStatus": {
            "description": "The status of the FHA case transfer action to a new lender.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/FHACaseTransferStatus"
              }
            ]
          },
          "fhaConditionalCommitmentExpirationDate": {
            "type": "string",
            "description": "The date the FHA conditional commitment will expire",
            "format": "date",
            "nullable": true
          },
          "fhaConditionalCommitmentIssuedDate": {
            "type": "string",
            "description": "The date the FHA conditional commitment was issued",
            "format": "date",
            "nullable": true
          },
          "fhaIdentityOfInterestIndicator": {
            "type": "boolean",
            "description": "Indicates  preexisting connection between the property’s buyer and seller(s), such as a family or a business relationship.",
            "nullable": true
          },
          "fhaInsuranceApplicationStatus": {
            "description": "The status of the FHA insurance application submission",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/FHAInsuranceApplicationStatus"
              }
            ]
          },
          "fhaMonthlyInsurancePremiumAmount": {
            "type": "number",
            "readOnly": true,
            "description": "The monthly FHA mortgage insurance premium amount",
            "format": "decimal",
            "nullable": true
          },
          "fhaMonthlyInsurancePremiumAmountEstimate": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "fhaMonthlyInsurancePremiumEscrowIndicator": {
            "type": "boolean",
            "nullable": true
          },
          "fhaMonthlyInsurancePremiumTermMonthsCount": {
            "type": "integer",
            "readOnly": true,
            "description": "The FHA Monthly Premium term, measured in months (e.g. a 10 year term would have 120 here)",
            "nullable": true
          },
          "fhaOriginalPropertyValue": {
            "type": "number",
            "description": "For FHA mortgages, this represents the appraised value or sales price of a property",
            "format": "decimal",
            "nullable": true
          },
          "fhaPropertyAcquiredAsInheritanceOrGiftIndicator": {
            "type": "boolean",
            "description": "Indicates whether the property was acquired through a family inheritance or gift for FHA refinances that are within 12 months of prior sale/transfer date.",
            "nullable": true
          },
          "fhaPropertyPriorSaleWithin36MonthsIndicator": {
            "type": "boolean",
            "description": "Indicates whether the property was last sold or transferred in the last 3 years.",
            "nullable": true
          },
          "fhaRefinanceAuthorizationNumber": {
            "type": "string",
            "description": "The refinance authorization number assigned by HUD",
            "nullable": true
          },
          "fhaRefinanceAuthorizationStatus": {
            "description": "The status of the FHA refinance authorization submission",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/FHARefinanceAuthorizationStatus"
              }
            ]
          },
          "fhaRefinanceType": {
            "description": "The type of FHA refinance - simple, streamline, or rate and term",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/FHARefinanceType"
              }
            ]
          },
          "fhaStreamlineRefinanceType": {
            "description": "Specifies the type of FHA Streamline Refinance",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/FHAStreamlineRefinanceType"
              }
            ]
          },
          "fileCreatedDate": {
            "type": "string",
            "readOnly": true,
            "description": "Date that the loan file was created in Vesta",
            "format": "date"
          },
          "fileSubmittedForGovernmentInsuranceDate": {
            "type": "string",
            "description": "Date the FHA case binder or VA file is submitted to the relevant agency",
            "format": "date",
            "nullable": true
          },
          "fireInsuranceEscrowedIndicator": {
            "type": "boolean",
            "description": "Indicates whether the fire insurance is escrowed",
            "nullable": true
          },
          "fireInsuranceMonthlyPayment": {
            "type": "number",
            "description": "The monthly payment for fire insurance",
            "format": "decimal",
            "nullable": true
          },
          "firstClosingDisclosureDeliverySentDate": {
            "type": "string",
            "readOnly": true,
            "description": "Date on which first closing disclosures were delivered",
            "format": "date",
            "nullable": true
          },
          "firstLienMonthlyPrincipalAndInterest": {
            "type": "number",
            "readOnly": true,
            "description": "The monthly principal and interest for the first lien on the subject property, can represent the subject loan if applicable",
            "format": "decimal",
            "nullable": true
          },
          "firstLoanEstimateDeliverySentDate": {
            "type": "string",
            "readOnly": true,
            "description": "Date on which first loan estimates were delivered",
            "format": "date",
            "nullable": true
          },
          "firstPaymentDueToInvestorDate": {
            "type": "string",
            "description": "The date the first payment is due to the investor",
            "format": "date",
            "nullable": true
          },
          "floodDeterminationCompanies": {
            "type": "array",
            "description": "A list of the flood determination company file contacts on the loan",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "floodInsuranceEscrowedIndicator": {
            "type": "boolean",
            "description": "Indicates whether the flood insurance is escrowed",
            "nullable": true
          },
          "floodInsuranceMonthlyPayment": {
            "type": "number",
            "description": "The monthly payment for flood insurance",
            "format": "decimal",
            "nullable": true
          },
          "floodNoticeInitialSentDate": {
            "type": "string",
            "readOnly": true,
            "description": "Date the first flood notice was sent to the borrower",
            "format": "date",
            "nullable": true
          },
          "floodNoticeReceivedDate": {
            "type": "string",
            "readOnly": true,
            "description": "The earliest date that any flood notice was received by at all borrowers on this loan. Incorporates the mailbox rule and presumed receipt.",
            "format": "date",
            "nullable": true
          },
          "fraudConditions": {
            "type": "array",
            "readOnly": true,
            "description": "List of conditions from the loan's fraud reports",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FraudCondition"
            }
          },
          "fundedDate": {
            "type": "string",
            "description": "The date the loan was actually disbursed or funded",
            "format": "date",
            "nullable": true
          },
          "fundingAdvanceAmount": {
            "type": "number",
            "readOnly": true,
            "description": "The dollar amount disbursed by a warehouse lender or other source of capital to fund a loan",
            "format": "decimal",
            "nullable": true
          },
          "fundingAdvanceAmountMetadata": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComputedFieldMetadataDecimal"
              }
            ]
          },
          "fundingBeneficiaryAccountName": {
            "type": "string",
            "description": "The name of the account for the settlement agent that will receive the lender wire transfer",
            "nullable": true
          },
          "fundingBeneficiaryAccountNumber": {
            "type": "string",
            "description": "The account number of the settlement agent that will receive the lender wire transfer",
            "nullable": true
          },
          "fundingBeneficiaryName": {
            "type": "string",
            "description": "The name of the settlement agent that will receive the lender wire transfer",
            "nullable": true
          },
          "fundingDestinationBankAddress": {
            "description": "The address of the bank that will receive the lender wire transfer",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ]
          },
          "fundingDestinationBankName": {
            "type": "string",
            "description": "The name of the bank that will receive the lender wire transfer",
            "nullable": true
          },
          "fundingDestinationBankRoutingNumber": {
            "type": "string",
            "description": "The routing number of the bank that will receive the lender wire transfer",
            "nullable": true
          },
          "fundingDisbursementAmount": {
            "type": "number",
            "readOnly": true,
            "description": "Funding disbursement amount",
            "format": "decimal",
            "nullable": true
          },
          "fundingDisbursementAmountEstimate": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "fundingType": {
            "readOnly": true,
            "description": "Indicates whether the loan is funded on the closing date (wet) or if there is a delay in funding post-closing (dry)",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/FundingType"
              }
            ]
          },
          "fundingTypeMetadata": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComputedFieldMetadataFundingType"
              }
            ]
          },
          "fundsOrderedDate": {
            "type": "string",
            "description": "Date the funds were ordered to be disbursed.",
            "format": "date",
            "nullable": true
          },
          "governmentInsuranceObtained": {
            "type": "string",
            "description": "Date the relevant government insurance certificate is received for the loan",
            "format": "date",
            "nullable": true
          },
          "governmentMortgageCreditCertificateAmount": {
            "type": "number",
            "description": "Amount of money credited through mortgage credit certificate",
            "format": "decimal",
            "nullable": true
          },
          "grossCombinedLoanToValueRatio": {
            "type": "number",
            "readOnly": true,
            "description": "The gross combined loan to value ratio (rounded to 2 decimal places) - the value of all liens on the subject property, including the subject mortgage and including any financed mortgage premium, divided by the value of the subject property. If the actual property value is not populated, the estimated property value is used to compute this field",
            "format": "decimal",
            "nullable": true
          },
          "grossCombinedLoanToValueRatioUnrounded": {
            "type": "number",
            "readOnly": true,
            "description": "The gross combined loan to value ratio (unrounded) - the value of all liens on the subject property, including the subject mortgage and including any financed mortgage premium, divided by the value of the subject property. If the actual property value is not populated, the estimated property value is used to compute this field",
            "format": "decimal",
            "nullable": true
          },
          "grossLoanToValueRatio": {
            "type": "number",
            "readOnly": true,
            "description": "The gross loan to value ratio (rounded to 2 decimal places) - the subject mortgage amount including any financed mortgage insurance premiums, divided by the value of the subject property. If the actual property value is not populated, the estimated property value is used to compute this field",
            "format": "decimal",
            "nullable": true
          },
          "grossLoanToValueRatioUnrounded": {
            "type": "number",
            "readOnly": true,
            "description": "The gross loan to value ratio (unrounded) - the subject mortgage amount including any financed mortgage insurance premiums, divided by the value of the subject property. If the actual property value is not populated, the estimated property value is used to compute this field",
            "format": "decimal",
            "nullable": true
          },
          "guarantyFeeAfterAlternatePaymentMethodPercent": {
            "type": "number",
            "description": "Contractual guaranty fee (after adjusting for the alternate payment method (APM) remittance cycle, if applicable) for an Mortgage Backed Security (MBS) pool mortgage.",
            "format": "decimal",
            "nullable": true
          },
          "guarantyFeePercent": {
            "type": "number",
            "description": "The guaranty fee rate after applying all adjustments to the guaranty fee, such as buyup/buydown. The guaranty fee is a portion of the interest on the loan that is paid to a party to guarantee the timely payment of interest and principal to the holders of securities backed by the loan",
            "format": "decimal",
            "nullable": true
          },
          "hasObligationsToOtherParties": {
            "type": "boolean",
            "description": "Has obligations to other parties in the transaction",
            "nullable": true
          },
          "hasRelativeProvidingServices": {
            "type": "boolean",
            "description": "Relative of loan officer is providing additional services",
            "nullable": true
          },
          "helocImportantTermsInitialSentDate": {
            "type": "string",
            "readOnly": true,
            "description": "HELOC important terms initial sent date",
            "format": "date",
            "nullable": true
          },
          "highCostDisclosureInitialSentDate": {
            "type": "string",
            "readOnly": true,
            "description": "Date the first high cost disclosure was sent to the borrower",
            "format": "date",
            "nullable": true
          },
          "hmdaApplicationSubmissionType": {
            "description": "The method by which the application was submitted to the lender - directly or indirectly, for example through a broker",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/HMDAApplicationSubmissionType"
              }
            ]
          },
          "hmdaDispositionDate": {
            "type": "string",
            "description": "The date of the HMDA action taken",
            "format": "date",
            "nullable": true
          },
          "hmdaDispositionType": {
            "description": "Indicates the type of action taken on the application or HMDA covered loan. Used for HMDA reporting",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/HMDADispositionType"
              }
            ]
          },
          "hmdaPayableToInstitutionStatus": {
            "description": "HMDA initially payable to institution status",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/HMDACoveredLoanInitiallyPayableToReportingInstitutionStatusType"
              }
            ]
          },
          "hmdaPurchaserType": {
            "description": "The entity that purchased the loan",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/HMDAPurchaserType"
              }
            ]
          },
          "hoaDuesMonthlyPayment": {
            "type": "number",
            "description": "The monthly payment for HOA dues",
            "format": "decimal",
            "nullable": true
          },
          "hoaSpecialAssessmentMonthlyPayment": {
            "type": "number",
            "description": "The monthly payment for HOA special assessments",
            "format": "decimal",
            "nullable": true
          },
          "homeCounselingDisclosureInitialSentDate": {
            "type": "string",
            "readOnly": true,
            "description": "Date the first Home Counseling Disclosure was sent to the borrower",
            "format": "date",
            "nullable": true
          },
          "homeEquityCombinedLoanToValueRatio": {
            "type": "number",
            "readOnly": true,
            "description": "Home Equity CLTV ratio (rounded to 2 decimal places) - the value of all liens on the subject property assuming all lines fully drawn, including the subject mortgage and including any financed mortgage premium, divided by the value of the subject property. If the actual property value is not populated, the estimated property value is used to compute this field",
            "format": "decimal",
            "nullable": true
          },
          "homeEquityCombinedLoanToValueRatioUnrounded": {
            "type": "number",
            "readOnly": true,
            "description": "Home Equity CLTV ratio (unrounded) - the value of all liens on the subject property assuming all lines fully drawn, including the subject mortgage and including any financed mortgage premium, divided by the value of the subject property. If the actual property value is not populated, the estimated property value is used to compute this field",
            "format": "decimal",
            "nullable": true
          },
          "homeInsuranceEscrowedIndicator": {
            "type": "boolean",
            "description": "Indicates whether the home insurance is escrowed",
            "nullable": true
          },
          "homeInsuranceMonthlyPayment": {
            "type": "number",
            "description": "The monthly payment for home insurance",
            "format": "decimal",
            "nullable": true
          },
          "homeLoanToolkitInitialSentDate": {
            "type": "string",
            "readOnly": true,
            "description": "Date the first Home Loan Toolkit was sent to the borrower",
            "format": "date",
            "nullable": true
          },
          "homeManufacturers": {
            "type": "array",
            "description": "A list of the home manufacturer file contacts on the loan",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "homeOwnersAssociations": {
            "type": "array",
            "description": "A list of the homeowners association file contacts on the loan",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "homeOwnersInsuranceOrdered": {
            "type": "string",
            "description": "Home insurance ordered",
            "format": "date",
            "nullable": true
          },
          "homeOwnersInsuranceReceived": {
            "type": "string",
            "description": "Home insurance received",
            "format": "date",
            "nullable": true
          },
          "housingExpensesToIncomeRatio": {
            "type": "number",
            "readOnly": true,
            "description": "The housing expense to income ratio - monthly expenses for the subject property divided by monthly income ",
            "format": "decimal",
            "nullable": true
          },
          "housingExpensesToIncomeRatioEstimate": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "hurricaneInsuranceEscrowedIndicator": {
            "type": "boolean",
            "description": "Indicates whether the hurricane insurance is escrowed",
            "nullable": true
          },
          "hurricaneInsuranceMonthlyPayment": {
            "type": "number",
            "description": "The monthly payment for hurricane insurance",
            "format": "decimal",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "ilapldSubmissionDueDate": {
            "type": "string",
            "readOnly": true,
            "description": "Indicates the date that ILAPLD submission is due based on when TRID was triggered or loan was updated.",
            "format": "date",
            "nullable": true
          },
          "ilapldSubmissionStatus": {
            "description": "A status of whether or not Illinois Anti-Predatory Lending Database has been updated with this loan.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ILAPLDSubmissionStatus"
              }
            ]
          },
          "improvementCostsAmount": {
            "type": "number",
            "description": "Amount of the loan proceeds being put towards home improvement costs.",
            "format": "decimal",
            "nullable": true
          },
          "improvementCostsEscrowAmount": {
            "type": "number",
            "description": "Amount withheld in escrow until project milestones or conditions are met. Used for construction, renovation or energy improvement projects.",
            "format": "decimal",
            "nullable": true
          },
          "improvementCostsEscrowType": {
            "description": "The purpose of holding back escrow funds used for construction, renovation or energy improvement projects. These funds are meant to cover associated expenses and disbursed throughout the project’s duration.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ImprovementCostsEscrowType"
              }
            ]
          },
          "improvementsAlreadyCompletedIndicator": {
            "type": "boolean",
            "description": "Indicates that the home improvements being paid for with the loan proceeds have already been completed",
            "nullable": true
          },
          "incomes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Income"
            }
          },
          "inferredFannieMaeInvestorFeatureCodes": {
            "type": "array",
            "readOnly": true,
            "description": "Fannie Mae specified identifiers used to identify loan features that have been inferred from attributes of this loan",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FannieMaeInvestorFeatureCode"
            }
          },
          "inferredFreddieMacInvestorFeatureCodes": {
            "type": "array",
            "readOnly": true,
            "description": "Freddie Mac specified identifiers used to identify loan features that have been inferred from attributes of this loan",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FreddieMacInvestorFeatureCode"
            }
          },
          "initialLoanEstimateReceivedDate": {
            "type": "string",
            "readOnly": true,
            "description": "The earliest date that any loan estimate was received by at least one borrower on this loan. Incorporates the mailbox rule and presumed receipt",
            "format": "date",
            "nullable": true
          },
          "initialMortgagePrincipalAndInterestMonthlyPayment": {
            "type": "number",
            "readOnly": true,
            "description": "The actual first month principal and interest payment for the subject loan. This always uses the note rate, and assumes interest-only draw period for HELOCs.",
            "format": "decimal",
            "nullable": true
          },
          "intentToProceedDate": {
            "type": "string",
            "description": "Date the borrower provided intent to proceed with the loan",
            "format": "date",
            "nullable": true
          },
          "interestPaidAtFunding": {
            "type": "number",
            "readOnly": true,
            "description": "The amount of interest owed to either the lender or the investor after the loan has been purchased. See the Interest payment direction field for the party that interest is paid to.",
            "format": "decimal",
            "nullable": true
          },
          "interestPaidAtFundingMetadata": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComputedFieldMetadataDecimal"
              }
            ]
          },
          "interestPaidAtFundingRecipient": {
            "description": "The party that interest is paid to when the loan has been purchased",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanInterestRecipient"
              }
            ]
          },
          "investorCollateralDueDate": {
            "type": "string",
            "description": "Date the investor expects to receive the package. Past this date, the investor’s commitment to buy the loan is no longer valid.",
            "format": "date",
            "nullable": true
          },
          "investorCommitmentIdentifier": {
            "type": "string",
            "description": "The unique identifier for the commitment (for cash loans) that the loan is being delivered against",
            "nullable": true
          },
          "investorCommitmentNumber": {
            "type": "string",
            "description": "The unique identifier assigned to the investor commitment for a mandatory loan delivery",
            "nullable": true
          },
          "investorCommitmentPrice": {
            "type": "number",
            "description": "The price associated with the investor commitment, expressed in points, for a mandatory loan delivery",
            "format": "decimal",
            "nullable": true
          },
          "investorContractIdentifier": {
            "type": "string",
            "description": "The unique identifier for the commitment (usually for an MBS) that the loan is being delivered against.",
            "nullable": true
          },
          "investorInterestPerDiemDays": {
            "description": "Number of days in a year used to calculate the amount of interest owed to lender or investor after the loan has been purchased",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PerDiemCalculationMethod"
              }
            ]
          },
          "investorLoanNumber": {
            "type": "string",
            "description": "The loan number as assigned by the investor",
            "nullable": true
          },
          "investorPurchasePremium": {
            "type": "number",
            "readOnly": true,
            "description": "The premium paid upon loan purchase, calculated as the loan amount multiplied by the purchase advice price",
            "format": "decimal",
            "nullable": true
          },
          "investorPurchasePrice": {
            "type": "number",
            "readOnly": true,
            "description": "The total amount funded upon loan purchase, including both the loan amount and the purchase premium",
            "format": "decimal",
            "nullable": true
          },
          "investorRemittanceDay": {
            "type": "integer",
            "description": "The day of the month on which principal and interest for the loan are remitted by the servicer to the investor.",
            "nullable": true
          },
          "investorWireAmount": {
            "type": "number",
            "readOnly": true,
            "description": "The amount wired by the investor to the lender for loan purchase",
            "format": "decimal",
            "nullable": true
          },
          "investorWireDate": {
            "type": "string",
            "description": "The date the investor wired the payment for the loan",
            "format": "date",
            "nullable": true
          },
          "irsTaxFormThirdParties": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "isArchived": {
            "type": "boolean",
            "readOnly": true
          },
          "isRestricted": {
            "type": "boolean",
            "description": "This loan is restricted and can only be viewed and updated by users with appropriate restricted loan permissions",
            "nullable": true
          },
          "landContractExecutionDate": {
            "type": "string",
            "description": "If this loan is to pay off a land contract, the date said contract was originally executed. This determines whether the mortgage is classified as a purchase or refinance mortgage",
            "format": "date",
            "nullable": true
          },
          "latestCreditConsentDateAcrossAllBorrowers": {
            "type": "string",
            "readOnly": true,
            "description": "Latest hard credit consent date across all borrowers",
            "format": "date-time",
            "nullable": true
          },
          "latestDODUMessageCodes": {
            "type": "array",
            "readOnly": true,
            "description": "Message codes returned in the latest DO/DU run",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/DODUMessageCode"
            }
          },
          "latestDODUResult": {
            "readOnly": true,
            "description": "Latest result of a DO/DU run",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AutomatedUnderwritingResult"
              }
            ]
          },
          "latestLoanDecision": {
            "readOnly": true,
            "description": "Most recent decisioned status, as determined by an underwriter, on this loan",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanDecision"
              }
            ]
          },
          "latestLoanDecisionDate": {
            "type": "string",
            "readOnly": true,
            "description": "Date on which the underwriter made the most recent loan decision captured in the 'Latest loan decision' field",
            "format": "date-time",
            "nullable": true
          },
          "latestLoanDecisionDenyReasons": {
            "type": "array",
            "readOnly": true,
            "description": "The deny reason(s) selected if the most recent loan decision is Deny",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LoanDenyReason"
            }
          },
          "latestLoanEstimateDeliveryExpirationDate": {
            "type": "string",
            "readOnly": true,
            "description": "Date on which latest loan estimate expires",
            "format": "date",
            "nullable": true
          },
          "latestLoanEstimateDeliverySentDate": {
            "type": "string",
            "readOnly": true,
            "description": "Date on which latest loan estimates were delivered",
            "format": "date",
            "nullable": true
          },
          "latestLPAMessageCodes": {
            "type": "array",
            "readOnly": true,
            "description": "Message codes returned in the latest LPA run",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LPAMessageCode"
            }
          },
          "latestLPAResult": {
            "readOnly": true,
            "description": "Latest result of a LPA run",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AutomatedUnderwritingResult"
              }
            ]
          },
          "leadSourceId": {
            "type": "string",
            "description": "Lead Source ID of the Loan",
            "nullable": true
          },
          "lenderLoanNumber": {
            "type": "string",
            "description": "The loan number as assigned by the lender. Should match the Vesta loan number.",
            "nullable": true
          },
          "lenderPaidMIInterestRateAdjustment": {
            "description": "The percentage of the mortgage interest rate allocated to fund lender purchased mortgage insurance premiums",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanProductAdjustment"
              }
            ]
          },
          "lesserSubordinationAgreementMaximumLoanAmount": {
            "type": "number",
            "readOnly": true,
            "description": "The lesser of the maximum loan amounts per subordination agreement(s) by subordinating lenders",
            "format": "decimal",
            "nullable": true
          },
          "lessorName": {
            "type": "string",
            "description": "The name of the lessor of the investment property.",
            "nullable": true
          },
          "liabilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Liability"
            }
          },
          "loanAmount": {
            "type": "number",
            "description": "Loan amount, not including any financed mortgage insurance premium, VA funding fee, or USDA guarantee fee",
            "format": "decimal",
            "nullable": true
          },
          "loanAmountIncludingFinancedMIPorFF": {
            "type": "number",
            "readOnly": true,
            "description": "Loan amount, including any financed mortgage insurance premium, VA funding fee, or USDA guarantee fee",
            "format": "decimal",
            "nullable": true
          },
          "loanAmountInitiallyAppliedFor": {
            "type": "number",
            "readOnly": true,
            "description": "The amount of the loan initially requested by the borrower. This amount may include financed PMI, MIP and Funding Fees",
            "format": "decimal",
            "nullable": true
          },
          "loanArchivedAt": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "loanChannel": {
            "description": "The lender's role in the mortgage process, defining how the loan is originated, funded, and potentially sold.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanChannel"
              }
            ]
          },
          "loanDefaultLossPartyType": {
            "description": "Indicates the party that bears the default loss for the loan.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanDefaultLossPartyType"
              }
            ]
          },
          "loanDeliveries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoanDelivery"
            }
          },
          "loanEstimateNeedsToBeSentDate": {
            "type": "string",
            "readOnly": true,
            "description": "Date by which loan estimate needs to be sent - the TRID triggered date plus three business days.",
            "format": "date",
            "nullable": true
          },
          "loanLastSyncedWithServicerDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "loanLevelBuyupBuydownPercent": {
            "type": "number",
            "description": "Specifies the amount of the loan-level buyup or buydown selected by the loan seller",
            "format": "decimal",
            "nullable": true
          },
          "loanLevelBuyupBuydownType": {
            "description": "Specifies if a loan seller has elected to exercise a loan-level buyup or buydown",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanLevelBuyupBuydownType"
              }
            ]
          },
          "loanMaturityDate": {
            "type": "string",
            "readOnly": true,
            "description": "The date when the loan is scheduled to be paid in full as reflected on the Note",
            "format": "date",
            "nullable": true
          },
          "loanMaturityDateMetadata": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComputedFieldMetadataDateOnly"
              }
            ]
          },
          "loanModifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoanModification"
            }
          },
          "loanNumber": {
            "type": "integer",
            "readOnly": true,
            "description": "The Vesta assigned loan number",
            "format": "int64",
            "nullable": true
          },
          "loanOriginator": {
            "description": "The loan originator / primary assignee of the loan",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "loanOriginatorSignedApplicationDate": {
            "type": "string",
            "description": "Date the loan originator signed the application",
            "format": "date",
            "nullable": true
          },
          "loanProduct": {
            "$ref": "#/components/schemas/LoanProduct"
          },
          "loanPurpose": {
            "description": "Whether this mortgage loan is a purchase or refinance",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanPurpose"
              }
            ]
          },
          "loanStages": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/LoanStage"
            }
          },
          "loanStatuses": {
            "type": "array",
            "readOnly": true,
            "description": "A field with a bunch of status flags that can apply to the loan. Will likely be deprecated for a more opinionated model re: status",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LoanStatus"
            }
          },
          "loanSummaryAppraisalStatus": {
            "readOnly": true,
            "description": "Loan summary appraisal status",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanSummaryAppraisalStatus"
              }
            ]
          },
          "loanSummaryDisclosuresStatus": {
            "readOnly": true,
            "description": "Loan summary disclosures status",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanSummaryDisclosuresStatus"
              }
            ]
          },
          "loanSummaryUnderwritingStatus": {
            "readOnly": true,
            "description": "Loan summary underwriting status",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanSummaryUnderwritingStatus"
              }
            ]
          },
          "loanToValueRatio": {
            "type": "number",
            "readOnly": true,
            "description": "The base loan to value ratio (rounded to 2 decimal places) - the subject mortgage amount not including any financed mortgage insurance premiums, divided by the value of the subject property. If the actual property value is not populated, the estimated property value is used to compute this field",
            "format": "decimal",
            "nullable": true
          },
          "loanToValueRatioDeterminingPMI": {
            "type": "number",
            "readOnly": true,
            "description": "The loan to value ratio (rounded to 2 decimal places) used to determine if the loan requires private mortgage insurance. If the actual property value is not populated, the estimated property value is used as the fallback. This field properly incorporates the NY state rules around determination of whether private mortgage insurance is necessary. This field is null for loans that are not conventional.",
            "format": "decimal",
            "nullable": true
          },
          "loanToValueRatioUnrounded": {
            "type": "number",
            "readOnly": true,
            "description": "The base loan to value ratio (unrounded) - the subject mortgage amount not including any financed mortgage insurance premiums, divided by the value of the subject property. If the actual property value is not populated, the estimated property value is used to compute this field",
            "format": "decimal",
            "nullable": true
          },
          "loanType": {
            "description": "Whether this loan is a mortgage, HELOC, or home equity loan",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanType"
              }
            ]
          },
          "loanUploadedToServicerDate": {
            "type": "string",
            "description": "The date that the loan was uploaded to the servicing system",
            "format": "date-time",
            "nullable": true
          },
          "loanUploadedToServicerIndicator": {
            "type": "boolean",
            "description": "Loan has been uploaded to a servicing system",
            "nullable": true
          },
          "lowestMedianCreditScore": {
            "type": "integer",
            "readOnly": true,
            "description": "Loan level credit score. This is typically the lowest median credit score of the borrowers on the loan, but for some programs, might be calculated differently based on Alternative credit score calculation method",
            "nullable": true
          },
          "mersMinNumber": {
            "type": "string",
            "readOnly": true,
            "description": "The Mortgage Electronic Registration Systems unique mortgage identification number (MIN)",
            "nullable": true
          },
          "mersOriginatedIndicator": {
            "type": "boolean",
            "description": "Indicates whether the loan was originated with MERS as the original mortgagee of record (MOM)",
            "nullable": true
          },
          "mersRegisteredDate": {
            "type": "string",
            "description": "Date the mortgage was registered with MERS.",
            "format": "date",
            "nullable": true
          },
          "mersTransferCompletedDate": {
            "type": "string",
            "description": "Date the mortgage was transferred via MERS.",
            "format": "date",
            "nullable": true
          },
          "miPremiumSchedule": {
            "type": "array",
            "description": "If the mortgage insurance premiums are paid over time (for the duration of the insurance), how much it costs the borrower per month",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/MIPremiumSchedule"
            }
          },
          "monthlyMaintenanceCost": {
            "type": "number",
            "readOnly": true,
            "description": "Monthly maintenance cost",
            "format": "decimal",
            "nullable": true
          },
          "monthlyMaintenanceCostEscrowedIndicator": {
            "type": "boolean",
            "description": "Monthly maintenance cost escrowed indicator",
            "nullable": true
          },
          "monthsOfReservesAvailable": {
            "type": "number",
            "readOnly": true,
            "description": "The number of months a borrower can cover housing expenses using their reserves",
            "format": "decimal",
            "nullable": true
          },
          "monthsOfReservesAvailableEstimate": {
            "type": "number",
            "description": "Months of reserves available",
            "format": "decimal",
            "nullable": true
          },
          "mortgageInsuranceCancellationLTVCutoff": {
            "type": "number",
            "description": "The LTV at which the mortgage insurance can be cancelled",
            "format": "decimal",
            "nullable": true
          },
          "mortgageInsuranceCancellationType": {
            "description": "The method by which the mortgage insurance calculation threshold is determined",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MortgageInsuranceCancellationType"
              }
            ]
          },
          "mortgageInsuranceCertificateNumber": {
            "type": "string",
            "readOnly": true,
            "description": "Certificate number for mortgage insurance",
            "nullable": true
          },
          "mortgageInsuranceCompanies": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "mortgageInsuranceCoveragePercentage": {
            "type": "number",
            "description": "The percentage of the loan amount that the mortgage insurance covers",
            "format": "decimal",
            "nullable": true
          },
          "mortgageInsuranceEscrowedIndicator": {
            "type": "boolean",
            "nullable": true
          },
          "mortgageInsuranceFinancedAmount": {
            "type": "number",
            "description": "The amount of the upfront mortgage insurance premium being financed into the mortgage",
            "format": "decimal",
            "nullable": true
          },
          "mortgageInsuranceFinancedIndicator": {
            "type": "boolean",
            "description": "Indicates that the upfront mortgage insurance premium is being financed/rolled into the loan amount",
            "nullable": true
          },
          "mortgageInsuranceInitialMonthlyRate": {
            "type": "number",
            "readOnly": true,
            "description": "The initial monthly rate for mortgage insurance",
            "format": "decimal",
            "nullable": true
          },
          "mortgageInsuranceMonthlyPayment": {
            "type": "number",
            "readOnly": true,
            "description": "The monthly payment for mortgage insurance",
            "format": "decimal",
            "nullable": true
          },
          "mortgageInsurancePremiumAtClosing": {
            "type": "boolean",
            "description": "Indicates that the initial upfront mortgage insurance premium will be paid at closing",
            "nullable": true
          },
          "mortgageInsurancePremiumPaidBy": {
            "description": "Who the mortgage insurance premiums are paid by",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MortgageInsurancePremiumPaidBy"
              }
            ]
          },
          "mortgageInsurancePremiumPlan": {
            "description": "How the mortgage insurance premiums are paid - upfront vs over time",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MortgageInsurancePremiumPlan"
              }
            ]
          },
          "mortgageInsurancePrepaidPremiumAmount": {
            "type": "number",
            "description": "The amount of the MI premium prepaid at closing",
            "format": "decimal",
            "nullable": true
          },
          "mortgageInsuranceQuoteExpirationDate": {
            "type": "string",
            "description": "The date which the selected mortgage insurance quote will expire",
            "format": "date",
            "nullable": true
          },
          "mortgageInsuranceQuoteIdentifier": {
            "type": "string",
            "description": "Identifier of the rate quote request",
            "nullable": true
          },
          "mortgageInsuranceRenewalType": {
            "description": "The method by which new PMI premium is calculated",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MortgageInsuranceRenewalType"
              }
            ]
          },
          "mortgageInsuranceScheduledCancellationDate": {
            "type": "string",
            "readOnly": true,
            "description": "The date of the last monthly payment that includes a monthly mortgage insurance payment",
            "format": "date",
            "nullable": true
          },
          "mortgageInsuranceStatus": {
            "description": "The status of mortgage insurance for this loan",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MortgageInsuranceStatus"
              }
            ]
          },
          "mortgageInsuranceUpfrontPremiumAmount": {
            "type": "number",
            "description": "The total amount of the upfront mortgage insurance premium due at closing",
            "format": "decimal",
            "nullable": true
          },
          "mortgageInsuranceUpfrontPremiumPercent": {
            "type": "number",
            "readOnly": true,
            "description": "The percentage of the loan amount that is paid upfront for mortgage insurance premium",
            "format": "decimal",
            "nullable": true
          },
          "mortgagePrincipalAndInterestMonthlyPayment": {
            "type": "number",
            "readOnly": true,
            "description": "The projected principal and interest payment of the subject loan, used for qualifying ratios. This is the monthly payment for fixed mortgages, and uses the qualifying rate for ARMs and floating rate HELOCs.",
            "format": "decimal",
            "nullable": true
          },
          "needsChangeInCircumstancesReview": {
            "type": "boolean",
            "readOnly": true,
            "description": "An indicator that a change in circumstances review is needed"
          },
          "needsReprice": {
            "type": "boolean",
            "readOnly": true,
            "description": "An indicator that the loan needs to be repriced",
            "nullable": true
          },
          "negativePrepaidInterestIndicator": {
            "type": "boolean",
            "readOnly": true,
            "description": "Indicates whether the first payment date should be pulled forward by a month and allow negative prepaid interest. This field is set by the first payment date cutoff set in other versioned settings, and can be overridden by the user on a per loan basis.",
            "nullable": true
          },
          "negativePrepaidInterestIndicatorMetadata": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComputedFieldMetadataBoolean"
              }
            ]
          },
          "netSellPrice": {
            "type": "number",
            "readOnly": true,
            "description": "Net sell price",
            "format": "decimal",
            "nullable": true
          },
          "newCDNeededFor3DayReview": {
            "type": "boolean",
            "readOnly": true,
            "description": "New CD needed for 3 day review",
            "nullable": true
          },
          "nonBorrowingOwners": {
            "type": "array",
            "description": "A list of the non-borrowing owner file contacts on the loan",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "nonQualifiedMortgageIndicator": {
            "type": "boolean",
            "description": "Indicates whether the loan is a non-qualified mortgage (i.e. whether the loan doesn't meet the CFPB's qualified mortgage definition)",
            "nullable": true
          },
          "notaryAgents": {
            "type": "array",
            "description": "A list of the notary agent file contacts on the loan",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "notarySigningMethod": {
            "description": "The signing method for the non collateral closing documents",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/NotarySigningMethod"
              }
            ]
          },
          "noticeOfIncompletenessExpirationDate": {
            "type": "string",
            "description": "Date on which the Notice of Incompleteness expires and the loan will be closed as incomplete",
            "format": "date-time",
            "nullable": true
          },
          "noticeOfIncompletenessInitialSentDate": {
            "type": "string",
            "readOnly": true,
            "description": "Date the Notice of Incompleteness was sent to the borrower",
            "format": "date",
            "nullable": true
          },
          "orderedPmiQuoteType": {
            "readOnly": true,
            "description": "The type of PMI quote that was provided - delegated or non-delegated",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PmiOrderType"
              }
            ]
          },
          "orderTitleScenarioStatus": {
            "description": "Order title scenario status",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ScenarioStatus"
              }
            ]
          },
          "otherHousingExpenses": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/OtherHousingExpense"
            }
          },
          "otherPartyOwnsBeneficialInterestInLender": {
            "type": "boolean",
            "description": "Other party on transaction owns beneficial interest in lender",
            "nullable": true
          },
          "otherProposedHousingExpenses": {
            "type": "number",
            "readOnly": true,
            "description": "Other proposed monthly housing expenses (not mortgage, subordinate mortgage, property, home insurance, mortgage insurance monthly payments) for the subject property",
            "format": "decimal",
            "nullable": true
          },
          "otherRefinanceBenefit": {
            "type": "string",
            "description": "Description of the other benefits associated with the loan. Used for net tangible benefit tests.",
            "nullable": true
          },
          "ownedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Property"
            }
          },
          "partiesThatOwnBeneficialInterestInLender": {
            "type": "array",
            "description": "Parties that own beneficial interest in lender",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "guid"
            }
          },
          "partnerBrokers": {
            "type": "array",
            "description": "A list of the partner broker file contacts on the loan. Relevant when loan channel is Wholesale.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "partnerWholesalers": {
            "type": "array",
            "description": "A list of the partner wholesaler file contacts on the loan. Relevant when loan channel is Broker.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "pmiOrderCompletedAt": {
            "type": "string",
            "description": "Timestamp the PMI order was completed",
            "format": "date-time",
            "nullable": true
          },
          "pmiQuotedAt": {
            "type": "string",
            "description": "Timestamp the PMI was quoted",
            "format": "date-time",
            "nullable": true
          },
          "pmiQuoteOrderedAt": {
            "type": "string",
            "description": "Timestamp the PMI quote was ordered",
            "format": "date-time",
            "nullable": true
          },
          "pointOfSaleIdentifier": {
            "type": "string",
            "description": "Unique identifier used to reference this loan in a point of sale system",
            "nullable": true
          },
          "preApprovalRequestedIndicator": {
            "type": "boolean",
            "description": "Indicates whether a preapproval was requested for the loan",
            "nullable": true
          },
          "previousMortgageAgencyCaseNumber": {
            "type": "string",
            "description": "The case number for the borrower's previous government loan",
            "nullable": true
          },
          "previousMortgageAmortizationType": {
            "description": "The amortization type on the borrower's previous mortgage",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanAmortizationType"
              }
            ]
          },
          "previousMortgageBalloonIndicator": {
            "type": "boolean",
            "description": "Indicates whether the borrower's previous mortgage had a balloon payment",
            "nullable": true
          },
          "previousMortgageBorrowerNames": {
            "type": "array",
            "description": "The names of the individuals that were included in the previous mortgage loan",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "previousMortgageBorrowersNotOnSubjectLoan": {
            "type": "array",
            "description": "The names of the individuals who were on the previous mortgage but are not borrowers on the subject loan",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "previousMortgageCurrentHolder": {
            "description": "The current holder of the previous mortgage",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MortgageHolderType"
              }
            ]
          },
          "previousMortgageCurrentPayment": {
            "type": "number",
            "readOnly": true,
            "description": "The current payment on the borrower's previous mortgage loan",
            "format": "decimal",
            "nullable": true
          },
          "previousMortgageCurrentRate": {
            "type": "number",
            "description": "The current rate on the borrower's previous mortgage loan",
            "format": "decimal",
            "nullable": true
          },
          "previousMortgageDebtToIncome": {
            "type": "number",
            "description": "The DTI that was used to originate the borrower's previous mortgage",
            "format": "decimal",
            "nullable": true
          },
          "previousMortgageFinancedMIP": {
            "type": "number",
            "description": "The amount of the MIP that was financed on the previous mortgage",
            "format": "decimal",
            "nullable": true
          },
          "previousMortgageFirstPaymentDate": {
            "type": "string",
            "description": "The first payment date of the previous mortgage",
            "format": "date",
            "nullable": true
          },
          "previousMortgageFromSameLenderIndicator": {
            "type": "boolean",
            "description": "Indicates whether the previous mortgage was from the same lender",
            "nullable": true
          },
          "previousMortgageHolderLoanNumber": {
            "type": "string",
            "description": "The loan number assigned by the holder of the previous mortgage",
            "nullable": true
          },
          "previousMortgageInterestOnlyIndicator": {
            "type": "boolean",
            "description": "Indicates whether the borrower's previous mortgage allowed interest-only payments to be made",
            "nullable": true
          },
          "previousMortgageLenderLoanNumber": {
            "type": "string",
            "description": "The loan number assigned by the lender of the previous mortgage",
            "nullable": true
          },
          "previousMortgageLoanTerm": {
            "type": "integer",
            "description": "The term of the previous mortgage in months",
            "nullable": true
          },
          "previousMortgageLoanToValue": {
            "type": "number",
            "description": "The loan-to-value ratio of the borrower's previous mortgage loan when it was originated",
            "format": "decimal",
            "nullable": true
          },
          "previousMortgageNoteAmount": {
            "type": "number",
            "description": "The note amount of the previous mortgage",
            "format": "decimal",
            "nullable": true
          },
          "previousMortgageNoteDate": {
            "type": "string",
            "description": "The note date on the previous mortgage",
            "format": "date-time",
            "nullable": true
          },
          "previousMortgageNoteRate": {
            "type": "number",
            "description": "The interest rate as it appears on the note of the previous mortgage",
            "format": "decimal",
            "nullable": true
          },
          "previousMortgagePrepaymentPenaltyAmount": {
            "type": "number",
            "description": "Previous mortgage prepayment penalty amount",
            "format": "decimal",
            "nullable": true
          },
          "previousMortgagePurposeType": {
            "description": "Whether the previous mortgage was for the purpose of a purchase or a refinance",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanPurpose"
              }
            ]
          },
          "previousMortgageRefinanceCashOutDeterminationType": {
            "description": "Whether the previous mortgage was cash out, or no or limited cash out",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/RefinanceCashOutDeterminationType"
              }
            ]
          },
          "previousMortgageTexasRefinanceType": {
            "description": "The type of Texas refinance on the previous mortgage",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TexasRefinanceType"
              }
            ]
          },
          "previousMortgageType": {
            "description": "The mortgage type - conventional, FHA, etc - of the previous mortgage",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MortgageType"
              }
            ]
          },
          "previousMortgageUSDADirectLoanIndicator": {
            "type": "boolean",
            "description": "Indicates whether the previous mortgage was a USDA direct loan",
            "nullable": true
          },
          "primaryBorrowerEmailAddress": {
            "type": "string",
            "readOnly": true,
            "description": "The email address of the primary borrower (the borrower who appears first on the loan application)",
            "nullable": true
          },
          "primaryBorrowerFullName": {
            "type": "string",
            "readOnly": true,
            "description": "The full name of the primary borrower (the borrower who appears first on the loan application)",
            "nullable": true
          },
          "primaryBorrowerPhoneNumbers": {
            "type": "array",
            "readOnly": true,
            "description": "Primary borrower phone numbers",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TelephoneNumber"
            }
          },
          "primaryContacts": {
            "description": "A list of the file contacts on the loan that have been indicated as primary for that contact type",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PrimaryContacts"
              }
            ]
          },
          "primaryMortgageBeingRefinanced": {
            "description": "The primary mortgage that is subject to the refinancing process",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Liability"
              }
            ]
          },
          "primaryMortgageBeingRefinancedRef": {
            "type": "string",
            "nullable": true
          },
          "privateMortgageInsuranceProvider": {
            "type": "string",
            "description": "he company that is providing the insurance. Applicable if mortgage insurance is private.",
            "nullable": true
          },
          "proceedsUsedForEnergyPurposesIndicator": {
            "type": "boolean",
            "description": "Indicates whether any of the proceeds will be used for energy improvements on the house, including to pay off other debts previously incurred for energy improvements on the house",
            "nullable": true
          },
          "processVersionId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "processVersionLastUpdatedAt": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "propertySellerName": {
            "type": "string",
            "description": "Name of the entity (person or business) selling the property",
            "nullable": true
          },
          "propertySellers": {
            "type": "array",
            "description": "A list of the property seller file contacts on the loan",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "propertySellerType": {
            "description": "Type of the entity selling the property - either individual or business",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PropertySellerType"
              }
            ]
          },
          "propertyTaxEscrowedIndicator": {
            "type": "boolean",
            "description": "Indicates whether the county property taxes are escrowed",
            "nullable": true
          },
          "propertyTaxMonthlyPayment": {
            "type": "number",
            "description": "The monthly payment for county property taxes",
            "format": "decimal",
            "nullable": true
          },
          "propertyValuations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyValuation"
            }
          },
          "prorations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Proration"
            }
          },
          "publicRecords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PublicRecord"
            }
          },
          "publishingStatus": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanPublishingStatus"
              }
            ]
          },
          "purchaseAdvicePrice": {
            "type": "number",
            "description": "The price specified in the purchase advice, expressed in points, used to determine the total amount funded for the loan",
            "format": "decimal",
            "nullable": true
          },
          "purchaseContingencyDate": {
            "type": "string",
            "description": "Last day that the buyer can back out of a purchase due to inability to obtain financing, as specified in the purchase contract. Also called financing contingency date or loan contingency date.",
            "format": "date",
            "nullable": true
          },
          "purchaseContractDate": {
            "type": "string",
            "description": "Date the purchase contract was signed",
            "format": "date",
            "nullable": true
          },
          "purchasedByInvestorDate": {
            "type": "string",
            "description": "The date the loan was purchased by the investor",
            "format": "date",
            "nullable": true
          },
          "recordedMortgageReceivedDate": {
            "type": "string",
            "description": "The date on which the recorded mortgage was received",
            "format": "date",
            "nullable": true
          },
          "recordingOffices": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "referredBy": {
            "type": "array",
            "description": "The individual or entity that referred the loan to the lender or loan officer",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "refinanceBenefits": {
            "type": "array",
            "readOnly": true,
            "description": "Benefits associated with the loan as automatically determined by the system based on previous mortgage details. Used for net tangible benefit tests.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/MortgageProductBenefitType"
            }
          },
          "refinanceCashOutBenefits": {
            "type": "array",
            "description": "Benefits associated with the loan specifically related to the cash being received. Used for net tangible benefit tests.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/RefinanceCashOutBenefitType"
            }
          },
          "refinanceCashOutBenefitsOtherDescription": {
            "type": "string",
            "description": "Description of other benefits associated with the loan specifically related to the cash being received. Used for net tangible benefit tests.",
            "nullable": true
          },
          "refinanceCashOutDeterminationType": {
            "description": "Determines whether the refinance will result in no or limited cash out, or a significant cash out. Used for loan categorization and underwriting guidelines",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/RefinanceCashOutDeterminationType"
              }
            ]
          },
          "refinancePACELoanPayoffAmount": {
            "type": "number",
            "description": "The amount of the loan proceeds being spent on paying off PACE loans",
            "format": "decimal",
            "nullable": true
          },
          "refinancePrimaryUseOfProceeds": {
            "description": "The primary way in which the proceeds of the refinance will be used",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/UseOfProceeds"
              }
            ]
          },
          "refinancePrimaryUseOfProceedsOtherDescription": {
            "type": "string",
            "description": "Further describes the use of proceeds, if it is not one of the predefined types",
            "nullable": true
          },
          "refinanceReductionInRate": {
            "type": "number",
            "readOnly": true,
            "description": "The reduction in rate associated with the refinance, calculated as the current rate minus the new rate. This field is null if the new rate is higher than or equal to the current rate.",
            "format": "decimal",
            "nullable": true
          },
          "relativeProvidedServices": {
            "type": "array",
            "description": "Relative provided services",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ServiceProviderObligation"
            }
          },
          "renovationCompletedDate": {
            "type": "string",
            "description": "The date the renovation/rehabilitation should be completed.",
            "format": "date",
            "nullable": true
          },
          "renovationConsultants": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "renovationContingencyAmount": {
            "type": "number",
            "readOnly": true,
            "description": "Dollar amount that has been designated as a reserve based on the renovation cost to cover possible overages in repair costs.",
            "format": "decimal",
            "nullable": true
          },
          "renovationContingencyPercent": {
            "type": "number",
            "description": "Percentage of the renovation costs that has been designated as a reserve to cover possible overages in repair costs. ",
            "format": "decimal",
            "nullable": true
          },
          "renovationFinancedAmount": {
            "type": "number",
            "description": "Total amount of renovation funds included in the loan.",
            "format": "decimal",
            "nullable": true
          },
          "renovationLoanIndicator": {
            "type": "boolean",
            "description": "Indicates whether the loan is for a renovation.",
            "nullable": true
          },
          "reoMarketingPartyType": {
            "description": "Identifies the party responsible for marketing the property in case of default.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/REOMarketingPartyType"
              }
            ]
          },
          "repricingScenarioStatus": {
            "readOnly": true,
            "description": "Repricing scenario status",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ScenarioStatus"
              }
            ]
          },
          "requiredPropertyDataReports": {
            "type": "array",
            "description": "Indicates which investors require a property data report even if an appraisal waiver is present",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/RequiredPropertyDataReport"
            }
          },
          "requiredReserves": {
            "type": "number",
            "readOnly": true,
            "description": "The required minimum reserves to close this loan",
            "format": "decimal",
            "nullable": true
          },
          "requiredReservesMetadata": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComputedFieldMetadataDecimal"
              }
            ]
          },
          "rescissionDate": {
            "type": "string",
            "readOnly": true,
            "description": "Date on which the borrower's right to cancel the loan expires. This is calculated as three business days from the closing date.",
            "format": "date",
            "nullable": true
          },
          "rescissionDateMetadata": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComputedFieldMetadataDateOnly"
              }
            ]
          },
          "reservesAmount": {
            "type": "number",
            "readOnly": true,
            "description": "The borrower funds that remain available after the mortgage closes",
            "format": "decimal",
            "nullable": true
          },
          "reservesAmountEstimate": {
            "type": "number",
            "description": "Reserves amount estimate",
            "format": "decimal",
            "nullable": true
          },
          "residualIncome": {
            "type": "number",
            "readOnly": true,
            "description": "The dollar amount of the monthly balance of funds available for family support after meeting the borrower's shelter expenses, debts, and taxes as defined by the VA",
            "format": "decimal",
            "nullable": true
          },
          "runAusScenarioStatus": {
            "readOnly": true,
            "description": "Run AUS scenario status",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ScenarioStatus"
              }
            ]
          },
          "runOrderPmiScenarioStatus": {
            "readOnly": true,
            "description": "Run order PMI scenario status",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ScenarioStatus"
              }
            ]
          },
          "runPmiScenarioStatus": {
            "readOnly": true,
            "description": "Run quote PMI scenario status",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ScenarioStatus"
              }
            ]
          },
          "saleAndLeasebackIndicator": {
            "type": "boolean",
            "description": "Indicates whether an investment property transaction is in a sale and leaseback agreement.",
            "nullable": true
          },
          "salesContractPurchasePrice": {
            "type": "number",
            "description": "Purchase price for the subject property if the loan is a purchase mortgage",
            "format": "decimal",
            "nullable": true
          },
          "sarIssuedNotificationOfValueDate": {
            "type": "string",
            "description": "Date when the Staff Appraisal Reviewer (SAR) issued the Notice of Value (NOV) for the property. Relevant to VA loans.",
            "format": "date",
            "nullable": true
          },
          "scheduledFirstPaymentDate": {
            "type": "string",
            "readOnly": true,
            "description": "The date of the first scheduled mortgage payment to be made by the borrower under the terms of the mortgage",
            "format": "date",
            "nullable": true
          },
          "scheduledFirstPaymentDateMetadata": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComputedFieldMetadataDateOnly"
              }
            ]
          },
          "schoolTaxAssessors": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "schoolTaxEscrowedIndicator": {
            "type": "boolean",
            "description": "Indicates whether the school taxes are escrowed",
            "nullable": true
          },
          "schoolTaxMonthlyPayment": {
            "type": "number",
            "description": "The monthly payment for school taxes",
            "format": "decimal",
            "nullable": true
          },
          "securityInstrumentRiders": {
            "type": "array",
            "readOnly": true,
            "description": "The required riders for loan features features like ARMs, balloon payments, VA loans, condo property types, PUDs, second home financing, 1-4 family property types, or bi-weekly payments. Determined by the system based on amortization type, mortgage type, subject property type, and subject property intended usage",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SecurityInstrumentRiderType"
            }
          },
          "securityInstrumentRidersOtherDescription": {
            "type": "string",
            "description": "Other instrument rider",
            "nullable": true
          },
          "selectedAutomatedUnderwritingSystem": {
            "description": "Selected automated underwriting system",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AutomatedUnderwritingPolicy"
              }
            ]
          },
          "selectedPropertyValuationId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "sellerRealEstateAgents": {
            "type": "array",
            "description": "A list of the seller real estate agent file contacts on the loan",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "sellerSignatoryName": {
            "type": "string",
            "description": "If the seller is a business, the name of the person who signed the purchase contract on behalf of the seller",
            "nullable": true
          },
          "serviceProviderObligations": {
            "type": "array",
            "description": "Select service providers: ",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ServiceProviderObligation"
            }
          },
          "serviceProviderOwnedByRelatives": {
            "type": "boolean",
            "description": "Relative of loan officer owns providing additional services",
            "nullable": true
          },
          "servicers": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "servicesOwnedByRelatives": {
            "type": "array",
            "description": "Services owned by relatives",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ServiceProviderObligation"
            }
          },
          "servicingTransferStatus": {
            "description": "Defines whether the servicing on the loan will be retained or transferred to another party",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ServicingTransferStatus"
              }
            ]
          },
          "shippedToInvestorDate": {
            "type": "string",
            "description": "Date the collateral was sent to the investor.",
            "format": "date",
            "nullable": true
          },
          "shippedToWarehouseDate": {
            "type": "string",
            "readOnly": true,
            "description": "Date the collateral was sent to the warehouse lender.",
            "format": "date",
            "nullable": true
          },
          "signingEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SigningEvent"
            }
          },
          "splitMIUpfrontPremiumPercent": {
            "type": "number",
            "description": "The upfront mortgage insurance premium percent, applies only to split premium mortgage insurance",
            "format": "decimal",
            "nullable": true
          },
          "stakeholdersAffiliatedWithBuilderOrSellerIndicator": {
            "type": "boolean",
            "description": "Indicates preexisting connection between the property’s stakeholders and builder or seller(s), such as a family or a business relationship.",
            "nullable": true
          },
          "stateTaxEscrowedIndicator": {
            "type": "boolean",
            "description": "Indicates whether the state taxes are escrowed",
            "nullable": true
          },
          "stateTaxMonthlyPayment": {
            "type": "number",
            "description": "The monthly payment for state taxes",
            "format": "decimal",
            "nullable": true
          },
          "subjectProperty": {
            "$ref": "#/components/schemas/Property"
          },
          "subjectPropertyDSCR": {
            "type": "number",
            "readOnly": true,
            "description": "The monthly gross income associated with an investment property divided by monthly housing expenses",
            "format": "decimal",
            "nullable": true
          },
          "subjectPropertyDSCREstimate": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "subjectPropertyFoundIndicator": {
            "type": "boolean",
            "description": "In the case of a purchase, whether the borrower has found a subject property",
            "nullable": true
          },
          "submitUCDScenarioStatus": {
            "description": "Submit UCD scenario status",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ScenarioStatus"
              }
            ]
          },
          "subordinateHelocDrawnAmount": {
            "type": "number",
            "readOnly": true,
            "description": "The outstanding HELOC drawn amount for the subject property, derived from either liability or concurrent financing. Only applicable to first liens",
            "format": "decimal",
            "nullable": true
          },
          "subordinateHelocLineAmount": {
            "type": "number",
            "readOnly": true,
            "description": "The outstanding HELOC line amount for the subject property, derived from either liability or concurrent financing. Only applicable to first liens",
            "format": "decimal",
            "nullable": true
          },
          "subordinateLiensMonthlyPrincipalAndInterest": {
            "type": "number",
            "readOnly": true,
            "description": "The sum of all monthly principal and interest payments for subordinate liens on the subject property including the subject loan if applicable",
            "format": "decimal",
            "nullable": true
          },
          "subordinateMortgagePrincipalAndInterestMonthlyPayment": {
            "type": "number",
            "readOnly": true,
            "description": "Total monthly payment for all subordinate liens excluding the subject loan",
            "format": "decimal",
            "nullable": true
          },
          "subprimeIndicator": {
            "type": "boolean",
            "description": "Is this a subprime loan?",
            "nullable": true
          },
          "supplementalPropertyInsuranceEscrowedIndicator": {
            "type": "boolean",
            "nullable": true
          },
          "supplementalPropertyInsuranceMonthlyPayment": {
            "type": "number",
            "description": "Supplemental property insurance monthly payment",
            "format": "decimal",
            "nullable": true
          },
          "surveyors": {
            "type": "array",
            "description": "A list of the surveyor file contacts on the loan",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "thirdPartyOriginatorLoanNumber": {
            "type": "string",
            "description": "The loan number as assigned in the third-party originator platform. Used for brokered loans",
            "nullable": true
          },
          "titleAgents": {
            "type": "array",
            "description": "A list of the title agent file contacts on the loan",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "titleClosingPackageCarrier": {
            "type": "string",
            "description": "The name of the shipping carrier used to send the executed closing package from the title company to the lender",
            "nullable": true
          },
          "titleClosingPackageShippedDate": {
            "type": "string",
            "description": "The date the executed closing package was shipped from the title company to the lender",
            "format": "date",
            "nullable": true
          },
          "titleClosingPackageTrackingNumber": {
            "type": "string",
            "description": "The tracking number assigned by the carrier for the executed closing package shipped from the title company to the lender",
            "nullable": true
          },
          "titleInsuranceProvider": {
            "type": "string",
            "description": "The title agency providing title insurance for the transaction",
            "nullable": true
          },
          "totalAdjustmentsAndOtherCredits": {
            "type": "number",
            "readOnly": true,
            "description": "Computed field that totals adjustments and other credits for LE/CD for a purchase loan. Only used for purchases",
            "format": "decimal",
            "nullable": true
          },
          "totalApplicableLiabilityPayments": {
            "type": "number",
            "readOnly": true,
            "description": "Sum of all liability payments, not including those paid at or before closing or excluded from DTI",
            "format": "decimal",
            "nullable": true
          },
          "totalBaseline": {
            "type": "number",
            "readOnly": true,
            "description": "The total of all costs that were disclosed for this loan that are considered a valid baseline",
            "format": "decimal",
            "nullable": true
          },
          "totalBorrowerClosingCostsPaidBeforeClosing": {
            "type": "number",
            "readOnly": true,
            "description": "The sum of all closing costs that the borrower has paid prior to the closing date",
            "format": "decimal",
            "nullable": true
          },
          "totalBorrowerPaidClosingCosts": {
            "type": "number",
            "readOnly": true,
            "description": "The sum of all closing costs, including prepaids and initial escrow payments, paid by the borrower",
            "format": "decimal",
            "nullable": true
          },
          "totalBorrowerPaidClosingCostsEstimate": {
            "type": "number",
            "description": "An estimate of the total closing costs that the borrower is expected to pay",
            "format": "decimal",
            "nullable": true
          },
          "totalBorrowerPaidClosingCostsWithoutLenderCredits": {
            "type": "number",
            "readOnly": true,
            "description": "The total amount of closing costs paid by the borrower, excluding any credits provided by the lender",
            "format": "decimal",
            "nullable": true
          },
          "totalBorrowerPaidClosingCostsWithoutLenderCreditsEstimate": {
            "type": "number",
            "readOnly": true,
            "description": "An estimate of the total closing costs paid by the borrower, excluding any credits provided by the lender",
            "format": "decimal",
            "nullable": true
          },
          "totalBorrowerPaidFees": {
            "type": "number",
            "readOnly": true,
            "description": "Total borrower paid fees",
            "format": "decimal",
            "nullable": true
          },
          "totalBorrowerPaidFeesEstimate": {
            "type": "number",
            "description": "An estimate of the total fees that the borrower will pay",
            "format": "decimal",
            "nullable": true
          },
          "totalClosingCosts": {
            "type": "number",
            "readOnly": true,
            "description": "Computed field that totals all of the closing costs paid by all parties minus points",
            "format": "decimal",
            "nullable": true
          },
          "totalClosingCostsAmount": {
            "type": "number",
            "readOnly": true,
            "description": "Total of all of the closing costs, including prepaids and initial escrow payments, paid by all parties",
            "format": "decimal",
            "nullable": true
          },
          "totalClosingCostsAmountEstimate": {
            "type": "number",
            "description": "An estimated total of all closing costs, including prepaids and initial escrow payments, to be paid by all parties",
            "format": "decimal",
            "nullable": true
          },
          "totalClosingCostsEstimate": {
            "type": "number",
            "description": "An estimated sum of all closing costs, including prepaids and initial escrow payments, to be paid by all parties",
            "format": "decimal",
            "nullable": true
          },
          "totalDebtBeingPaidOff": {
            "type": "number",
            "readOnly": true,
            "description": "Total debt being paid off at closing",
            "format": "decimal",
            "nullable": true
          },
          "totalFees": {
            "type": "number",
            "readOnly": true,
            "description": "Total paid fees that will be paid on this loan, regardless of the payor",
            "format": "decimal",
            "nullable": true
          },
          "totalFeesEstimate": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "totalFeesPaidToInvestor": {
            "type": "number",
            "readOnly": true,
            "description": "The total amount of all fees paid to the investor upon loan purchase",
            "format": "decimal",
            "nullable": true
          },
          "totalFinanceCharge": {
            "type": "number",
            "readOnly": true,
            "format": "decimal",
            "nullable": true
          },
          "totalHousingExpenses": {
            "type": "number",
            "readOnly": true,
            "description": "Total proposed monthly housing expenses after the subject loan closes",
            "format": "decimal",
            "nullable": true
          },
          "totalHousingExpensesEstimate": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "totalInterestedPartyContributions": {
            "type": "number",
            "readOnly": true,
            "description": "Total interested party contributions",
            "format": "decimal",
            "nullable": true
          },
          "totalInterestedPartyContributionsPercentage": {
            "type": "number",
            "readOnly": true,
            "description": "Total interested party contributions as a percentage of the purchase price",
            "format": "decimal",
            "nullable": true
          },
          "totalLenderCredits": {
            "type": "number",
            "readOnly": true,
            "description": "The total of lender credited points, tolerance cures, etc. These are the non-itemized credits, so this does not include lender paid closing costs",
            "format": "decimal",
            "nullable": true
          },
          "totalLenderCreditsChangeInCircumstance": {
            "type": "boolean",
            "description": "Indicates if total lender credits have changed due to changed circumstances since initial Loan Estimate",
            "nullable": true
          },
          "totalLenderCreditsChangeInCircumstanceDate": {
            "type": "string",
            "description": "Date when total lender credits were modified due to changed circumstances",
            "format": "date-time",
            "nullable": true
          },
          "totalLenderCreditsChangeInCircumstanceReason": {
            "description": "Reason for total lender credit amount change",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ChangeInCircumstanceReason"
              }
            ]
          },
          "totalLenderCreditsEstimate": {
            "type": "number",
            "readOnly": true,
            "description": "An estimate of the total lender credited points, tolerance cures, etc. This does not include lender paid closing costs",
            "format": "decimal",
            "nullable": true
          },
          "totalLenderCreditsWithoutToleranceCures": {
            "type": "number",
            "readOnly": true,
            "format": "decimal",
            "nullable": true
          },
          "totalLenderCreditsWithoutToleranceCuresLastValidBaseline": {
            "type": "number",
            "readOnly": true,
            "format": "decimal",
            "nullable": true
          },
          "totalLiquidAssetValue": {
            "type": "number",
            "readOnly": true,
            "description": "The sum of qualified asset values across all assets",
            "format": "decimal",
            "nullable": true
          },
          "totalMonthlyIncome": {
            "type": "number",
            "readOnly": true,
            "description": "Total monthly income",
            "format": "decimal",
            "nullable": true
          },
          "totalMonthlyLiabilities": {
            "type": "number",
            "readOnly": true,
            "description": "Non-primary or subject housing expense liabilities used for the DTI calculation",
            "format": "decimal",
            "nullable": true
          },
          "totalMonthlyObligation": {
            "type": "number",
            "readOnly": true,
            "description": "Numerator of the DTI ratio, the total monthly obligations of all borrowers on the loan including housing expenses and other liabilities",
            "format": "decimal",
            "nullable": true
          },
          "totalNetIncome": {
            "type": "number",
            "readOnly": true,
            "description": "Total net income of all borrowers on the loan",
            "format": "decimal",
            "nullable": true
          },
          "totalNonItemizedSellerCredit": {
            "type": "number",
            "description": "The total amount of non-itemized credit provided by the seller. This does not include itemized seller paid closing costs",
            "format": "decimal",
            "nullable": true
          },
          "totalTenPercentToleranceCures": {
            "type": "number",
            "readOnly": true,
            "description": "The total amount of cures paid by the lender for a certain bucket of closing costs, when the total cost of fees in that bucket exceeds the estimated cost by more than 10%. This is a regulatory requirement under the TILA-RESPA Integrated Disclosure rule",
            "format": "decimal",
            "nullable": true
          },
          "totalTenPercentToleranceCuresEstimate": {
            "type": "number",
            "description": "An estimate of the total amount of 10% tolerance cures",
            "format": "decimal",
            "nullable": true
          },
          "totalToleranceCures": {
            "type": "number",
            "readOnly": true,
            "description": "The total amount of lender credits given to cure tolerance violations. These are credits given to the borrower when the actual closing costs exceed the estimated costs beyond the tolerance limit",
            "format": "decimal",
            "nullable": true
          },
          "totalToleranceCuresEstimate": {
            "type": "number",
            "description": "The estimated total of lender credits provided as tolerance cures. This is an estimate and may change as the loan progresses",
            "format": "decimal",
            "nullable": true
          },
          "totalToleranceCuresMetadata": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComputedFieldMetadataDecimal"
              }
            ]
          },
          "townPropertyTaxCollectors": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "townTaxEscrowedIndicator": {
            "type": "boolean",
            "description": "Indicates whether the town taxes are escrowed",
            "nullable": true
          },
          "townTaxMonthlyPayment": {
            "type": "number",
            "description": "The monthly payment for town taxes",
            "format": "decimal",
            "nullable": true
          },
          "treatNegativeRentalIncomeAsMonthlyObligationIndicator": {
            "type": "boolean",
            "readOnly": true,
            "description": " Indicates whether the cumulative negative rental income on the loan should be used as a monthly obligation in DTI calculation. Computed automatically based on mortgage type (VA is true, all others are false), but can be manually overridden.",
            "nullable": true
          },
          "treatNegativeRentalIncomeAsMonthlyObligationIndicatorMetadata": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComputedFieldMetadataBoolean"
              }
            ]
          },
          "tridTriggeredDate": {
            "type": "string",
            "readOnly": true,
            "description": "Date that TRID was triggered by all borrowers in UTC-8. If multiple borrowers triggered TRID on different dates, this should be the latest of the borrower trigger dates",
            "format": "date",
            "nullable": true
          },
          "tridTriggeredDateMetadata": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComputedFieldMetadataDateOnly"
              }
            ]
          },
          "tridTriggeredDateTimestamp": {
            "type": "string",
            "description": "This field is the legacy override field for TRIDTriggeredDate",
            "format": "date-time",
            "nullable": true
          },
          "trusteeCompanies": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "ucdGeneratedDateTime": {
            "type": "string",
            "description": "The date and time the most recent UCD XML was generated",
            "format": "date-time",
            "nullable": true
          },
          "underwriterNote": {
            "type": "string",
            "description": "Underwriter note",
            "nullable": true
          },
          "underwriterNoteLastModifiedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "underwriterNoteLastModifiedBy": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "underwritingExceptions": {
            "type": "array",
            "description": "Represent exceptions to underwriting rules that can be approved, approved with conditions, or denied",
            "items": {
              "$ref": "#/components/schemas/UnderwritingException"
            }
          },
          "underwritingExceptionScenarioStatus": {
            "description": "Underwriting exception scenario status",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ScenarioStatus"
              }
            ]
          },
          "underwritingPolicy": {
            "type": "string",
            "readOnly": true,
            "description": "The policy rule that the loan falls under as defined by an administrator.",
            "nullable": true
          },
          "underwrittenUsingDSCRIndicator": {
            "type": "boolean",
            "description": "Indicates whether the loan is being underwritten on the basis of the Debt Service Coverage Ratio (DSCR)",
            "nullable": true
          },
          "universalLoanIdentifier": {
            "type": "string",
            "description": "The computed universal loan identifier for HMDA reporting, based on a lender's legal entity identifier and the loan number",
            "nullable": true
          },
          "unpaidBalanceAtTimeOfSale": {
            "type": "number",
            "description": "The remaining balance on the loan at the time it was sold to an investor",
            "format": "decimal",
            "nullable": true
          },
          "upfrontFHAMipFinanceIndicator": {
            "type": "boolean",
            "description": "Indicates whether the upfront FHA MIP is being financed",
            "nullable": true
          },
          "upfrontFHAMortgageInsurancePremiumAmount": {
            "type": "number",
            "readOnly": true,
            "description": "The upfront FHA mortgage insurance premium amount due at closing",
            "format": "decimal",
            "nullable": true
          },
          "upfrontFHAMortgageInsurancePremiumRefundAmount": {
            "type": "number",
            "readOnly": true,
            "description": "The amount of refund due to the borrower for an FHA to FHA refinance",
            "format": "decimal",
            "nullable": true
          },
          "upfrontInsuranceFeesPaidDate": {
            "type": "string",
            "description": "Date the MI upfront premium is paid, or the FHA MIP is paid to HUD, or VA funding fee is paid to the VA, or the USDA guarantee fee is paid to the USDA",
            "format": "date",
            "nullable": true
          },
          "upfrontMIPOrFFRefundableProRataIndicator": {
            "type": "boolean",
            "description": "Indicates that if the mortgage insurance is terminated early, e.g. via refinance or payment ahead of schedule, that the upfront premium will be refunded to the payer on a pro-rata basis",
            "nullable": true
          },
          "upfrontUSDAGuaranteeFee": {
            "type": "number",
            "readOnly": true,
            "description": "The upfront USDA guarantee fee",
            "format": "decimal",
            "nullable": true
          },
          "upfrontUSDAGuaranteeFeeEstimate": {
            "type": "number",
            "description": "An estimate of the upfront USDA guarantee fee, before the actual guarantee fee has been determined",
            "format": "decimal",
            "nullable": true
          },
          "upfrontVAFundingFee": {
            "type": "number",
            "readOnly": true,
            "description": "The upfront VA funding fee",
            "format": "decimal",
            "nullable": true
          },
          "upfrontVAFundingFeeEstimate": {
            "type": "number",
            "description": "An estimate of the upfront VA funding fee, before the actual funding fee has been determined",
            "format": "decimal",
            "nullable": true
          },
          "usdaCaseNumber": {
            "type": "string",
            "description": "This loan's case number as assigned by the USDA",
            "nullable": true
          },
          "usdaFirstAnnualReviewDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "usdaGuaranteeFeeEscrowedIndicator": {
            "type": "boolean",
            "nullable": true
          },
          "usdaGuaranteeFeeFinancedIndicator": {
            "type": "boolean",
            "description": "Indicates whether any of the upfront USDA guarantee fee is being financed",
            "nullable": true
          },
          "usdaGuaranteeFeeMonthlyPayment": {
            "type": "number",
            "readOnly": true,
            "description": "The monthly payment for the USDA Annual Fee",
            "format": "decimal",
            "nullable": true
          },
          "usdaGuaranteeFeePartiallyFinancedAmount": {
            "type": "number",
            "description": "The amount of the upfront USDA guarantee fee that is being partially financed",
            "format": "decimal",
            "nullable": true
          },
          "usdaGuaranteeFeePartiallyFinancedIndicator": {
            "type": "boolean",
            "description": "Indicates whether the upfront USDA guarantee fee is being partially financed",
            "nullable": true
          },
          "usdaGuaranteePeriodEndDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "usdaRefinanceType": {
            "description": "The applicable USDA refinance program: Streamlined, Non-Streamlined, or Streamlined-Assist",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/USDARefinanceType"
              }
            ]
          },
          "useActualDisbursementDate": {
            "type": "boolean",
            "readOnly": true,
            "description": "Indicates whether the actual disbursement date will be used for all prepaid interest and disclosures. This will not update first payment date.",
            "nullable": true
          },
          "useActualDisbursementDateMetadata": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComputedFieldMetadataBoolean"
              }
            ]
          },
          "userEnteredFannieMaeInvestorFeatureCodes": {
            "type": "array",
            "description": "Fannie Mae specified identifiers used to identify loan features. These should be entered by the lender and will be combined with the inferred identifiers when they’re sent to Fannie Mae",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FannieMaeInvestorFeatureCode"
            }
          },
          "userEnteredFreddieMacInvestorFeatureCodes": {
            "type": "array",
            "description": "Freddie Mac specified identifiers used to identify loan features. These should be entered by the lender and will be combined with the inferred identifiers when they’re sent to Freddie Mac",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FreddieMacInvestorFeatureCode"
            }
          },
          "userLastModifiedAt": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "userLastModifiedBy": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "vaAgencyCaseNumber": {
            "type": "string",
            "description": "This loan's case number for VA",
            "nullable": true
          },
          "vaCoBorrowerMarriedIndicator": {
            "type": "boolean",
            "description": "Indicates whether the co-borrower is married to the borrower. Used for VA loans only",
            "nullable": true
          },
          "vaFundingFeeFinancedIndicator": {
            "type": "boolean",
            "description": "Indicates whether any of the VA funding fee is being financed",
            "nullable": true
          },
          "vaFundingFeePartiallyFinancedAmount": {
            "type": "number",
            "description": "The amount of the upfront VA funding fee that is being partially financed",
            "format": "decimal",
            "nullable": true
          },
          "vaFundingFeePartiallyFinancedIndicator": {
            "type": "boolean",
            "description": "Indicates whether the VA funding fee is being partially financed",
            "nullable": true
          },
          "vaHouseholdSize": {
            "type": "integer",
            "readOnly": true,
            "description": "The size of household at the loan level as defined by the VA. Determined by the system based on borrower using entitlement's marital status and dependents",
            "nullable": true
          },
          "vaHouseholdSizeEstimate": {
            "type": "integer",
            "description": "VA household size estimate",
            "nullable": true
          },
          "vaIrrrlRecoupmentPeriodInMonths": {
            "type": "number",
            "readOnly": true,
            "description": "Recoupment period for this loan, as defined by VA IRRRL guidelines (fees, expenses, and closing costs, excluding prepaids, initial escrow payments, and VA funding fee, all divided by the monthly payment difference between the new and previous loan).",
            "format": "decimal",
            "nullable": true
          },
          "vaRefinanceType": {
            "description": "The type of VA refinance, such as cash-out, IRRRL",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VARefinanceType"
              }
            ]
          },
          "vaResidualIncomeGuidelineAmount": {
            "type": "number",
            "readOnly": true,
            "description": "The dollar amount used as a guideline for assessing residual income for VA loans, based on household size and region of the subject property",
            "format": "decimal",
            "nullable": true
          },
          "vaResidualIncomeGuidelineAmountEstimate": {
            "type": "number",
            "description": "VA residual income guideline amount estimate",
            "format": "decimal",
            "nullable": true
          },
          "varianceToExpectedPurchaseAdvicePrice": {
            "type": "number",
            "readOnly": true,
            "description": "The difference between the best efforts price and the purchase advice price, expressed in percentage points, indicating any variance from the expected loan pricing",
            "format": "decimal",
            "nullable": true
          },
          "villagePropertyTaxCollectors": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "villageTaxEscrowedIndicator": {
            "type": "boolean",
            "description": "Indicates whether the village taxes are escrowed",
            "nullable": true
          },
          "villageTaxMonthlyPayment": {
            "type": "number",
            "description": "The monthly payment for village taxes",
            "format": "decimal",
            "nullable": true
          },
          "volcanoInsuranceEscrowedIndicator": {
            "type": "boolean",
            "description": "Indicates whether the volcano insurance is escrowed",
            "nullable": true
          },
          "volcanoInsuranceMonthlyPayment": {
            "type": "number",
            "description": "The monthly payment for volcano insurance",
            "format": "decimal",
            "nullable": true
          },
          "waterSewerAssessmentEscrowedIndicator": {
            "type": "boolean",
            "nullable": true
          },
          "waterSewerAssessmentMonthlyPayment": {
            "type": "number",
            "description": "Water sewer assessment monthly payment",
            "format": "decimal",
            "nullable": true
          },
          "windAndHailInsuranceEscrowedIndicator": {
            "type": "boolean",
            "description": "Indicates whether the wind and hail insurance is escrowed",
            "nullable": true
          },
          "windAndHailInsuranceMonthlyPayment": {
            "type": "number",
            "readOnly": true,
            "description": "The monthly payment for wind and hail insurance",
            "format": "decimal",
            "nullable": true
          },
          "withdrawalNoticeInitialSentDate": {
            "type": "string",
            "readOnly": true,
            "description": "Date the first withdrawal notice was sent to the borrower",
            "format": "date",
            "nullable": true
          }
        }
      },
      "LoanAmortizationType": {
        "type": "string",
        "example": "FixedRateMortgage",
        "x-enumNames": [
          "FixedRateMortgage",
          "AdjustableRateMortgage",
          "GrowingEquityMortgage",
          "GraduatedPaymentMortgage",
          "StepRateMortgage",
          "Other"
        ],
        "enum": [
          "FixedRateMortgage",
          "AdjustableRateMortgage",
          "GrowingEquityMortgage",
          "GraduatedPaymentMortgage",
          "StepRateMortgage",
          "Other"
        ]
      },
      "LoanAssignedWebhook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "assignees": {
            "type": "array",
            "readOnly": true,
            "items": {
              "type": "string",
              "format": "guid"
            }
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "loanChannel": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanChannel"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "retries": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "sourceType": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSourceType"
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSubscriptionType"
          },
          "userId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "version": {
            "readOnly": true,
            "$ref": "#/components/schemas/ApiVersion"
          }
        }
      },
      "LoanCapitalPartner": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "address": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ]
          },
          "apiIdentifier": {
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "fannieMaeId": {
            "type": "string",
            "description": "Fannie Mae ID",
            "nullable": true
          },
          "fhaIdentifier": {
            "type": "string",
            "nullable": true
          },
          "freddieMacId": {
            "type": "string",
            "description": "Freddie Mac ID",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "integrationType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CapitalPartnerIntegrationType"
              }
            ]
          },
          "mersInterimFunderId": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "partnerType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CapitalPartnerType"
              }
            ]
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          },
          "stateOfIncorporation": {
            "type": "string",
            "nullable": true
          },
          "warehouseLenderDefaultAdvancePercent": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          }
        }
      },
      "LoanChannel": {
        "type": "string",
        "example": "Retail",
        "x-enumNames": [
          "Retail",
          "Wholesale",
          "Broker",
          "Correspondent"
        ],
        "enum": [
          "Retail",
          "Wholesale",
          "Broker",
          "Correspondent"
        ]
      },
      "LoanCreationErrorDetails": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "details": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "message": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "LoanDecision": {
        "type": "string",
        "example": "ClearToClose",
        "x-enumNames": [
          "ClearToClose",
          "ConditionallyApprove",
          "Deny",
          "Suspend"
        ],
        "enum": [
          "ClearToClose",
          "ConditionallyApprove",
          "Deny",
          "Suspend"
        ]
      },
      "LoanDefaultLossPartyType": {
        "type": "string",
        "example": "Investor",
        "x-enumNames": [
          "Investor",
          "Lender",
          "Shared"
        ],
        "enum": [
          "Investor",
          "Lender",
          "Shared"
        ]
      },
      "LoanDelivery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "borrowerReceiptEvents": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/BorrowerReceiptEvent"
            }
          },
          "capitalPartnerName": {
            "type": "string",
            "nullable": true
          },
          "complianceRecordedTimestamp": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "readOnly": true,
            "format": "date-time"
          },
          "deliveryType": {
            "$ref": "#/components/schemas/DeliveryType"
          },
          "disclosureStatus": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DisclosureStatus"
              }
            ]
          },
          "docgenPackageId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "expirationDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "loanOriginatorReceiptEvents": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LoanOriginatorReceiptEvent"
            }
          },
          "manualDisclosureStatus": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ManualDisclosureStatus"
              }
            ]
          },
          "presumedReceivedTimestamp": {
            "type": "string",
            "description": "Presumed received date",
            "format": "date-time",
            "nullable": true
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          },
          "sentTimestamp": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ssplDelivered": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "LoanDenyReason": {
        "type": "string",
        "example": "DebtToIncomeRatio",
        "x-enumNames": [
          "DebtToIncomeRatio",
          "EmploymentHistory",
          "CreditHistory",
          "Collateral",
          "UnverifiableInformation",
          "CreditApplicationIncomplete",
          "MortgageInsuranceDenied",
          "Other",
          "BankruptcyPastOrPresent",
          "DelinquentPastOrPresentCreditObligationsWithOther",
          "UnacceptableTypeOfCreditReferencesProvided",
          "LimitedCreditExperience",
          "NoCreditFile",
          "PoorCreditPerformanceWithUs",
          "InsufficientNumberOfCreditReferencesProvided",
          "IncomeInsufficientForAmountOfCreditRequested",
          "TemporaryOrIrregularEmployment",
          "UnableToVerifyEmployment",
          "UnableToVerifyIncome",
          "UnableToVerifyCreditReferences",
          "UnableToVerifyResidence",
          "InsufficientFundsToCloseTheLoan",
          "LengthOfResidence",
          "TemporaryResidence",
          "CollectionActionOrJudgment",
          "GarnishmentOrAttachment",
          "ForeclosureOrRepossession",
          "InformationFromAConsumerReportingAgency",
          "InsufficientCreditFile",
          "InsufficientDataProperty",
          "LackOfCashReserves",
          "UnacceptablePaymentRecordOnPreviousMortgage",
          "UnacceptableProperty",
          "WithdrawnByApplicant",
          "CollateralUnacceptableAppraisal",
          "CollateralUnacceptableLeaseholdEstate",
          "CollateralCreditNotGranted",
          "DeniedByHUD",
          "DeniedByVA",
          "DeniedByFederalNationalMortgageAssociation",
          "DeniedByHomeLoanMortgageCorporation"
        ],
        "enum": [
          "DebtToIncomeRatio",
          "EmploymentHistory",
          "CreditHistory",
          "Collateral",
          "UnverifiableInformation",
          "CreditApplicationIncomplete",
          "MortgageInsuranceDenied",
          "Other",
          "BankruptcyPastOrPresent",
          "DelinquentPastOrPresentCreditObligationsWithOther",
          "UnacceptableTypeOfCreditReferencesProvided",
          "LimitedCreditExperience",
          "NoCreditFile",
          "PoorCreditPerformanceWithUs",
          "InsufficientNumberOfCreditReferencesProvided",
          "IncomeInsufficientForAmountOfCreditRequested",
          "TemporaryOrIrregularEmployment",
          "UnableToVerifyEmployment",
          "UnableToVerifyIncome",
          "UnableToVerifyCreditReferences",
          "UnableToVerifyResidence",
          "InsufficientFundsToCloseTheLoan",
          "LengthOfResidence",
          "TemporaryResidence",
          "CollectionActionOrJudgment",
          "GarnishmentOrAttachment",
          "ForeclosureOrRepossession",
          "InformationFromAConsumerReportingAgency",
          "InsufficientCreditFile",
          "InsufficientDataProperty",
          "LackOfCashReserves",
          "UnacceptablePaymentRecordOnPreviousMortgage",
          "UnacceptableProperty",
          "WithdrawnByApplicant",
          "CollateralUnacceptableAppraisal",
          "CollateralUnacceptableLeaseholdEstate",
          "CollateralCreditNotGranted",
          "DeniedByHUD",
          "DeniedByVA",
          "DeniedByFederalNationalMortgageAssociation",
          "DeniedByHomeLoanMortgageCorporation"
        ]
      },
      "LoanDisclosuresCompletedWebhook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "disclosureId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "loanChannel": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanChannel"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "retries": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "sourceType": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSourceType"
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSubscriptionType"
          },
          "userId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "version": {
            "readOnly": true,
            "$ref": "#/components/schemas/ApiVersion"
          }
        }
      },
      "LoanDisclosuresConsentReceivedWebhook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "borrowerId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "disclosureId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "loanChannel": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanChannel"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "receivedDate": {
            "type": "string",
            "readOnly": true,
            "format": "date-time"
          },
          "retries": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "sourceType": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSourceType"
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSubscriptionType"
          },
          "userId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "version": {
            "readOnly": true,
            "$ref": "#/components/schemas/ApiVersion"
          }
        }
      },
      "LoanDisclosuresCreatedWebhook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "disclosureId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "loanChannel": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanChannel"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "retries": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "sourceType": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSourceType"
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSubscriptionType"
          },
          "userId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "version": {
            "readOnly": true,
            "$ref": "#/components/schemas/ApiVersion"
          }
        }
      },
      "LoanDisclosuresSentWebhook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "disclosureId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "loanChannel": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanChannel"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "retries": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "sentDate": {
            "type": "string",
            "readOnly": true,
            "format": "date-time"
          },
          "sourceType": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSourceType"
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSubscriptionType"
          },
          "userId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "version": {
            "readOnly": true,
            "$ref": "#/components/schemas/ApiVersion"
          }
        }
      },
      "LoanDisclosuresSignedWebhook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "borrowerId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "disclosureId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "isLender": {
            "type": "boolean",
            "readOnly": true,
            "nullable": true
          },
          "loanChannel": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanChannel"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "retries": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "signedDate": {
            "type": "string",
            "readOnly": true,
            "format": "date-time"
          },
          "sourceType": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSourceType"
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSubscriptionType"
          },
          "userId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "version": {
            "readOnly": true,
            "$ref": "#/components/schemas/ApiVersion"
          }
        }
      },
      "LoanDisclosuresWebhook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "disclosureId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "loanChannel": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanChannel"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "retries": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "sourceType": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSourceType"
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSubscriptionType"
          },
          "userId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "version": {
            "readOnly": true,
            "$ref": "#/components/schemas/ApiVersion"
          }
        }
      },
      "LoanEntitlementRestorationType": {
        "type": "string",
        "example": "InterestRateReductionRefinance",
        "x-enumNames": [
          "InterestRateReductionRefinance",
          "CashoutRefinanceRestoration",
          "EntitlementInquiryOnly",
          "OnetimeRestoration"
        ],
        "enum": [
          "InterestRateReductionRefinance",
          "CashoutRefinanceRestoration",
          "EntitlementInquiryOnly",
          "OnetimeRestoration"
        ]
      },
      "LoanExportType": {
        "type": "string",
        "example": "Mismo34",
        "x-enumNames": [
          "Mismo34",
          "Ucd",
          "FreddieMacUldd",
          "FannieMaeUldd"
        ],
        "enum": [
          "Mismo34",
          "Ucd",
          "FreddieMacUldd",
          "FannieMaeUldd"
        ]
      },
      "LoanFactChangedWebhook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "entityId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "entityType": {
            "type": "string",
            "readOnly": true
          },
          "factName": {
            "type": "string",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "loanChannel": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanChannel"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "retries": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "sourceType": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSourceType"
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSubscriptionType"
          },
          "userId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "version": {
            "readOnly": true,
            "$ref": "#/components/schemas/ApiVersion"
          }
        }
      },
      "LoanFieldDecryptedWebhook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "entityId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "entityType": {
            "type": "string",
            "readOnly": true
          },
          "field": {
            "type": "string",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "loanChannel": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanChannel"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "retries": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "sourceType": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSourceType"
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSubscriptionType"
          },
          "userId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "version": {
            "readOnly": true,
            "$ref": "#/components/schemas/ApiVersion"
          }
        }
      },
      "LoanFileContactSource": {
        "type": "string",
        "example": "Integration",
        "x-enumNames": [
          "Integration",
          "Admin",
          "UserEntered",
          "IntegrationProvided",
          "ComputedField"
        ],
        "enum": [
          "Integration",
          "Admin",
          "UserEntered",
          "IntegrationProvided",
          "ComputedField"
        ]
      },
      "LoanFileContactType": {
        "type": "string",
        "example": "BuyerRealEstateAgent",
        "x-enumNames": [
          "BuyerRealEstateAgent",
          "SellerRealEstateAgent",
          "PropertySeller",
          "TitleAgent",
          "EscrowAgent",
          "NotaryAgent",
          "NonBorrowingOwner",
          "PartnerBroker",
          "PartnerWholesaler",
          "ClosingAgent",
          "MortgageInsuranceCompany",
          "Builder",
          "CountyTaxAssessor",
          "CityTaxAssessor",
          "SchoolTaxAssessor",
          "VillagePropertyTaxCollector",
          "TownPropertyTaxCollector",
          "IRSTaxFormThirdParty",
          "TrusteeCompany",
          "Appraiser",
          "Inspector",
          "HomeInsuranceAgent",
          "FloodInsuranceAgent",
          "HOAMasterInsuranceAgent",
          "AppraisalManagementCompany",
          "FloodDeterminationCompany",
          "Surveyor",
          "EarthquakeInsuranceCompany",
          "FloodInsuranceCompany",
          "HomeownersInsuranceCompany",
          "WindAndHailInsuranceCompany",
          "HomeManufacturer",
          "LiabilityInsuranceAgent",
          "FidelityInsuranceAgent",
          "ClosingAttorney",
          "RecordingOffice",
          "CreditReportAgency",
          "HomeOwnersAssociation",
          "Servicer",
          "Architect",
          "GeneralContractor",
          "AppraiserSupervisor",
          "CorrespondentLender",
          "RenovationConsultant",
          "StateTaxAssessor",
          "FireInsuranceCompany",
          "HurricaneInsuranceCompany",
          "SupplementalInsuranceCompany",
          "VolcanoInsuranceCompany"
        ],
        "enum": [
          "BuyerRealEstateAgent",
          "SellerRealEstateAgent",
          "PropertySeller",
          "TitleAgent",
          "EscrowAgent",
          "NotaryAgent",
          "NonBorrowingOwner",
          "PartnerBroker",
          "PartnerWholesaler",
          "ClosingAgent",
          "MortgageInsuranceCompany",
          "Builder",
          "CountyTaxAssessor",
          "CityTaxAssessor",
          "SchoolTaxAssessor",
          "VillagePropertyTaxCollector",
          "TownPropertyTaxCollector",
          "IRSTaxFormThirdParty",
          "TrusteeCompany",
          "Appraiser",
          "Inspector",
          "HomeInsuranceAgent",
          "FloodInsuranceAgent",
          "HOAMasterInsuranceAgent",
          "AppraisalManagementCompany",
          "FloodDeterminationCompany",
          "Surveyor",
          "EarthquakeInsuranceCompany",
          "FloodInsuranceCompany",
          "HomeownersInsuranceCompany",
          "WindAndHailInsuranceCompany",
          "HomeManufacturer",
          "LiabilityInsuranceAgent",
          "FidelityInsuranceAgent",
          "ClosingAttorney",
          "RecordingOffice",
          "CreditReportAgency",
          "HomeOwnersAssociation",
          "Servicer",
          "Architect",
          "GeneralContractor",
          "AppraiserSupervisor",
          "CorrespondentLender",
          "RenovationConsultant",
          "StateTaxAssessor",
          "FireInsuranceCompany",
          "HurricaneInsuranceCompany",
          "SupplementalInsuranceCompany",
          "VolcanoInsuranceCompany"
        ]
      },
      "LoanInterestRecipient": {
        "type": "string",
        "example": "Lender",
        "x-enumNames": [
          "Lender",
          "Investor"
        ],
        "enum": [
          "Lender",
          "Investor"
        ]
      },
      "LoanLevelBuyupBuydownType": {
        "type": "string",
        "example": "Buyup",
        "x-enumNames": [
          "Buyup",
          "Buydown"
        ],
        "enum": [
          "Buyup",
          "Buydown"
        ]
      },
      "LoanMismoResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "errorDetails": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanCreationErrorDetails"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          }
        }
      },
      "LoanModification": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "effectiveDate": {
            "type": "string",
            "description": "Modification effective date",
            "format": "date",
            "nullable": true
          },
          "firstPaymentDate": {
            "type": "string",
            "description": "Modified first payment date",
            "format": "date",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "loanAmortizationMonthsCount": {
            "type": "integer",
            "description": "Modified amortization period count",
            "nullable": true
          },
          "loanAmortizationType": {
            "description": "Modified amortization type",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanAmortizationType"
              }
            ]
          },
          "loanAmount": {
            "type": "number",
            "description": "Loan amount at modification",
            "format": "decimal",
            "nullable": true
          },
          "maturityDate": {
            "type": "string",
            "description": "Modified maturity date",
            "format": "date",
            "nullable": true
          },
          "noteRate": {
            "type": "number",
            "description": "Modified interest rate",
            "format": "decimal",
            "nullable": true
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          }
        }
      },
      "LoanNoteAddedWebhook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "entityId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "entityType": {
            "type": "string",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "loanChannel": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanChannel"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "noteType": {
            "readOnly": true,
            "$ref": "#/components/schemas/NoteType"
          },
          "retries": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "sourceType": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSourceType"
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSubscriptionType"
          },
          "userId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "version": {
            "readOnly": true,
            "$ref": "#/components/schemas/ApiVersion"
          }
        }
      },
      "LoanOriginatorActingOnBehalfType": {
        "type": "string",
        "example": "Buyer",
        "x-enumNames": [
          "Buyer",
          "Seller"
        ],
        "enum": [
          "Buyer",
          "Seller"
        ]
      },
      "LoanOriginatorReceiptEvent": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "loanOriginatorId"
        ],
        "properties": {
          "expiredTimestamp": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "loanOriginatorId": {
            "type": "string",
            "format": "guid"
          },
          "receivedTimestamp": {
            "type": "string",
            "description": "Actual received date",
            "format": "date-time",
            "nullable": true
          },
          "signedTimestamp": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "LoanProduct": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "alternativeIncomeVerificationType": {
            "type": "string",
            "description": "The income verification method applied to this loan if it is a non-qualified mortgage.",
            "nullable": true
          },
          "alternativeLoanOptions": {
            "type": "array",
            "description": "Alternative loan options considered by the broker for this borrower. Used to generate the anti-steering disclosure for brokers.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AlternativeLoanOption"
            }
          },
          "amiBasedLLPAWaiverEligible": {
            "type": "boolean",
            "description": "Is this loan eligible for LLPA waivers due to qualifying income below AMI?",
            "nullable": true
          },
          "annualPercentageRate": {
            "type": "number",
            "readOnly": true,
            "description": "Annual percentage rate as calculated inclusive of applicable fees",
            "format": "decimal",
            "nullable": true
          },
          "annualPercentageRateEstimate": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "annualPercentageRateMetadata": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComputedFieldMetadataDecimal"
              }
            ]
          },
          "apor": {
            "type": "number",
            "description": "Average prime offer rate",
            "format": "decimal",
            "nullable": true
          },
          "armAdjustmentBasisIndex": {
            "description": "For adjustable rate mortgages only. The index rate that is used to calculate the new interest rate each time it is adjusted",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AdjustmentBasisIndex"
              }
            ]
          },
          "armDisclosedIndexRate": {
            "type": "number",
            "description": "The value of the index rate that was disclosed at origination",
            "format": "decimal",
            "nullable": true
          },
          "armInitialDecreaseCap": {
            "type": "number",
            "description": "For adjustable rate mortgages only. The largest rate decrease allowed at the first adjustment period",
            "format": "decimal",
            "nullable": true
          },
          "armInitialFixedPeriodTermMonthsCount": {
            "type": "integer",
            "description": "For adjustable rate mortgages only. The initial period, in months, for which the interest rate is fixed",
            "nullable": true
          },
          "armInitialIncreaseCap": {
            "type": "number",
            "description": "For adjustable rate mortgages only. The largest rate increase allowed at the first adjustment period",
            "format": "decimal",
            "nullable": true
          },
          "armLifetimeDecreaseCap": {
            "type": "number",
            "description": "For adjustable rate mortgages only. The maximum total cumulative rate decrease allowed over the course of the loan",
            "format": "decimal",
            "nullable": true
          },
          "armLifetimeIncreaseCap": {
            "type": "number",
            "description": "For adjustable rate mortgages only. The maximum total cumulative rate increase allowed over the course of the loan",
            "format": "decimal",
            "nullable": true
          },
          "armMarginAdjustments": {
            "type": "array",
            "readOnly": true,
            "description": "Adjustments originating from pricing engine which represent change directly to the ARM margin rate on a loan",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LoanProductAdjustment"
            }
          },
          "armMarginRate": {
            "type": "number",
            "readOnly": true,
            "description": "The margin that is added to the index rate when the new rate adjustment is calculated",
            "format": "decimal",
            "nullable": true
          },
          "armPeriodicDecreaseCap": {
            "type": "number",
            "description": "For adjustable rate mortgages only. The largest rate decrease allowed at each adjustment period subsequent to the first",
            "format": "decimal",
            "nullable": true
          },
          "armPeriodicIncreaseCap": {
            "type": "number",
            "description": "For adjustable rate mortgages only. The largest rate increase allowed at each adjustment period subsequent to the first",
            "format": "decimal",
            "nullable": true
          },
          "armQualifyingRate": {
            "type": "number",
            "description": "The interest rate used to calculate the monthly payment for qualification purposes",
            "format": "decimal",
            "nullable": true
          },
          "armRateAdjustmentFrequencyMonthsCount": {
            "type": "integer",
            "description": "For adjustable rate mortgages only. The subsequent period length, in months, after which the interest rate is regularly adjusted",
            "nullable": true
          },
          "assumabilityIndicator": {
            "type": "boolean",
            "description": "Indicates whether the loan is assumable by another borrower",
            "nullable": true
          },
          "balloonIndicator": {
            "type": "boolean",
            "description": "Indicates that a final balloon payment is required to fully pay off the loan.",
            "nullable": true
          },
          "balloonPaymentAmount": {
            "type": "number",
            "description": "The dollar amount of the final, or lump sum, balloon payment",
            "format": "decimal",
            "nullable": true
          },
          "bestEffortsPrice": {
            "type": "number",
            "description": "Best efforts price",
            "format": "decimal",
            "nullable": true
          },
          "bonaFideDiscountPoints": {
            "type": "number",
            "readOnly": true,
            "description": "Bona fide discount points",
            "format": "decimal",
            "nullable": true
          },
          "borrowerFinancedFHADiscountPoints": {
            "type": "number",
            "description": "Discount points financed by the borrower, used only in FHA loans.",
            "format": "decimal",
            "nullable": true
          },
          "brokeringThisLoan": {
            "type": "boolean",
            "description": "Are you brokering this loan for another lender",
            "nullable": true
          },
          "closingAdjustments": {
            "type": "array",
            "description": "A list of all of the closing adjustments on the loan",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ClosingAdjustment"
            }
          },
          "committedInvestor": {
            "type": "string",
            "description": "Committed investor",
            "nullable": true
          },
          "comparableNoPrepaymentLoanFees": {
            "type": "number",
            "description": "The fees for a comparable loan without a prepayment penalty",
            "format": "decimal",
            "nullable": true
          },
          "comparableNoPrepaymentLoanInterestRate": {
            "type": "number",
            "description": "The interest rate for a comparable loan without a prepayment penalty",
            "format": "decimal",
            "nullable": true
          },
          "comparableNoPrepaymentLoanPoints": {
            "type": "number",
            "description": "The percentage of discount points for a comparable loan without a prepayment penalty",
            "format": "decimal",
            "nullable": true
          },
          "compensationPaidByType": {
            "description": "Whether the lender or borrower is paying compensation to the LO/broker. This field is for LO compensation in retail channels, and broker compensation in broker or wholesale channels.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CompensationPaidByType"
              }
            ]
          },
          "conversionScheduleType": {
            "description": "Describes when the loan is eligible to convert",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConversionScheduleType"
              }
            ]
          },
          "convertibleIndicator": {
            "type": "boolean",
            "description": "ARM convertible to fixed rate?",
            "nullable": true
          },
          "creditorServicingOfLoanStatementType": {
            "description": "Does the creditor intend to service the loan or transfer servicing",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CreditorServicingOfLoanStatementType"
              }
            ]
          },
          "deficiencyRightsPreservedIndicator": {
            "type": "boolean",
            "description": "When true, indicates that upon the foreclosure sale completion, deficiency rights against the borrowers are preserved",
            "nullable": true
          },
          "deliveryCommitmentType": {
            "description": "Delivery commitment type",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DeliveryCommitmentType"
              }
            ]
          },
          "demandFeatureIndicator": {
            "type": "boolean",
            "description": "When true, indicates that the loan has a demand feature, which permits the creditor to demand early repayment of the loan",
            "nullable": true
          },
          "discountPointsExcludedUnderRegZIndicator": {
            "type": "boolean",
            "description": "Were bona fide discount points charged for this loan excluded from compliance tests under Reg Z?",
            "nullable": true
          },
          "effectiveRateSheetDateTime": {
            "type": "string",
            "description": "Date and time of the published rate sheet used to price the loan product",
            "format": "date-time",
            "nullable": true
          },
          "effectiveRateSheetLockPeriod": {
            "type": "integer",
            "description": "The rate lock period of the effective rate sheet used for pricing. This could differ from the loan's actual lock period in the event of worse case pricing during a relock. ",
            "nullable": true
          },
          "employeeLoanProgramIndicator": {
            "type": "boolean",
            "description": "When true, indicates that the loan is an employee loan",
            "nullable": true
          },
          "escrowAccountRequirementWaivedIndicator": {
            "type": "boolean",
            "description": "Has the lender waived the requirement for an escrow account?",
            "nullable": true
          },
          "externalPriceQuoteId": {
            "type": "string",
            "nullable": true
          },
          "fhaSectionOfActType": {
            "description": "Section of the National Housing Act which defines underwriting guidelines for FHA loans.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/FHASectionOfActType"
              }
            ]
          },
          "firstLienAmount": {
            "type": "number",
            "description": "Balance on the first lien for home. Only used if lienType is second lien or higher.",
            "format": "decimal",
            "nullable": true
          },
          "gainLossAmount": {
            "type": "number",
            "readOnly": true,
            "description": "Gain/loss amount",
            "format": "decimal",
            "nullable": true
          },
          "gainLossPoints": {
            "type": "number",
            "readOnly": true,
            "description": "Gain/loss points",
            "format": "decimal",
            "nullable": true
          },
          "hasOtherNonAmortizingTerms": {
            "type": "boolean",
            "description": "Does this loan have other non-amortizing terms?",
            "nullable": true
          },
          "helocAnnualFee": {
            "type": "number",
            "description": "The dollar amount of an annual fee associated with the loan and charged to the borrower",
            "format": "decimal",
            "nullable": true
          },
          "helocAnnualFeeWaivedInFirstYearIndicator": {
            "type": "boolean",
            "description": "Annual fee waived in first year?",
            "nullable": true
          },
          "helocCreditLimit": {
            "type": "number",
            "description": "The credit limit on the HELOC being originated",
            "format": "decimal",
            "nullable": true
          },
          "helocDrawAmortizationType": {
            "description": "Draw amortization type",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/HELOCDrawAmortizationType"
              }
            ]
          },
          "helocDrawFee": {
            "type": "number",
            "description": "The dollar amount of the transaction fee, including any minimum fee or per-transaction fee that will be charged for a draw on the HELOC.",
            "format": "decimal",
            "nullable": true
          },
          "helocDrawPeriodInMonths": {
            "type": "integer",
            "description": "Draw period (months)",
            "nullable": true
          },
          "helocInitialDrawAmount": {
            "type": "number",
            "description": "The amount the borrower will draw from the HELOC at closing",
            "format": "decimal",
            "nullable": true
          },
          "helocLineFixedOrFloating": {
            "description": "Line fixed or floating?",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/HELOCLineFixedOrFloatingType"
              }
            ]
          },
          "helocMinimumDrawSize": {
            "type": "number",
            "description": "Minimum draw size",
            "format": "decimal",
            "nullable": true
          },
          "helocNumberOfOutstandingDrawsLimit": {
            "type": "integer",
            "description": "Number of outstanding draws limit",
            "nullable": true
          },
          "helocRepaymentPeriodInMonths": {
            "type": "integer",
            "readOnly": true,
            "description": "Repayment period (months)",
            "nullable": true
          },
          "helocRepaymentPeriodInMonthsMetadata": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComputedFieldMetadataUInt16"
              }
            ]
          },
          "helocReturnedCheckFee": {
            "type": "number",
            "description": "The amount that can be charged in the case of a payment made on the HELOC loan being returned for non-sufficient funds.",
            "format": "decimal",
            "nullable": true
          },
          "helocStopPaymentFee": {
            "type": "number",
            "description": "The amount that can be charged when a stop payment is made on a HELOC loan payment",
            "format": "decimal",
            "nullable": true
          },
          "helocTeaserPeriodInMonths": {
            "type": "integer",
            "description": "Teaser period (months)",
            "nullable": true
          },
          "helocTeaserRate": {
            "type": "number",
            "description": "Teaser rate",
            "format": "decimal",
            "nullable": true
          },
          "helocTerminationFee": {
            "type": "number",
            "description": "The fee amount charged when the HELOC transaction is paid off early.",
            "format": "decimal",
            "nullable": true
          },
          "hoepaAnnualPercentageRate": {
            "type": "number",
            "description": "Annual percentage rate for HOEPA determination",
            "format": "decimal",
            "nullable": true
          },
          "hoepaPointsAndFeesThreshold": {
            "type": "number",
            "readOnly": true,
            "description": "Total points and fees threshold for HOEPA determination",
            "format": "decimal",
            "nullable": true
          },
          "hoepaRateThreshold": {
            "type": "number",
            "readOnly": true,
            "description": "Annual percentage rate threshold for HOEPA determination",
            "format": "decimal",
            "nullable": true
          },
          "indexLookbackDays": {
            "type": "integer",
            "description": "Index lookback days",
            "nullable": true
          },
          "interestOnlyIndicator": {
            "type": "boolean",
            "description": "Indicates that the loan terms allow interest-only payments to be made for a specified time period. For HELOCs, this indicates that the draw period is interest only.",
            "nullable": true
          },
          "interestOnlyTermMonthsCount": {
            "type": "integer",
            "description": "For interest only mortgages only. The length of the initial interest only period, in months",
            "nullable": true
          },
          "interestRateBuydownDepositAmount": {
            "type": "number",
            "readOnly": true,
            "description": "Buydown deposit amount",
            "format": "decimal",
            "nullable": true
          },
          "interestRateBuydownFundingSource": {
            "description": "Buydown funding source",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/InterestRateBuydownFundingSource"
              }
            ]
          },
          "interestRateBuydownFundingSourceOtherDescription": {
            "type": "string",
            "description": "A description of the buydown funding source if Other is selected",
            "nullable": true
          },
          "interestRateBuydownPlan": {
            "description": "Buydown plan",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/InterestRateBuydownPlan"
              }
            ]
          },
          "investorName": {
            "type": "string",
            "description": "Best efforts investor",
            "nullable": true
          },
          "investorProductPlanCode": {
            "type": "string",
            "description": "Set by the pricing engine, the code of the investor plan",
            "nullable": true
          },
          "lateChargeFixedAmount": {
            "type": "number",
            "description": "The dollar amount that a borrower is required to pay for failure to make a regular installment within the period specified on the note. This is used when late charge is defined as a flat dollar amount",
            "format": "decimal",
            "nullable": true
          },
          "lateChargeGracePeriodInDays": {
            "type": "integer",
            "description": "The grace period in days for this loan before a late charge will be applied",
            "nullable": true
          },
          "lateChargeMaximumAmount": {
            "type": "number",
            "description": "The maximum monthly late charge amount allowed",
            "format": "decimal",
            "nullable": true
          },
          "lateChargeMinimumAmount": {
            "type": "number",
            "description": "The minimum monthly late charge amount allowed",
            "format": "decimal",
            "nullable": true
          },
          "lateChargePercentage": {
            "type": "number",
            "description": "The percentage that a borrower is required to pay for failure to make a regular installment within the period specified on the note. This is a percentage of the amount specified by the late charge type and is used when the late charge is not a flat dollar",
            "format": "decimal",
            "nullable": true
          },
          "lateChargeType": {
            "description": "The type of late charge that may be applied to the loan. This field also describes the way a late charge on this loan would be calculated",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LateChargeType"
              }
            ]
          },
          "leadSourceId": {
            "type": "string",
            "description": "Pricing lead source id",
            "nullable": true
          },
          "lienType": {
            "description": "Describes the lien priority of the subject mortgage",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LienPriorityType"
              }
            ]
          },
          "loanAmortizationMonthsCount": {
            "type": "integer",
            "description": "How long the loan takes to fully amortize to 0. Note that this is almost always the same as the Term in months. If it is greater than that number, there is a balloon payment at the end",
            "nullable": true
          },
          "loanAmortizationType": {
            "description": "Describes the amortization type - fixed rate, ARM, etc - of the subject mortgage",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanAmortizationType"
              }
            ]
          },
          "loanAmountIncreaseIndicator": {
            "type": "boolean",
            "description": "When true, indicates that the loan amount can increase after closing",
            "nullable": true
          },
          "loanOfficerPrice": {
            "type": "number",
            "readOnly": true,
            "description": "Loan officer price",
            "format": "decimal",
            "nullable": true
          },
          "loanTermMonthsCount": {
            "type": "integer",
            "description": "The loan term, measured in months (e.g. a 30 year loan would have 360 here)",
            "nullable": true
          },
          "loCompensationDollarAmount": {
            "type": "number",
            "readOnly": true,
            "description": "Fixed dollar amount paid to the LO/broker as part of their compensation. This field is for LO compensation in retail channels, and broker compensation in broker or wholesale channels.",
            "format": "decimal",
            "nullable": true
          },
          "loCompensationMaxCap": {
            "type": "number",
            "readOnly": true,
            "description": "Maximum compensation for the LO/broker. This field is for LO compensation in retail channels, and broker compensation in broker or wholesale channels.",
            "format": "decimal",
            "nullable": true
          },
          "loCompensationMinCap": {
            "type": "number",
            "readOnly": true,
            "description": "Minimum compensation for the LO/broker. This field is for LO compensation in retail channels, and broker compensation in broker or wholesale channels.",
            "format": "decimal",
            "nullable": true
          },
          "loCompensationNetDollarAmount": {
            "type": "number",
            "readOnly": true,
            "description": "Total amount earned by the LO/broker, including both percentage and fixed compensation. This field is for LO compensation in retail channels, and broker compensation in broker or wholesale channels.",
            "format": "decimal",
            "nullable": true
          },
          "loCompensationPercent": {
            "type": "number",
            "readOnly": true,
            "description": "Fixed percentage of loan amount paid to the LO/broker as part of their compensation. This field is for LO compensation in retail channels, and broker compensation in broker or wholesale channels.",
            "format": "decimal",
            "nullable": true
          },
          "manualARMMarginAdjustments": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LoanProductAdjustment"
            }
          },
          "manualPriceAdjustments": {
            "type": "array",
            "description": "Manual adjustments representing change to the points on a loan",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LoanProductAdjustment"
            }
          },
          "manualRateAdjustments": {
            "type": "array",
            "description": "Manual adjustments representing change directly to the interest rate on a loan",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LoanProductAdjustment"
            }
          },
          "manualSrpAdjustments": {
            "type": "array",
            "description": "Manual SRP (Service Release Premiums) adjustments",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LoanProductAdjustment"
            }
          },
          "markups": {
            "type": "array",
            "readOnly": true,
            "description": "Markups originating from the pricing engine",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LoanProductMarkup"
            }
          },
          "mortgageInvestorGuidelinesType": {
            "description": "The investor whose guidelines the loan will be underwritten to",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MortgageInvestorGuidelinesType"
              }
            ]
          },
          "mortgageSizeType": {
            "description": "Describes the size of the subject mortgage - conforming, jumbo, etc",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MortgageSizeType"
              }
            ]
          },
          "mortgageType": {
            "description": "Describes the mortgage type - FHA, conventional, etc - of the subject mortgage",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MortgageType"
              }
            ]
          },
          "needsToBeReportedAsHOEPAIndicator": {
            "type": "boolean",
            "readOnly": true,
            "description": "Indicates that this is classified as a high cost loan under HOEPA, which has certain APR and points/fees triggers",
            "nullable": true
          },
          "needsToBeReportedAsHOEPAIndicatorMetadata": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComputedFieldMetadataBoolean"
              }
            ]
          },
          "negativeAmortizationType": {
            "description": "Whether there is any negative amortization on this loan, either potential or scheduled, and which type if so",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/NegativeAmortizationType"
              }
            ]
          },
          "noteRate": {
            "type": "number",
            "readOnly": true,
            "description": "Interest rate as it will appear on the mortgage note",
            "format": "decimal",
            "nullable": true
          },
          "otherLoanAmortization": {
            "type": "string",
            "description": "Further describes the amortization type of the subject mortgage, if it is not one of the predefined types",
            "nullable": true
          },
          "otherMortgageInvestorGuidelines": {
            "type": "string",
            "description": "The investor whose guidelines the loan will be underwritten to, if not in the prescribed list",
            "nullable": true
          },
          "parRate": {
            "type": "number",
            "description": "Par Rate",
            "format": "decimal",
            "nullable": true
          },
          "partialPaymentAllowedIndicator": {
            "type": "boolean",
            "description": "Indicates that the terms of the loan allow principal and interest payments that are less than the amount due.",
            "nullable": true
          },
          "partialPaymentApplicationMethodType": {
            "description": "The method used for applying a partial payment to the loan.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PartialPaymentApplicationMethodType"
              }
            ]
          },
          "paymentIncreaseIndicator": {
            "type": "boolean",
            "description": "When true, indicates that the payments on the loan can increase after the closing",
            "nullable": true
          },
          "points": {
            "type": "number",
            "readOnly": true,
            "description": "Discount points in percentage",
            "format": "decimal",
            "nullable": true
          },
          "pointsInDollars": {
            "type": "number",
            "readOnly": true,
            "description": "Discount points in dollar terms",
            "format": "decimal",
            "nullable": true
          },
          "postAdjustedParPoints": {
            "type": "number",
            "readOnly": true,
            "description": "Post adjusted par points",
            "format": "decimal",
            "nullable": true
          },
          "postAdjustedParPrice": {
            "type": "number",
            "description": "Post adjusted par price",
            "format": "decimal",
            "nullable": true
          },
          "postAdjustedParRate": {
            "type": "number",
            "description": "Post adjusted par rate",
            "format": "decimal",
            "nullable": true
          },
          "prepaymentCalculationTerms": {
            "type": "array",
            "description": "Prepayment calculation terms",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/PrepaymentCalculationTerm"
            }
          },
          "prepaymentExpirationMonthCount": {
            "type": "integer",
            "readOnly": true,
            "description": "The number of months from the loan closing that a prepayment penalty may be imposed. Determined by the longest prepayment penalty months across all calculation terms",
            "nullable": true
          },
          "prepaymentFinanceChargeRefundableIndicator": {
            "type": "boolean",
            "description": "Is the finance charge refundable if the loan is fully prepaid?",
            "nullable": true
          },
          "prepaymentPenaltyDescription": {
            "type": "string",
            "description": "Free form text to describe the prepayment penalty terms",
            "nullable": true
          },
          "prepaymentPenaltyExpirationDate": {
            "type": "string",
            "readOnly": true,
            "description": "The last date when a prepayment penalty may be imposed. Determined by the latest expiration date across all prepayment penalty calculation terms",
            "format": "date",
            "nullable": true
          },
          "prepaymentPenaltyIndicator": {
            "type": "boolean",
            "description": "Indicates whether the loan includes a penalty charged to the borrower in the event of prepayment",
            "nullable": true
          },
          "prepaymentPenaltyLifetimeMaximumAmount": {
            "type": "number",
            "readOnly": true,
            "description": "Maximum dollar amount that can be charged as a prepayment penalty over the life of the loan. Determined by the maximum prepayment penalty amount across all calculation terms",
            "format": "decimal",
            "nullable": true
          },
          "prepaymentPenaltyWaivedAmount": {
            "type": "number",
            "description": "The total amount of the prepayment penalty that was incurred but waived",
            "format": "decimal",
            "nullable": true
          },
          "prepaymentPenaltyWaivedIndicator": {
            "type": "boolean",
            "description": "Indicates whether the prepayment penalty has been waived",
            "nullable": true
          },
          "prepaymentPenaltyWaivedReasonDescription": {
            "type": "string",
            "description": "Describes the reason why a prepayment penalty due from a borrower was waived",
            "nullable": true
          },
          "prepaymentPenaltyWaiverType": {
            "description": "Denotes conditions under which the prepayment penalty is waived",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PrepaymentPenaltyWaiverType"
              }
            ]
          },
          "priceAdjustments": {
            "type": "array",
            "readOnly": true,
            "description": "Adjustments originating from pricing engine which represent change to the points on a loan",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LoanProductAdjustment"
            }
          },
          "pricingEngine": {
            "readOnly": true,
            "description": "Pricing engine",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PricingEngine"
              }
            ]
          },
          "pricingEngineARMMarginRate": {
            "type": "number",
            "description": "The margin that is added to the index rate when the new rate adjustment is calculated",
            "format": "decimal",
            "nullable": true
          },
          "pricingEngineNoteRate": {
            "type": "number",
            "description": "The note rate before manual adjustments are applied",
            "format": "decimal",
            "nullable": true
          },
          "pricingEnginePoints": {
            "type": "number",
            "description": "Discount points before applying manual adjustments",
            "format": "decimal",
            "nullable": true
          },
          "pricingLeadSource": {
            "type": "string",
            "description": "Pricing lead source",
            "nullable": true
          },
          "programEligibilityFailures": {
            "type": "array",
            "readOnly": true,
            "description": "List of guideline failures that make the selected loan product ineligible",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ProgramEligibilityFailure"
            }
          },
          "programName": {
            "type": "string",
            "description": "Program name",
            "nullable": true
          },
          "quotedAtDateTime": {
            "type": "string",
            "description": "Date and time when the selected loan product was effectively quoted, which may not match the effective rate sheet date and time used to price the loan product",
            "format": "date-time",
            "nullable": true
          },
          "quoteId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "rateAdjustments": {
            "type": "array",
            "readOnly": true,
            "description": "Adjustments originating from pricing engine which represent change directly to the interest rate on a loan",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LoanProductAdjustment"
            }
          },
          "rateExpiresAt": {
            "type": "string",
            "description": "Date when the selected price quote expires",
            "format": "date-time",
            "nullable": true
          },
          "rateLockCancelledDate": {
            "type": "string",
            "description": "The date on which the rate lock was cancelled",
            "format": "date",
            "nullable": true
          },
          "rateLockComments": {
            "type": "string",
            "description": "Rate lock comments",
            "nullable": true
          },
          "rateLockedDate": {
            "type": "string",
            "description": "The date on which the rate lock started",
            "format": "date",
            "nullable": true
          },
          "rateLockExpiresDate": {
            "type": "string",
            "description": "The date on which the rate lock expires",
            "format": "date-time",
            "nullable": true
          },
          "rateLockExtensions": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/RateLockExtension"
            }
          },
          "rateLockPeriod": {
            "type": "integer",
            "description": "The number of days that the rate lock is in place for",
            "nullable": true
          },
          "rateLockRequestedDate": {
            "type": "string",
            "description": "The date on which the rate lock was requested",
            "format": "date",
            "nullable": true
          },
          "rateLockStatus": {
            "description": "Rate lock status",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/RateLockStatus"
              }
            ]
          },
          "rateRoundingMethod": {
            "description": "Rate rounding method",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/RateRoundingMethod"
              }
            ]
          },
          "rateSetDateTime": {
            "type": "string",
            "description": " Date and time when a loan's interest rate is locked or finalized, used to determine the applicable APOR for HMDA rate spread calculations",
            "format": "date-time",
            "nullable": true
          },
          "rateSpread": {
            "type": "number",
            "readOnly": true,
            "description": "Difference between annual percentage rate and the average prime offer rate",
            "format": "decimal",
            "nullable": true
          },
          "rateSpreadEstimate": {
            "type": "number",
            "description": "Rate spread estimate",
            "format": "decimal",
            "nullable": true
          },
          "regZExcludedDiscountPoints": {
            "type": "number",
            "description": "The bona fide discount points, expressed as a percent, that are excluded from points and fees calculated in accordance with Regulation Z, Truth in Lending",
            "format": "decimal",
            "nullable": true
          },
          "regZTotalPointsAndFees": {
            "type": "number",
            "readOnly": true,
            "description": "The total amount of points and fees, expressed in dollars, calculated in accordance with Regulation Z, Truth in Lending",
            "format": "decimal",
            "nullable": true
          },
          "regZTotalPointsAndFeesMetadata": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComputedFieldMetadataDecimal"
              }
            ]
          },
          "relocationLoanProgramIndicator": {
            "type": "boolean",
            "description": "Indicates if the loan is part of a corporate relocation program",
            "nullable": true
          },
          "seasonalPaymentFeatureIndicator": {
            "type": "boolean",
            "description": "When true, indicates the loan contains a seasonal payment feature",
            "nullable": true
          },
          "sellSidePriceAdjustments": {
            "type": "array",
            "description": "Sell-side price adjustments",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LoanProductAdjustment"
            }
          },
          "specialGSEProgramTypes": {
            "type": "array",
            "description": "Special GSE programs",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SpecialGSEProgramType"
            }
          },
          "specialRateLockOptions": {
            "type": "string",
            "description": "Special rate lock options",
            "nullable": true
          },
          "srpAdjustments": {
            "type": "array",
            "description": "SRP (Service Release Premiums) adjustments originating from pricing engine",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LoanProductAdjustment"
            }
          },
          "texasRefinanceType": {
            "description": "Texas refinance type",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TexasRefinanceType"
              }
            ]
          },
          "totalConcessions": {
            "type": "number",
            "readOnly": true,
            "description": "The net value of all manual rate/price adjustments with type concession",
            "format": "decimal",
            "nullable": true
          },
          "totalLockExtensionDays": {
            "type": "number",
            "readOnly": true,
            "description": "Total number of lock extension days applied on the loan",
            "format": "decimal",
            "nullable": true
          },
          "useInterestOnlyPaymentForQualifyingIndicator": {
            "type": "boolean",
            "description": "When true, indicates that the interest only payment should be used as the qualifying payment for ratios such as DTI",
            "nullable": true
          },
          "vaLoanType": {
            "description": "VA loan type",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VALoanType"
              }
            ]
          },
          "vaSectionOfActType": {
            "description": "Section of the National Housing Act which defines underwriting guidelines for VA loans.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VASectionOfActType"
              }
            ]
          },
          "warehouseLenderIndicator": {
            "type": "boolean",
            "description": "Is this loan being originated with a warehouse line?",
            "nullable": true
          }
        }
      },
      "LoanProductAddManualAdjustmentBody": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "amount",
          "manualAdjustmentType",
          "type"
        ],
        "properties": {
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isStatic": {
            "type": "boolean",
            "nullable": true
          },
          "loanProgramAdjustmentCapType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanProgramAdjustmentCapType"
              }
            ]
          },
          "manualAdjustmentType": {
            "$ref": "#/components/schemas/LoanProductManualAdjustmentType"
          },
          "netCapIndicator": {
            "type": "boolean",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/LoanProductAdjustmentType"
          }
        }
      },
      "LoanProductAdjustment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "amount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "isStatic": {
            "type": "boolean",
            "nullable": true
          },
          "loanProgramAdjustmentCapType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanProgramAdjustmentCapType"
              }
            ]
          },
          "manualAdjustmentType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanProductManualAdjustmentType"
              }
            ]
          },
          "netCapIndicator": {
            "type": "boolean",
            "nullable": true
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          }
        }
      },
      "LoanProductAdjustmentType": {
        "type": "string",
        "example": "Price",
        "x-enumNames": [
          "Price",
          "Rate",
          "SellSidePrice",
          "SRP",
          "Margin"
        ],
        "enum": [
          "Price",
          "Rate",
          "SellSidePrice",
          "SRP",
          "Margin"
        ]
      },
      "LoanProductEditManualAdjustmentBody": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "amount",
          "manualAdjustmentType",
          "type",
          "adjustmentId"
        ],
        "properties": {
          "adjustmentId": {
            "type": "string",
            "format": "guid"
          },
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isStatic": {
            "type": "boolean",
            "nullable": true
          },
          "loanProgramAdjustmentCapType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanProgramAdjustmentCapType"
              }
            ]
          },
          "manualAdjustmentType": {
            "$ref": "#/components/schemas/LoanProductManualAdjustmentType"
          },
          "netCapIndicator": {
            "type": "boolean",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/LoanProductAdjustmentType"
          }
        }
      },
      "LoanProductManualAdjustmentType": {
        "type": "string",
        "example": "Concession",
        "x-enumNames": [
          "Concession",
          "Other",
          "LockExtension",
          "Relock"
        ],
        "enum": [
          "Concession",
          "Other",
          "LockExtension",
          "Relock"
        ]
      },
      "LoanProductMarkup": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "netMarkupPercent": {
            "type": "number",
            "readOnly": true,
            "format": "decimal",
            "nullable": true
          }
        }
      },
      "LoanProductRemoveManualAdjustmentBody": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "adjustmentId"
        ],
        "properties": {
          "adjustmentId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "LoanProgramAdjustmentCapType": {
        "type": "string",
        "example": "Capped",
        "x-enumNames": [
          "Capped",
          "Uncapped"
        ],
        "enum": [
          "Capped",
          "Uncapped"
        ]
      },
      "LoanPublishingStatus": {
        "type": "string",
        "example": "Publishing",
        "x-enumNames": [
          "Publishing",
          "SuccessfullyPublished",
          "FailedPublishing",
          "MarkedForPublishing",
          "PublishingAborted",
          "RepointInProgress",
          "EnsureVersionConsistency",
          "PublishingCanceled"
        ],
        "enum": [
          "Publishing",
          "SuccessfullyPublished",
          "FailedPublishing",
          "MarkedForPublishing",
          "PublishingAborted",
          "RepointInProgress",
          "EnsureVersionConsistency",
          "PublishingCanceled"
        ]
      },
      "LoanPurpose": {
        "type": "string",
        "example": "Purchase",
        "x-enumNames": [
          "Purchase",
          "Refinance"
        ],
        "enum": [
          "Purchase",
          "Refinance"
        ]
      },
      "LoanReportingAction": {
        "type": "string",
        "example": "LoanCreated",
        "x-enumNames": [
          "LoanCreated",
          "LoanStageChanged",
          "TaskCreated",
          "TaskCancelled",
          "TaskCompleted",
          "TaskReopened",
          "TaskSnoozed",
          "TaskAssigned",
          "TaskClaimed",
          "Other",
          "TaskRemoved"
        ],
        "enum": [
          "LoanCreated",
          "LoanStageChanged",
          "TaskCreated",
          "TaskCancelled",
          "TaskCompleted",
          "TaskReopened",
          "TaskSnoozed",
          "TaskAssigned",
          "TaskClaimed",
          "Other",
          "TaskRemoved"
        ]
      },
      "LoanReportingResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "events": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ReportingEvent"
            }
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          }
        }
      },
      "LoanResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "errorDetails": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanCreationErrorDetails"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "refMappings": {
            "type": "object",
            "readOnly": true,
            "nullable": true,
            "additionalProperties": {
              "type": "string",
              "format": "guid"
            }
          }
        }
      },
      "LoanStage": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "initialStartDate": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "targetDate": {
            "type": "string",
            "readOnly": true,
            "format": "date",
            "nullable": true
          },
          "templateName": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "LoanStageRoutingMethod": {
        "type": "string",
        "example": "LoadBalanced",
        "x-enumNames": [
          "LoadBalanced",
          "UserSelected"
        ],
        "enum": [
          "LoadBalanced",
          "UserSelected"
        ]
      },
      "LoanStageTemplate": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "assignableRoles": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/AssignableRole"
            }
          },
          "dateSelector": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateSelector"
              }
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "lastModifiedAt": {
            "type": "string",
            "readOnly": true,
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "readOnly": true
          },
          "referenceDates": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ReferenceDate"
            }
          },
          "showInDropdown": {
            "type": "boolean",
            "readOnly": true
          },
          "sortOrder": {
            "type": "integer",
            "readOnly": true,
            "format": "int32"
          },
          "userLastModifiedAt": {
            "type": "string",
            "readOnly": true,
            "format": "date-time"
          }
        }
      },
      "LoanStageWebhook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "entityId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "entityType": {
            "type": "string",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "loanChannel": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanChannel"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "newLoanStage": {
            "type": "string",
            "readOnly": true
          },
          "retries": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "sourceType": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSourceType"
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSubscriptionType"
          },
          "userId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "version": {
            "readOnly": true,
            "$ref": "#/components/schemas/ApiVersion"
          }
        }
      },
      "LoanStatus": {
        "type": "string",
        "example": "PreQualified",
        "x-enumNames": [
          "PreQualified",
          "PreApproved",
          "ConditionallyApproved",
          "ClearToClose",
          "PendingDenial",
          "Denied"
        ],
        "enum": [
          "PreQualified",
          "PreApproved",
          "ConditionallyApproved",
          "ClearToClose",
          "PendingDenial",
          "Denied"
        ]
      },
      "LoanSummaryAppraisalStatus": {
        "type": "string",
        "example": "Waived",
        "x-enumNames": [
          "Waived",
          "NotOrdered",
          "Other"
        ],
        "enum": [
          "Waived",
          "NotOrdered",
          "Other"
        ]
      },
      "LoanSummaryDisclosuresStatus": {
        "type": "string",
        "example": "TRIDNotTriggered",
        "x-enumNames": [
          "TRIDNotTriggered",
          "TRIDTriggered",
          "LoanEstimateSent",
          "LoanEstimateDelivered",
          "ITPProvided",
          "ChangeInCircumstanceNeeded",
          "ClosingDisclosureSent",
          "ClosingDisclosureDelivered"
        ],
        "enum": [
          "TRIDNotTriggered",
          "TRIDTriggered",
          "LoanEstimateSent",
          "LoanEstimateDelivered",
          "ITPProvided",
          "ChangeInCircumstanceNeeded",
          "ClosingDisclosureSent",
          "ClosingDisclosureDelivered"
        ]
      },
      "LoanSummaryUnderwritingStatus": {
        "type": "string",
        "example": "NoUWPolicyChosen",
        "x-enumNames": [
          "NoUWPolicyChosen",
          "LPAAccept",
          "LPACaution",
          "LPAOutOfScope",
          "DUAccept",
          "DUCaution",
          "DUOutOfScope",
          "ManualUnderwritePending",
          "ConditionallyApproved",
          "Suspended",
          "Denied",
          "ClearToClose",
          "AUSError",
          "AUSNotRun",
          "LPAAcceptEligible",
          "LPAAcceptIneligible",
          "DUAcceptEligible",
          "DUAcceptIneligible"
        ],
        "enum": [
          "NoUWPolicyChosen",
          "LPAAccept",
          "LPACaution",
          "LPAOutOfScope",
          "DUAccept",
          "DUCaution",
          "DUOutOfScope",
          "ManualUnderwritePending",
          "ConditionallyApproved",
          "Suspended",
          "Denied",
          "ClearToClose",
          "AUSError",
          "AUSNotRun",
          "LPAAcceptEligible",
          "LPAAcceptIneligible",
          "DUAcceptEligible",
          "DUAcceptIneligible"
        ]
      },
      "LoanType": {
        "type": "string",
        "example": "Mortgage",
        "x-enumNames": [
          "Mortgage",
          "HELOC",
          "HomeEquityLoan"
        ],
        "enum": [
          "Mortgage",
          "HELOC",
          "HomeEquityLoan"
        ]
      },
      "LoanUnderwriterDecisionWebhook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "decision": {
            "readOnly": true,
            "$ref": "#/components/schemas/LoanDecision"
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "loanChannel": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanChannel"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "retries": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "sourceType": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSourceType"
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSubscriptionType"
          },
          "userId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "version": {
            "readOnly": true,
            "$ref": "#/components/schemas/ApiVersion"
          }
        }
      },
      "LPAMessageCode": {
        "type": "string",
        "example": "DCH0001",
        "x-enumNames": [
          "DCH0001",
          "DCH0002",
          "DCH0003",
          "DCH0004",
          "DCH0005",
          "DCH0006",
          "DCH0007",
          "DCH0008",
          "DCH0009",
          "DCH0010",
          "DCH0011",
          "DCH0012",
          "DCH0015",
          "DCH0016",
          "DCH0017",
          "DCH0018",
          "DCH0019",
          "DCH0020",
          "DCH0021",
          "DCH0022",
          "DCH0023",
          "DCH0024",
          "DCH0025",
          "DCH0026",
          "DCH0027",
          "DCH0028",
          "DCH0029",
          "DCH0030",
          "DCH0031",
          "DCH0032",
          "DCH0033",
          "DCH0034",
          "DCH0035",
          "DCH0036",
          "DCH0037",
          "DCH0038",
          "DCH0039",
          "DCH0040",
          "DCH0041",
          "DCH0042",
          "DCH0043",
          "DCH0044",
          "DCH0045",
          "DCH0046",
          "DCH0047",
          "DCH0048",
          "DCH0049",
          "DCH0050",
          "DCH0051",
          "DCH0052",
          "DCH0053",
          "DCH0054",
          "DCH0055",
          "DCH0057",
          "DCH0058",
          "DCH0059",
          "DCH0060",
          "DCH0061",
          "DCH0062",
          "DCH0063",
          "DCH0064",
          "DCH0065",
          "DCH0066",
          "DCH0067",
          "DCH0068",
          "DCH0069",
          "DCH0070",
          "DCH0071",
          "DCH0072",
          "DCH0073",
          "DCH0074",
          "DCH0075",
          "DCH0076",
          "DCH0077",
          "DCH0078",
          "DCH0079",
          "DCH0080",
          "DCH0081",
          "DCH0082",
          "DCH0083",
          "DCH0084",
          "DCH0085",
          "DCH0086",
          "DCH0087",
          "DCH0088",
          "DCH0089",
          "DCH0090",
          "DCH0091",
          "DCH0092",
          "DCH0093",
          "DCH0094",
          "DCH0095",
          "DCH0096",
          "DCH0097",
          "DCH0098",
          "DCH0099",
          "DCH0100",
          "DCH0101",
          "DCH0102",
          "DCH0103",
          "DCH0104",
          "DCH0105",
          "DCH0106",
          "DCH0107",
          "DCH0108",
          "DCH0109",
          "DCH0110",
          "DCH0112",
          "DCH0113",
          "DCH0114",
          "DCH0115",
          "DCH0116",
          "DCH0117",
          "DCH0118",
          "DCH0119",
          "DCH0120",
          "DCH0121",
          "DCH0122",
          "DCH0123",
          "DCH0124",
          "DCH0125",
          "DCH0126",
          "DCH0127",
          "DCH0128",
          "DCH0129",
          "DCH0130",
          "DCH0131",
          "DCH0132",
          "DCH0133",
          "DCH0134",
          "DCH0135",
          "DCH0136",
          "DCH0137",
          "DCH0138",
          "DCH0140",
          "DCH0141",
          "DCH0142",
          "DCH0143",
          "DCH0144",
          "DCH0145",
          "DCH0146",
          "DCH0147",
          "DCH0148",
          "DCH0149",
          "DCH0150",
          "DCH0151",
          "DCH0152",
          "DCH0153",
          "DCH0156",
          "DCH0157",
          "DQC0190",
          "DQC0191",
          "DQC0193",
          "DQC0194",
          "DQC0195",
          "DQC0196",
          "DQC0197",
          "DQC0198",
          "DQC0199",
          "DQC0200",
          "DQC0201",
          "DQC0202",
          "DQC0203",
          "DQC0204",
          "DQC0205",
          "DQC0206",
          "DQC0207",
          "DQC0208",
          "DQC0209",
          "DQC0210",
          "DQC0211",
          "DQC0479",
          "DQC0214",
          "DQC0215",
          "DQC0476",
          "DQC0477",
          "DQC0478",
          "DQC0216",
          "DQC0217",
          "DQC0475",
          "DQC0219",
          "DQC0220",
          "DQC0471",
          "DQC0472",
          "DQC0473",
          "DQC0474",
          "DQC0221",
          "DQC0222",
          "DQC0223",
          "DQC0224",
          "DQC0468",
          "DQC0469",
          "DQC0470",
          "DQC0225",
          "DQC0227",
          "DQC0467",
          "DQC0228",
          "DQC0229",
          "DQC0230",
          "DQC0231",
          "DQC0232",
          "DQC0466",
          "DQC0234",
          "DQC0235",
          "DQC0236",
          "DQC0237",
          "DQC0238",
          "DQC0239",
          "DQC0240",
          "DQC0241",
          "DQC0242",
          "DQC0243",
          "DQC0244",
          "DQC0245",
          "DQC0246",
          "DQC0247",
          "DQC0248",
          "DQC0249",
          "DQC0250",
          "DQC0251",
          "DQC0252",
          "DQC0253",
          "DQC0254",
          "DQC0255",
          "DQC0256",
          "DQC0257",
          "DQC0258",
          "DQC0259",
          "DQC0260",
          "DQC0261",
          "DQC0262",
          "DQC0263",
          "DQC0264",
          "DQC0265",
          "DQC0266",
          "DQC0267",
          "DQC0268",
          "DQC0269",
          "DQC0270",
          "DQC0271",
          "DQC0273",
          "DQC0274",
          "DQC0275",
          "DQC0276",
          "DQC0277",
          "DQC0278",
          "DQC0279",
          "DQC0280",
          "DQC0281",
          "DQC0282",
          "DQC0283",
          "DQC0284",
          "DQC0285",
          "DQC0286",
          "DQC0287",
          "DQC0288",
          "DQC0289",
          "DQC0290",
          "DQC0291",
          "DQC0292",
          "DQC0293",
          "DQC0294",
          "DQC0295",
          "DQC0296",
          "DQC0297",
          "DQC0298",
          "DQC0463",
          "DQC0464",
          "DQC0465",
          "DQC0299",
          "DQC0460",
          "DQC0461",
          "DQC0462",
          "DQC0300",
          "DQC0459",
          "DQC0301",
          "DQC0302",
          "DQC0303",
          "DQC0304",
          "DQC0458",
          "DQC0481",
          "DQC0480",
          "DQC0305",
          "DQC0306",
          "DQC0307",
          "DQC0308",
          "DQC0309",
          "DQC0311",
          "DQC0312",
          "DQC0313",
          "DQC0314",
          "DQC0315",
          "DQC0316",
          "DQC0317",
          "DQC0457",
          "DQC0318",
          "DQC0319",
          "DQC0320",
          "DQC0456",
          "DQC0322",
          "DQC0455",
          "DQC0324",
          "DQC0325",
          "DQC0454",
          "DQC0327",
          "DQC0453",
          "DQC0329",
          "DQC0452",
          "DQC0330",
          "DQC0331",
          "DQC0333",
          "DQC0334",
          "DQC0451",
          "DQC0336",
          "DQC0450",
          "DQC0338",
          "DQC0449",
          "DQC0340",
          "DQC0448",
          "DQC0342",
          "DQC0447",
          "DQC0344",
          "DQC0446",
          "DQC0346",
          "DQC0445",
          "DQC0348",
          "DQC0444",
          "DQC0350",
          "DQC0351",
          "DQC0352",
          "DQC0353",
          "DQC0354",
          "DQC0355",
          "DQC0356",
          "DQC0357",
          "DQC0358",
          "DQC0443",
          "DQC0360",
          "DQC0361",
          "DQC0362",
          "DQC0363",
          "DQC0364",
          "DQC0365",
          "DQC0366",
          "DQC0367",
          "DQC0368",
          "DQC0369",
          "DQC0370",
          "DQC0371",
          "DQC0372",
          "DQC0373",
          "DQC0374",
          "DQC0375",
          "DQC0376",
          "DQC0377",
          "DQC0442",
          "DQC0378",
          "DQC0379",
          "DQC0380",
          "DQC0381",
          "DQC0382",
          "DQC0383",
          "DQC0384",
          "DQC0385",
          "DQC0386",
          "DQC0387",
          "DQC0388",
          "DQC0389",
          "DQC0390",
          "DQC0391",
          "DQC0392",
          "DQC0441",
          "DQC0394",
          "DQC0395",
          "DQC0440",
          "DQC0396",
          "DQC0397",
          "DQC0398",
          "DQC0399",
          "DQC0400",
          "DQC0401",
          "DQC0402",
          "DQC0403",
          "DQC0404",
          "DQC0405",
          "DQC0406",
          "DQC0407",
          "DQC0408",
          "DQC0409",
          "DQC0410",
          "DQC0411",
          "DQC0412",
          "DQC0413",
          "DQC0414",
          "DQC0415",
          "DQC0416",
          "DQC0417",
          "DQC0418",
          "DQC0419",
          "DQC0420",
          "DQC0421",
          "DQC0422",
          "DQC0423",
          "DQC0424",
          "DQC0425",
          "DQC0426",
          "DQC0427",
          "DQC0428",
          "DQC0429",
          "DQC0430",
          "DQC0431",
          "DQC0432",
          "DQC0433",
          "DQC0434",
          "DQC0435",
          "DQC0436",
          "DQC0437",
          "DQC0438",
          "DQC0439",
          "DQE0324",
          "DQE0319",
          "DQE0320",
          "DQE0326",
          "DQE0323",
          "DQE0321",
          "DQE0322",
          "DQE0325",
          "DQE0157",
          "DQE0158",
          "DQE0159",
          "DQE0160",
          "DQE0161",
          "DQE0162",
          "DQE0163",
          "DQE0164",
          "DQE0165",
          "DQE0166",
          "DQE0167",
          "DQE0168",
          "DQE0169",
          "DQE0170",
          "DQE0171",
          "DQE0172",
          "DQE0173",
          "DQE0174",
          "DQE0175",
          "DQE0176",
          "DQE0177",
          "DQE0178",
          "DQE0179",
          "DQE0180",
          "DQE0181",
          "DQE0182",
          "DQE0183",
          "DQE0184",
          "DQE0185",
          "DQE0186",
          "DQE0187",
          "DQE0188",
          "DQE0189",
          "DQE0190",
          "DQE0191",
          "DQE0192",
          "DQE0193",
          "DQE0194",
          "DQE0195",
          "DQE0196",
          "DQE0197",
          "DQE0198",
          "DQE0199",
          "DQE0318",
          "DQE0200",
          "DQE0313",
          "DQE0314",
          "DQE0315",
          "DQE0201",
          "DQE0311",
          "DQE0312",
          "DQE0202",
          "DQE0203",
          "DQE0204",
          "DQE0205",
          "DQE0309",
          "DQE0310",
          "DQE0206",
          "DQE0308",
          "DQE0307",
          "DQE0208",
          "DQE0209",
          "DQE0210",
          "DQE0304",
          "DQE0305",
          "DQE0211",
          "DQE0303",
          "DQE0302",
          "DQE0212",
          "DQE0301",
          "DQE0300",
          "DQE0299",
          "DQE0213",
          "DQE0298",
          "DQE0297",
          "DQE0214",
          "DQE0296",
          "DQE0215",
          "DQE0294",
          "DQE0295",
          "DQE0216",
          "DQE0217",
          "DQE0218",
          "DQE0219",
          "DQE0220",
          "DQE0221",
          "DQE0222",
          "DQE0223",
          "DQE0292",
          "DQE0293",
          "DQE0224",
          "DQE0288",
          "DQE0289",
          "DQE0290",
          "DQE0291",
          "DQE0226",
          "DQE0285",
          "DQE0286",
          "DQE0287",
          "DQE0227",
          "DQE0283",
          "DQE0284",
          "DQE0282",
          "DQE0229",
          "DQE0281",
          "DQE0230",
          "DQE0231",
          "DQE0232",
          "DQE0280",
          "DQE0234",
          "DQE0235",
          "DQE0236",
          "DQE0237",
          "DQE0238",
          "DQE0239",
          "DQE0240",
          "DQE0241",
          "DQE0242",
          "DQE0243",
          "DQE0244",
          "DQE0245",
          "DQE0246",
          "DQE0247",
          "DQE0248",
          "DQE0249",
          "DQE0250",
          "DQE0251",
          "DQE0252",
          "DQE0253",
          "DQE0254",
          "DQE0255",
          "DQE0256",
          "DQE0257",
          "DQE0275",
          "DQE0276",
          "DQE0277",
          "DQE0278",
          "DQE0279",
          "DQE0260",
          "DQE0262",
          "DQE0263",
          "DQE0265",
          "DQE0266",
          "DQE0267",
          "DQE0268",
          "DQE0269",
          "DQE0270",
          "DQE0271",
          "DQE0272",
          "DQE0273",
          "DQE0274",
          "DQF0044",
          "DQF0045",
          "DQF0228",
          "DQF0229",
          "DQF0230",
          "DQF0046",
          "DQF0047",
          "DQF0048",
          "DQF0049",
          "DQF0050",
          "DQF0051",
          "DQF0052",
          "DQF0053",
          "DQF0054",
          "DQF0055",
          "DQF0056",
          "DQF0057",
          "DQF0058",
          "DQF0059",
          "DQF0060",
          "DQF0061",
          "DQF0062",
          "DQF0063",
          "DQF0064",
          "DQF0065",
          "DQF0066",
          "DQF0067",
          "DQF0068",
          "DQF0069",
          "DQF0070",
          "DQF0071",
          "DQF0072",
          "DQF0073",
          "DQF0227",
          "DQF0074",
          "DQF0075",
          "DQF0076",
          "DQF0077",
          "DQF0078",
          "DQF0079",
          "DQF0080",
          "DQF0081",
          "DQF0082",
          "DQF0226",
          "DQF0083",
          "DQF0084",
          "DQF0085",
          "DQF0225",
          "DQF0086",
          "DQF0087",
          "DQF0088",
          "DQF0089",
          "DQF0090",
          "DQF0091",
          "DQF0092",
          "DQF0093",
          "DQF0094",
          "DQF0095",
          "DQF0096",
          "DQF0097",
          "DQF0098",
          "DQF0099",
          "DQF0100",
          "DQF0101",
          "DQF0102",
          "DQF0103",
          "DQF0104",
          "DQF0105",
          "DQF0106",
          "DQF0107",
          "DQF0108",
          "DQF0109",
          "DQF0110",
          "DQF0111",
          "DQF0112",
          "DQF0113",
          "DQF0114",
          "DQF0116",
          "DQF0117",
          "DQF0118",
          "DQF0119",
          "DQF0120",
          "DQF0121",
          "DQF0122",
          "DQF0123",
          "DQF0124",
          "DQF0125",
          "DQF0126",
          "DQF0127",
          "DQF0128",
          "DQF0129",
          "DQF0130",
          "DQF0131",
          "DQF0132",
          "DQF0133",
          "DQF0134",
          "DQF0135",
          "DQF0136",
          "DQF0137",
          "DQF0138",
          "DQF0139",
          "DQF0140",
          "DQF0141",
          "DQF0142",
          "DQF0143",
          "DQF0144",
          "DQF0145",
          "DQF0146",
          "DQF0147",
          "DQF0148",
          "DQF0149",
          "DQF0150",
          "DQF0151",
          "DQF0152",
          "DQF0153",
          "DQF0154",
          "DQF0155",
          "DQF0156",
          "DQF0157",
          "DQF0224",
          "DQF0158",
          "DQF0218",
          "DQF0219",
          "DQF0220",
          "DQF0221",
          "DQF0222",
          "DQF0223",
          "DQF0159",
          "DQF0160",
          "DQF0161",
          "DQF0162",
          "DQF0163",
          "DQF0164",
          "DQF0165",
          "DQF0166",
          "DQF0167",
          "DQF0168",
          "DQF0169",
          "DQF0170",
          "DQF0171",
          "DQF0172",
          "DQF0173",
          "DQF0174",
          "DQF0175",
          "DQF0176",
          "DQF0177",
          "DQF0178",
          "DQF0179",
          "DQF0180",
          "DQF0181",
          "DQF0182",
          "DQF0183",
          "DQF0184",
          "DQF0185",
          "DQF0186",
          "DQF0187",
          "DQF0188",
          "DQF0189",
          "DQF0190",
          "DQF0191",
          "DQF0215",
          "DQF0216",
          "DQF0217",
          "DQF0192",
          "DQF0193",
          "DQF0194",
          "DQF0195",
          "DQF0196",
          "DQF0197",
          "DQF0198",
          "DQF0199",
          "DQF0200",
          "DQF0201",
          "DQF0202",
          "DQF0203",
          "DQF0212",
          "DQF0213",
          "DQF0214",
          "DQF0204",
          "DQF0210",
          "DQF0209",
          "DQF0208",
          "DQF0205",
          "DQF0207",
          "DQF0211",
          "DQF0206",
          "DQR0001",
          "DQR0002",
          "DQR0003",
          "DQR0004",
          "DQR0005",
          "DQR0009",
          "DQR0010",
          "DQR0011",
          "DQR0014",
          "DQR0015",
          "FAR0001",
          "FAR0002",
          "FAR0003",
          "FAR0004",
          "FAR0005",
          "FEI0201",
          "FAR0006",
          "FAR0007",
          "FAR0008",
          "FAR0009",
          "FAR0010",
          "FAR0012",
          "FAR0013",
          "FAR0014",
          "FAR0016",
          "FAR0017",
          "FAR0018",
          "FAR0019",
          "FAR0020",
          "FAR0021",
          "FAR0022",
          "FAR0023",
          "FAR0024",
          "FAR0025",
          "FAR0026",
          "FAR0027",
          "FAR0028",
          "FAR0029",
          "FAR0030",
          "FAR0031",
          "FAR0032",
          "FAR0033",
          "FAR0034",
          "FAR0126",
          "FAR0035",
          "FAR0036",
          "FAR0037",
          "FAR0038",
          "FAR0039",
          "FAR0040",
          "FAR0041",
          "FAR0042",
          "FAR0043",
          "FAR0044",
          "FAR0045",
          "FAR0046",
          "FAR0047",
          "FAR0049",
          "FAR0050",
          "FAR0051",
          "FAR0052",
          "FAR0053",
          "FAR0054",
          "FAR0055",
          "FAR0056",
          "FAR0057",
          "FAR0058",
          "FAR0059",
          "FAR0060",
          "FAR0061",
          "FAR0062",
          "FAR0063",
          "FAR0064",
          "FAR0065",
          "FAR0067",
          "FAR0068",
          "FAR0070",
          "FAR0071",
          "FAR0072",
          "FAR0073",
          "FAR0074",
          "FAR0075",
          "FAR0076",
          "FAR0077",
          "FAR0078",
          "FAR0079",
          "FAR0081",
          "FAR0082",
          "FAR0083",
          "FAR0084",
          "FAR0085",
          "FAR0086",
          "FAR0087",
          "FAR0088",
          "FAR0089",
          "FAR0090",
          "FAR0091",
          "FAR0093",
          "FAR0094",
          "FAR0095",
          "FAR0096",
          "FAR0097",
          "FAR0098",
          "FAR0099",
          "FAR0100",
          "FAR0101",
          "FAR0102",
          "FAR0103",
          "FAR0104",
          "FAR0105",
          "FAR0106",
          "FAR0107",
          "FAR0108",
          "FAR0109",
          "FAR0110",
          "FAR0111",
          "FAR0112",
          "FAR0113",
          "FAR0115",
          "FAR0116",
          "FAR0117",
          "FAR0118",
          "FAR0120",
          "FAR0121",
          "FAR0122",
          "FAR0123",
          "FAR0124",
          "FAR0125",
          "FCL0001",
          "FCL0002",
          "FCL0003",
          "FCL0004",
          "FCL0005",
          "FCL0006",
          "FCL0007",
          "FCL0009",
          "FCL0010",
          "FCL0013",
          "FCL0014",
          "FCL0015",
          "FCL0016",
          "FCL0017",
          "FCL0018",
          "FCL0019",
          "FCL0020",
          "FCL0021",
          "FCL0022",
          "FCL0023",
          "FCL0024",
          "FCL0025",
          "FCL0026",
          "FCL0027",
          "FCL0028",
          "FCL0029",
          "FCL0030",
          "FCL0031",
          "FCL0032",
          "FCL0033",
          "FCL0034",
          "FCL0035",
          "FCL0036",
          "FCL0037",
          "FCL0038",
          "FCL0039",
          "FCL0040",
          "FCL0041",
          "FCL0042",
          "FCL0043",
          "FCL0044",
          "FCL0045",
          "FCL0046",
          "FCL0047",
          "FCL0048",
          "FCL0049",
          "FCL0050",
          "FCL0051",
          "FCL0052",
          "FCL0053",
          "FCL0054",
          "FCL0055",
          "FCL0056",
          "FCL0057",
          "FCL0058",
          "FCL0059",
          "FCL0060",
          "FCL0061",
          "FCL0062",
          "FCL0063",
          "FCL0064",
          "FCL0065",
          "FCL0066",
          "FCL0067",
          "FCL0068",
          "FCL0069",
          "FCL0070",
          "FCL0071",
          "FCL0072",
          "FCL0073",
          "FCL0074",
          "FCL0075",
          "FCL0076",
          "FCL0077",
          "FCL0078",
          "FCL0079",
          "FCL0080",
          "FCL0081",
          "FCL0082",
          "FCL0083",
          "FCL0084",
          "FCL0085",
          "FCL0086",
          "FCL0087",
          "FCL0088",
          "FCL0089",
          "FCL0090",
          "FCL0091",
          "FCL0092",
          "FCL0093",
          "FCL0094",
          "FCL0095",
          "FCL0096",
          "FCL0097",
          "FCL0098",
          "FCL0099",
          "FCL0100",
          "FCL0101",
          "FCL0102",
          "FCL0103",
          "FCL0104",
          "FCL0105",
          "FCL0106",
          "FCL0107",
          "FCL0108",
          "FCL0109",
          "FCL0110",
          "FCL0111",
          "FCL0112",
          "FCL0113",
          "FCL0114",
          "FCL0115",
          "FCL0116",
          "FCL0117",
          "FCL0118",
          "FCL0119",
          "FCL0120",
          "FCL0121",
          "FCL0122",
          "FCL0123",
          "FCL0124",
          "FCL0125",
          "FCL0126",
          "FCL0127",
          "FCL0128",
          "FCL0129",
          "FCL0130",
          "FCL0131",
          "FCL0132",
          "FCL0133",
          "FCL0134",
          "FCL0135",
          "FCL0136",
          "FCL0137",
          "FCL0138",
          "FCL0139",
          "FCL0140",
          "FCL0141",
          "FCL0142",
          "FCL0143",
          "FCL0144",
          "FCL0145",
          "FCL0146",
          "FCL0147",
          "FCL0148",
          "FCL0149",
          "FCL0150",
          "FCL0151",
          "FCL0152",
          "FCL0153",
          "FCL0154",
          "FCL0155",
          "FCL0156",
          "FCL0157",
          "FCL0158",
          "FCL0159",
          "FCL0160",
          "FCL0161",
          "FCL0162",
          "FCL0163",
          "FCL0164",
          "FCL0165",
          "FCL0166",
          "FCL0167",
          "FCL0168",
          "FCL0169",
          "FCL0170",
          "FCL0171",
          "FCL0172",
          "FCL0173",
          "FCL0174",
          "FCL0175",
          "FCL0176",
          "FCL0177",
          "FCL0178",
          "FCL0179",
          "FCL0180",
          "FCL0181",
          "FCL0182",
          "FCL0183",
          "FCL0184",
          "FCL0185",
          "FCL0186",
          "FCL0187",
          "FCL0189",
          "FCL0190",
          "FCL0191",
          "FCL0192",
          "FCL0193",
          "FCL0194",
          "FCL0195",
          "FCL0196",
          "FCL0197",
          "FCL0198",
          "FCL0199",
          "FCL0200",
          "FCL0201",
          "FCL0202",
          "FCL0203",
          "FCL0204",
          "FCL0205",
          "FCL0206",
          "FCL0207",
          "FCL0208",
          "FCL0210",
          "FCL0212",
          "FCL0213",
          "FCL0214",
          "FCL0215",
          "FCL0216",
          "FCL0217",
          "FCL0218",
          "FCL0219",
          "FCL0220",
          "FCL0221",
          "FCL0222",
          "FCL0223",
          "FCL0224",
          "FCL0225",
          "FCL0226",
          "FCL0227",
          "FCL0228",
          "FCL0229",
          "FCL0230",
          "FCL0231",
          "FCL0232",
          "FCL0234",
          "FCL0235",
          "FCL0236",
          "FCL0237",
          "FCL0238",
          "FCL0239",
          "FCL0240",
          "FCL0241",
          "FCL0242",
          "FCL0243",
          "FCL0244",
          "FCL0245",
          "FCL0246",
          "FCL0247",
          "FCL0248",
          "FCL0249",
          "FCL0250",
          "FCL0251",
          "FCL0252",
          "FCL0253",
          "FCL0254",
          "FCL0255",
          "FCL0256",
          "FCL0257",
          "FCL0258",
          "FCL0259",
          "FCL0260",
          "FCL0261",
          "FCL0262",
          "FCL0263",
          "FCL0264",
          "FCL0266",
          "FCL0267",
          "FCL0268",
          "FCL0270",
          "FCL0271",
          "FCL0272",
          "FCL0274",
          "FCL0275",
          "FCL0276",
          "FCL0278",
          "FCL0280",
          "FCL0281",
          "FCL0282",
          "FCL0283",
          "FCL0284",
          "FCL0285",
          "FCL0286",
          "FCL0287",
          "FCL0288",
          "FCL0289",
          "FCL0290",
          "FCL0291",
          "FCL0292",
          "FCL0293",
          "FCL0294",
          "FCL0295",
          "FCL0297",
          "FCL0299",
          "FCL0301",
          "FCL0303",
          "FCL0304",
          "FCL0305",
          "FCL0306",
          "FCL0307",
          "FCL0308",
          "FCL0309",
          "FCL0310",
          "FCL0311",
          "FCL0312",
          "FCL0313",
          "FCL0314",
          "FCL0315",
          "FCL0316",
          "FCL0317",
          "FCL0318",
          "FCL0319",
          "FCL0320",
          "FCL0321",
          "FCL0322",
          "FCL0323",
          "FCL0324",
          "FCL0325",
          "FCL0326",
          "FCL0327",
          "FCL0328",
          "FCL0329",
          "FCL0330",
          "FCL0331",
          "FCL0332",
          "FCL0333",
          "FCL0334",
          "FCL0335",
          "FCL0336",
          "FCL0337",
          "FCL0338",
          "FCL0339",
          "FCL0340",
          "FCL0341",
          "FCL0342",
          "FCL0343",
          "FCL0344",
          "FCL0345",
          "FCL0346",
          "FCL0347",
          "FCL0348",
          "FCL0349",
          "FCL0350",
          "FCL0351",
          "FCL0352",
          "FCL0353",
          "FCL0354",
          "FCL0355",
          "FCL0356",
          "FCL0357",
          "FCL0358",
          "FCL0359",
          "FCL0361",
          "FCL0363",
          "FCL0364",
          "FCL0365",
          "FEI0002",
          "FEI0004",
          "FEI0005",
          "FEI0006",
          "FEI0007",
          "FEI0008",
          "FEI0009",
          "FEI0010",
          "FEI0011",
          "FEI0012",
          "FEI0013",
          "FEI0014",
          "FEI0015",
          "FEI0016",
          "FEI0017",
          "FEI0018",
          "FEI0019",
          "FEI0020",
          "FEI0021",
          "FEI0022",
          "FEI0023",
          "FEI0024",
          "FEI0025",
          "FEI0026",
          "FEI0001",
          "FEI0028",
          "FEI0029",
          "FEI0030",
          "FEI0031",
          "FEI0032",
          "FEI0033",
          "FEI0034",
          "FEI0035",
          "FEI0036",
          "FEI0037",
          "FEI0038",
          "FEI0039",
          "FEI0040",
          "FEI0041",
          "FEI0042",
          "FEI0043",
          "FEI0044",
          "FEI0045",
          "FEI0046",
          "FEI0047",
          "FEI0048",
          "FEI0049",
          "FEI0050",
          "FEI0051",
          "FEI0052",
          "FEI0053",
          "FEI0054",
          "FEI0055",
          "FEI0056",
          "FEI0057",
          "FEI0058",
          "FEI0059",
          "FEI0060",
          "FEI0061",
          "FEI0062",
          "FEI0063",
          "FEI0064",
          "FEI0065",
          "FEI0066",
          "FEI0067",
          "FEI0068",
          "FEI0069",
          "FEI0070",
          "FEI0071",
          "FEI0072",
          "FEI0073",
          "FEI0074",
          "FEI0075",
          "FEI0076",
          "FEI0077",
          "FEI0078",
          "FEI0079",
          "FEI0080",
          "FEI0081",
          "FEI0082",
          "FEI0083",
          "FEI0084",
          "FEI0085",
          "FEI0086",
          "FEI0087",
          "FEI0088",
          "FEI0089",
          "FEI0090",
          "FEI0091",
          "FEI0092",
          "FEI0093",
          "FEI0094",
          "FEI0095",
          "FEI0096",
          "FEI0097",
          "FEI0098",
          "FEI0099",
          "FEI0100",
          "DCH0170",
          "FEI0102",
          "FEI0105",
          "FEI0106",
          "FEI0107",
          "FEI0108",
          "FEI0109",
          "FEI0110",
          "FEI0111",
          "FEI0112",
          "FEI0113",
          "FEI0114",
          "FEI0115",
          "FEI0116",
          "FEI0117",
          "FEI0118",
          "FEI0119",
          "FEI0120",
          "FEI0121",
          "FEI0122",
          "FEI0123",
          "FEI0124",
          "FEI0125",
          "FEI0126",
          "FEI0127",
          "FEI0128",
          "FEI0129",
          "FEI0130",
          "FEI0131",
          "FEI0132",
          "FEI0133",
          "FEI0134",
          "FEI0135",
          "FEI0136",
          "FEI0137",
          "FEI0138",
          "FEI0139",
          "FEI0140",
          "FEI0141",
          "FEI0142",
          "FEI0143",
          "FEI0144",
          "FEI0145",
          "FEI0146",
          "FEI0147",
          "FEI0148",
          "FEI0149",
          "FEI0150",
          "FEI0151",
          "FEI0152",
          "FEI0153",
          "FEI0154",
          "FEI0155",
          "FEI0156",
          "FEI0157",
          "FEI0158",
          "FEI0159",
          "FEI0160",
          "FEI0161",
          "FEI0162",
          "FGM0001",
          "FGM0002",
          "FGM0003",
          "FGM0004",
          "FGM0005",
          "FGM0006",
          "FGM0007",
          "FGM0009",
          "FGM0014",
          "FGM0015",
          "FGM0016",
          "FGM0017",
          "FGM0018",
          "FGM0020",
          "FGM0021",
          "FGM0022",
          "FGM0023",
          "FGM0024",
          "FGM0025",
          "FGM0026",
          "FGM0027",
          "FGM0028",
          "FGM0029",
          "FAL0011",
          "FGM0033",
          "FGM0034",
          "FGM0035",
          "FGM0039",
          "FGM0041",
          "FGM0042",
          "FGM0046",
          "FGM0047",
          "FGM0048",
          "FGM0050",
          "FGM0051",
          "FGM0052",
          "FGM0053",
          "FGM0054",
          "FGM0055",
          "FGM0056",
          "FGM0059",
          "FGM0060",
          "FGM0061",
          "FGM0062",
          "FGM0064",
          "FGM0065",
          "FGM0066",
          "FGM0067",
          "FGM0068",
          "FGM0069",
          "FGM0070",
          "FGM0071",
          "FGM0072",
          "FGM0073",
          "FGM0074",
          "FGM0075",
          "FGM0076",
          "FGM0078",
          "FGM0079",
          "FGM0080",
          "FGM0081",
          "FGM0082",
          "FGM0083",
          "FGM0103",
          "FGM0084",
          "FGM0159",
          "FGM0156",
          "FGM0157",
          "FGM0158",
          "FGM0160",
          "FQM0161",
          "FQM0162",
          "FGM0163",
          "FGM0164",
          "FGM0165",
          "FGM0166",
          "FGM0167",
          "FGM0168",
          "FGM0169",
          "FGM0170",
          "FGM0171",
          "FGM0173",
          "FGM0174",
          "FAL0020",
          "FGM0087",
          "FGM0088",
          "FGM0089",
          "FGM0090",
          "FGM0091",
          "FGM0092",
          "FGM0093",
          "FGM0102",
          "FGM0094",
          "FGM0095",
          "FGM0096",
          "FAL0009",
          "FGM0100",
          "FGM0101",
          "FGM0099",
          "FMI0014",
          "FMI0015",
          "FMI0016",
          "FMI0017",
          "FMI0021",
          "FMI0022",
          "FMI0023",
          "FMI0025",
          "FMI0026",
          "FMI0027",
          "FMI0028",
          "FMI0029",
          "FMI0030",
          "FMI0031",
          "FMI0032",
          "FMI0033",
          "FMI0034",
          "FMI0035",
          "FMI0036",
          "FMI0037",
          "FMI0038",
          "FMI0039",
          "FMI0040",
          "FPA0001",
          "FPA0002",
          "FPA0003",
          "FPA0004",
          "FPA0005",
          "FPA0006",
          "FPA0007",
          "FPA0008",
          "FPA0009",
          "FPA0010",
          "FPA0011",
          "FPA0012",
          "FPA0013",
          "FPA0014",
          "FPA0015",
          "FPA0016",
          "FPA0018",
          "FPA0019",
          "FPA0020",
          "FPA0021",
          "FPA0022",
          "FPA0023",
          "FPA0024",
          "FPA0025",
          "FPA0026",
          "FPA0027",
          "FPA0028",
          "FPA0029",
          "FPA0030",
          "FPA0031",
          "FPA0032",
          "FPA0033",
          "FPA0034",
          "FPA0035",
          "FPA0036",
          "FPA0037",
          "FPA0038",
          "FPA0039",
          "FPA0040",
          "FPA0041",
          "FPA0042",
          "FPA0043",
          "FPA0044",
          "FPA0045",
          "FPA0046",
          "FPA0047",
          "FPA0048",
          "FPA0049",
          "FPA0050",
          "FPA0051",
          "FPA0053",
          "FPA0054",
          "FPA0057",
          "FPA0058",
          "FPA0059",
          "FPA0066",
          "FPA0067",
          "FPA0068",
          "FPA0069",
          "FPA0072",
          "FPA0073",
          "FPA0074",
          "FPA0077",
          "FPA0078",
          "FPA0079",
          "FPA0080",
          "FPA0081",
          "FPA0082",
          "FPA0084",
          "FPA0085",
          "FPA0202",
          "PLP0015",
          "PLP0016",
          "PLP0017",
          "PLP0018",
          "PLP0197",
          "PLP0198",
          "PLP0199",
          "PLP0200",
          "PLP0201",
          "PLP0202",
          "PLP0203",
          "PLP0204",
          "PLP0205",
          "PLP0206",
          "PLP0019",
          "PLP0020",
          "PLP0021",
          "PLP0022",
          "PLP0207",
          "PLP0023",
          "PLP0024",
          "PLP0026",
          "PLP0027",
          "PLP0028",
          "PLP0029",
          "PLP0030",
          "PLP0031",
          "PLP0032",
          "PLP0033",
          "PLP0034",
          "PLP0035",
          "PLP0036",
          "PLP0037",
          "PLP0038",
          "PLP0039",
          "PLP0040",
          "PLP0041",
          "PLP0042",
          "PLP0043",
          "PLP0044",
          "PLP0045",
          "PLP0046",
          "PLP0047",
          "PLP0048",
          "PLP0049",
          "PLP0050",
          "PLP0051",
          "PLP0052",
          "PLP0053",
          "PLP0054",
          "PLP0055",
          "PLP0056",
          "PLP0057",
          "PLP0058",
          "PLP0059",
          "PLP0060",
          "PLP0061",
          "PLP0062",
          "PLP0063",
          "PLP0064",
          "PLP0065",
          "PLP0066",
          "PLP0067",
          "PLP0068",
          "PLP0069",
          "PLP0070",
          "PLP0071",
          "PLP0072",
          "PLP0073",
          "PLP0074",
          "PLP0075",
          "PLP0076",
          "PLP0077",
          "PLP0078",
          "PLP0160",
          "PLP0161",
          "PLP0100",
          "PLP0196",
          "PLP0195",
          "PLP0194",
          "PLP0193",
          "PLP0192",
          "PLP0191",
          "PLP0190",
          "PLP0189",
          "PLP0188",
          "PLP0187",
          "PLP0186",
          "PLP0185",
          "PLP0184",
          "PLP0183",
          "PLP0182",
          "PLP0181",
          "PLP0180",
          "PLP0179",
          "PLP0178",
          "PLP0177",
          "PLP0176",
          "PLP0175",
          "PLP0174",
          "PLP0173",
          "PLP0172",
          "PLP0171",
          "PLP0170",
          "PLP0169",
          "PLP0168",
          "PLP0167",
          "PLP0166",
          "PLP0165",
          "PLP0164",
          "PLP0163",
          "PLP0162",
          "PLP0210",
          "PLP0079",
          "PLP0080",
          "PLP0081",
          "PLP0082",
          "PLP0083",
          "PLP0084",
          "PLP0085",
          "PLP0086",
          "PLP0087",
          "PLP0088",
          "PLP0089",
          "PLP0090",
          "PLP0091",
          "PLP0092",
          "PLP0093",
          "PLP0094",
          "PLP0095",
          "PLP0096",
          "PLP0097",
          "PLP0098",
          "PLP0099",
          "PLP0208",
          "PLP0101",
          "PLP0102",
          "PLP0103",
          "PLP0104",
          "PLP0105",
          "PLP0107",
          "PLP0108",
          "PLP0109",
          "PLP0110",
          "PLP0111",
          "PLP0112",
          "PLP0113",
          "PLP0114",
          "PLP0115",
          "PLP0116",
          "PLP0117",
          "PLP0118",
          "PLP0119",
          "PLP0120",
          "PLP0121",
          "PLP0122",
          "PLP0123",
          "PLP0124",
          "PLP0125",
          "PLP0126",
          "PLP0127",
          "PLP0128",
          "PLP0129",
          "PLP0130",
          "PLP0131",
          "PLP0132",
          "PLP0133",
          "PLP0134",
          "PLP0159",
          "PLP0135",
          "PLP0136",
          "PLP0137",
          "PLP0138",
          "PLP0139",
          "PLP0140",
          "PLP0141",
          "PLP0142",
          "PLP0143",
          "PLP0144",
          "PLP0145",
          "PLP0146",
          "PLP0147",
          "PLP0148",
          "PLP0149",
          "PLP0150",
          "PLP0151",
          "PLP0152",
          "PLP0153",
          "PLP0154",
          "PLP0155",
          "PLP0156",
          "PLP0157",
          "PLP0158",
          "PLP0209",
          "PUR0001",
          "PUR0002",
          "PUR0003",
          "PUR0004",
          "PUR0005",
          "PUR0006",
          "PUR0007",
          "PUR0008",
          "PUR0009",
          "PUR0010",
          "PUR0011",
          "PUR0012",
          "PUR0013",
          "PUR0014",
          "PUR0015",
          "PUR0016",
          "PUR0017",
          "PUR0018",
          "PUR0019",
          "PUR0020",
          "PUR0021",
          "PUR0022",
          "PUR0023",
          "PUR0024",
          "PUR0025",
          "PUR0026",
          "PUR0027",
          "PUR0028",
          "PUR0029",
          "PUR0030",
          "PUR0031",
          "PUR0032",
          "PUR0033",
          "PUR0034",
          "PUR0035",
          "PUR0036",
          "PUR0037",
          "PUR0038",
          "PUR0039",
          "PUR0040",
          "PUR0041",
          "PUR0042",
          "PUR0043",
          "PUR0044",
          "PUR0045",
          "PUR0046",
          "PUR0047",
          "PUR0048",
          "PUR0049",
          "PUR0050",
          "PUR0051",
          "PUR0052",
          "PUR0053",
          "PUR0054",
          "PUR0055",
          "PUR0056",
          "PUR0057",
          "PUR0058",
          "PUR0059",
          "PUR0060",
          "PUR0061",
          "PUR0062",
          "PUR0063",
          "PUR0064",
          "PUR0065",
          "PUR0066",
          "PUR0067",
          "PUR0068",
          "PUR0069",
          "PUR0070",
          "PUR0071",
          "PUR0072",
          "PUR0073",
          "PUR0074",
          "PUR0075",
          "PUR0076",
          "PUR0077",
          "PUR0078",
          "PUR0079",
          "PUR0080",
          "PUR0081",
          "PUR0082",
          "PUR0083",
          "PUR0084",
          "PUR0085",
          "PUR0086",
          "PUR0087",
          "PUR0088",
          "PUR0089",
          "PUR0090",
          "PUR0091",
          "PUR0092",
          "PUR0093",
          "PUR0094",
          "PUR0095",
          "PUR0096",
          "PUR0097",
          "PUR0098",
          "PUR0099",
          "PUR0100",
          "PUR0101",
          "PUR0102",
          "PUR0103",
          "PUR0104",
          "PUR0105",
          "PUR0108",
          "PUR0109",
          "PUR0111",
          "PUR0112",
          "PUR0113",
          "PUR0114",
          "PUR0115",
          "PUR0116",
          "PUR0117",
          "PUR0118",
          "PUR0119",
          "PUR0120",
          "PUR0121",
          "PUR0122",
          "PUR0123",
          "PUR0124",
          "PUR0125",
          "PUR0126",
          "PUR0127",
          "PUR0128",
          "PUR0129",
          "PUR0130",
          "PUR0131",
          "PUR0132",
          "PUR0133",
          "PUR0134",
          "PUR0135",
          "PUR0136",
          "PUR0137",
          "PUR0138",
          "PUR0139",
          "PUR0140",
          "PUR0141",
          "PUR0142",
          "PUR0143",
          "PUR0144",
          "PUR0145",
          "PUR0146",
          "PUR0147",
          "PUR0148",
          "PUR0149",
          "PUR0150",
          "PUR0151",
          "PUR0152",
          "PUR0153",
          "PUR0154",
          "PUR0155",
          "PUR0156",
          "PUR0157",
          "PUR0158",
          "PUR0159",
          "PUR0160",
          "PUR0161",
          "PUR0162",
          "PUR0163",
          "PUR0164",
          "PUR0165",
          "PUR0166",
          "PUR0167",
          "PUR0168",
          "PUR0169",
          "PUR0170",
          "PUR0171",
          "PUR0172",
          "PUR0173",
          "PUR0174",
          "PUR0175",
          "PUR0176",
          "PUR0177",
          "PUR0178",
          "PUR0179",
          "PUR0180",
          "PUR0181",
          "PUR0182",
          "PUR0183",
          "DQE0142",
          "DQE0048",
          "DQE0004",
          "DQE0006",
          "DQE0054",
          "DQE0009",
          "DQE0051",
          "DQE0010",
          "DQE0140",
          "DQE0019",
          "DQE0154",
          "DQE0144",
          "DQE0074",
          "DQE0075",
          "DQE0017",
          "DQE0071",
          "DQE0328",
          "DQE0095",
          "DQE0038",
          "DQE0029",
          "DQE0003",
          "DQE0039",
          "DQE0040",
          "DQE0041",
          "DQE0043",
          "DQE0143",
          "DQE0044",
          "DQE0069",
          "DQE0066",
          "DQE0080",
          "DQE0082",
          "DQE0083",
          "DQE0088",
          "DQE0155",
          "DQE0090",
          "DQE0091",
          "DQE0092",
          "DQE0139",
          "DQE0148",
          "DQE0045",
          "DQE0070",
          "DQC0088",
          "DQC0137",
          "DQC0017",
          "DQC0020",
          "DQC0077",
          "DQC0145",
          "DQC0112",
          "DQC0093",
          "DQC0006",
          "DQC0007",
          "DQC0009",
          "DQC0010",
          "DQC0171",
          "DQC0012",
          "DQC0153",
          "DQC0167",
          "DQC0078",
          "DQC0174",
          "DQC0003",
          "DQC0072",
          "DQC0079",
          "DQC0098",
          "DQC0483",
          "DQC0080",
          "DQC0081",
          "DQC0026",
          "DQC0014",
          "DQC0069",
          "DQC0163",
          "DQC0022",
          "DQC0023",
          "DQC0028",
          "DQC0165",
          "DQC0029",
          "DQC0030",
          "DQC0032",
          "DQC0036",
          "DQC0035",
          "DQC0037",
          "DQC0042",
          "DQC0082",
          "DQC0083",
          "DQC0084",
          "DQC0085",
          "DQC0066",
          "DQC0043",
          "DQC0038",
          "DQC0039",
          "DQC0040",
          "DQC0115",
          "DQC0054",
          "DQC0168",
          "DQC0089",
          "DQC0090",
          "DQC0094",
          "DQC0073",
          "DQC0119",
          "DQC0045",
          "DQC0095",
          "DQC0096",
          "DQC0097",
          "DQC0099",
          "DQC0100",
          "DQC0101",
          "DQC0182",
          "DQC0102",
          "DQC0108",
          "DQC0114",
          "DQC0151",
          "DQC0181",
          "DQC0183",
          "DQC0184",
          "DQC0185",
          "DQC0041",
          "DQC0179",
          "DQC0055",
          "DQC0177",
          "DQC0189",
          "DQC0129",
          "DQC0134",
          "DQC0033",
          "DQC0047",
          "DQC0048",
          "DQC0051",
          "DQC0052",
          "DQC0053",
          "DQC0133",
          "PLP0001",
          "PLP0002",
          "PLP0003",
          "PLP0004",
          "PLP0005",
          "PLP0006",
          "PLP0007",
          "PLP0008",
          "PLP0009",
          "PLP0010",
          "PLP0011",
          "PLP0012",
          "PLP0013",
          "DQC0092",
          "DQC0180",
          "DQC0484",
          "DQC0497",
          "DQC0485",
          "DQC0486",
          "DQC0487",
          "DQC0488",
          "PLP0211",
          "PLP0014",
          "DQF0232",
          "DQF0233",
          "DQF0032",
          "DQF0238",
          "DQF0239",
          "DQF0240",
          "DQF0014",
          "DQF0022",
          "DQF0244",
          "DQF0250",
          "DQF0252",
          "DQF0247",
          "DQF0012",
          "DQF0030",
          "DQF0254",
          "DQF0255",
          "DQF0024",
          "DQF0259",
          "DQF0260",
          "DQF0261",
          "DQF0262",
          "DQF0263",
          "DQF0264",
          "DQF0267",
          "DQF0038",
          "DQF0039",
          "DQF0040",
          "DQF0041",
          "DQF0042",
          "DQF0043",
          "DQF0031",
          "DQF0029",
          "DQF0256",
          "DQF0265",
          "DQM0056",
          "DQM0058",
          "DQM0059",
          "DQM0060",
          "DQM0061",
          "DQM0062",
          "DQM0063",
          "DQM0064",
          "DQM0065",
          "DQM0066",
          "DQM0067",
          "DQM0069",
          "DQM0070",
          "DQM0071",
          "DQM0072",
          "DQM0073",
          "DQM0074",
          "DQM0075",
          "DQM0076",
          "DQM0077",
          "DQM0078",
          "DQM0079",
          "DQM0083",
          "DQM0084",
          "DQE0149",
          "DQC0500",
          "DQC0050",
          "DQE0329",
          "DQC0501",
          "DQC0502",
          "DQC0503",
          "DQC0504",
          "DQC0505",
          "DQC0506",
          "DQC0508",
          "DQC0509",
          "DQC0510",
          "DQC0511",
          "DQC0512",
          "DQC0513",
          "DQC0515",
          "DQC0516",
          "DQF0268",
          "DQF0269",
          "DQF0270",
          "DQF0271",
          "DQF0272",
          "DQF0273",
          "DQF0274",
          "FEI0164",
          "FEI0165",
          "FAR0167",
          "FAR0168",
          "FAR0169",
          "DCH0171",
          "FAR0171",
          "FEI0163",
          "DQC0498",
          "DQC0521",
          "DQC0522",
          "DQC0523",
          "DQC0524",
          "DQC0525",
          "DQC0526",
          "DQC0527",
          "DQE0330",
          "DQC0529",
          "PUR0185",
          "PUR0186",
          "PUR0187",
          "PUR0188",
          "PUR0189",
          "PUR0190",
          "PUR0191",
          "PUR0192",
          "PUR0193",
          "PUR0194",
          "PUR0195",
          "PUR0196",
          "PUR0197",
          "PUR0198",
          "PUR0199",
          "FGM0105",
          "FGM0106",
          "FGM0107",
          "FEI0168",
          "FEI0169",
          "FGM0108",
          "FGM0109",
          "FPA0088",
          "FGM0110",
          "FMI0045",
          "PUR0201",
          "PUR0202",
          "PUR0203",
          "PUR0204",
          "PUR0205",
          "PUR0206",
          "PUR0211",
          "PUR0207",
          "PUR0208",
          "PUR0209",
          "PUR0210",
          "DQC0530",
          "DQC0531",
          "DQC0532",
          "DQC0537",
          "DQE0417",
          "DQC0538",
          "PLP0226",
          "DQC0540",
          "DQC0541",
          "DQC0542",
          "DQC0543",
          "DQC0544",
          "PLP0215",
          "PLP0216",
          "PLP0217",
          "PLP0218",
          "PLP0219",
          "PLP0220",
          "PLP0221",
          "PLP0222",
          "PLP0223",
          "PLP0224",
          "PLP0214",
          "PLP0213",
          "PLP0225",
          "PLP0227",
          "DQE0332",
          "DQE0333",
          "DQE0334",
          "DQE0336",
          "DQE0337",
          "DQE0338",
          "DQE0341",
          "DQE0342",
          "DQE0344",
          "DQE0346",
          "DQE0347",
          "DQE0348",
          "DQE0351",
          "DQE0352",
          "DQE0353",
          "DQE0354",
          "DQE0355",
          "DQE0358",
          "DQE0359",
          "DQE0362",
          "DQE0363",
          "DQE0366",
          "DQE0380",
          "DQC0545",
          "DQC0546",
          "DQC0547",
          "DQC0548",
          "DQC0549",
          "DQC0550",
          "DQC0553",
          "DQC0554",
          "DQC0557",
          "DQC0558",
          "DQC0559",
          "DQC0560",
          "DQC0565",
          "DQC0566",
          "DQC0567",
          "DQC0568",
          "DQC0569",
          "DQC0570",
          "DQC0571",
          "DQC0572",
          "DQC0573",
          "DQC0574",
          "DQC0575",
          "DQC0576",
          "DQC0577",
          "DQC0578",
          "DQC0579",
          "DQC0582",
          "DQC0584",
          "DQC0586",
          "DQC0587",
          "DQC0588",
          "DQC0590",
          "DQC0591",
          "DQC0592",
          "DQC0593",
          "DQC0594",
          "DQC0595",
          "DQC0596",
          "PLP0228",
          "FCL0369",
          "PUR0212",
          "PUR0213",
          "PUR0214",
          "DQR0016",
          "DQR0018",
          "FPA0089",
          "DQC0599",
          "DQC0600",
          "FCL0370",
          "FCL0366",
          "FCL0367",
          "DQC0601",
          "DQC0602",
          "DCH0158",
          "PUR0215",
          "PUR0217",
          "PUR0218",
          "PUR0219",
          "PUR0220",
          "PUR0221",
          "PUR0222",
          "PUR0223",
          "PUR0224",
          "PUR0225",
          "FAL0015",
          "FAL0016",
          "FAL0017",
          "PUR0226",
          "FAL0018",
          "FAL0012",
          "FAR0172",
          "FEI0171",
          "FEI0172",
          "FEI0174",
          "FEI0175",
          "FEI0176",
          "FEI0177",
          "DQR0020",
          "DQE0385",
          "DQE0386",
          "DQE0387",
          "DQE0388",
          "DQE0389",
          "DQE0390",
          "DQE0391",
          "DQE0392",
          "DQE0393",
          "FMI0047",
          "FMI0048",
          "FMI0049",
          "FPA0090",
          "PUR0227",
          "PLP0229",
          "FAL0001",
          "PUR0228",
          "DQE0394",
          "DQE0395",
          "DQE0396",
          "DQE0397",
          "DQE0398",
          "DQC0603",
          "DQC0604",
          "DQC0605",
          "DQC0606",
          "DQC0607",
          "DQC0608",
          "DQC0609",
          "DQC0610",
          "DQC0611",
          "DQC0612",
          "DQC0613",
          "DQC0614",
          "DQC0615",
          "DQC0616",
          "DQE0399",
          "DQE0400",
          "DQE0401",
          "DQE0402",
          "DQE0403",
          "DQE0404",
          "DQF0275",
          "DQC0617",
          "DQC0618",
          "DQC0619",
          "DQC0620",
          "DQC0621",
          "DQC0622",
          "DQC0623",
          "DQC0624",
          "DCH0159",
          "FGM0116",
          "DQC0628",
          "DQC0629",
          "FEI0178",
          "PUR0230",
          "PUR0229",
          "PLP0230",
          "FEI0179",
          "FEI0182",
          "FEI0183",
          "DQC0630",
          "DQC0631",
          "DQC0632",
          "DQC0633",
          "DQE0405",
          "DQE0407",
          "DQE0408",
          "DQC0634",
          "PLP0231",
          "PLP0232",
          "DQR0022",
          "DQC0636",
          "DQC0637",
          "DQE0410",
          "DQE0411",
          "DQE0412",
          "DQE0413",
          "DQE0414",
          "DQE0415",
          "DQC0638",
          "DQC0639",
          "DQC0640",
          "DQC0641",
          "DQE0423",
          "DQC0643",
          "DQC0644",
          "DQC0645",
          "DQE0424",
          "DQC0647",
          "DQC0650",
          "DQE0416",
          "DQC0651",
          "DQC0652",
          "DQC0653",
          "DQE0418",
          "DQC0655",
          "DQE0419",
          "DQC0656",
          "DQC0657",
          "DQC0658",
          "DQC0659",
          "DQC0660",
          "DQC0661",
          "DQC0662",
          "FEI0184",
          "FEI0185",
          "FEI0186",
          "FEI0188",
          "FEI0189",
          "FEI0190",
          "FEI0191",
          "FEI0192",
          "FEI0193",
          "FPA0091",
          "FPA0092",
          "FPA0093",
          "FPA0094",
          "FPA0095",
          "FPA0096",
          "FGM0118",
          "FGM0119",
          "FGM0120",
          "FGM0121",
          "FGM0122",
          "FGM0123",
          "FGM0124",
          "FGM0125",
          "FGM0126",
          "FAL0002",
          "FAL0003",
          "FAL0005",
          "DCH0161",
          "DCH0162",
          "DCH0163",
          "FAL0006",
          "FAL0007",
          "FAL0008",
          "PUR0231",
          "PUR0232",
          "PUR0233",
          "PUR0234",
          "DCH0164",
          "FCL0372",
          "FCL0373",
          "FCL0374",
          "FCL0375",
          "FCL0382",
          "FCL0383",
          "FCL0384",
          "FCL0385",
          "FCL0386",
          "FCL0388",
          "FCL0397",
          "FCL0402",
          "FEI0187",
          "FAR0173",
          "DQE0420",
          "DQC0663",
          "DQC0664",
          "FCL0406",
          "FAR0174",
          "DCH0165",
          "DCH0166",
          "FEI0199",
          "FEI0200",
          "FAR0176",
          "FCL0407",
          "FPA0097",
          "FMI0051",
          "FCL0408",
          "DCH0167",
          "DCH0168",
          "DQC0665",
          "DQC0666",
          "PUR0235",
          "DQR0023",
          "FEI0202",
          "FPA0098",
          "DQE0422",
          "FPA0099",
          "FPA0100",
          "FPA0101",
          "FPA0102",
          "FPA0184",
          "FPA0185",
          "FPA0186",
          "FPA0187",
          "FPA0188",
          "FPA0189",
          "FPA0190",
          "FPA0191",
          "FPA0192",
          "FPA0193",
          "FPA0194",
          "FPA0195",
          "FPA0196",
          "FPA0197",
          "FPA0198",
          "FPA0199",
          "DQC0667",
          "DQC0668",
          "DQC0669",
          "DQE0425",
          "PLP0235",
          "PLP0236",
          "PLP0237",
          "PLP0238",
          "PLP0239",
          "DQR0025",
          "DQR0027",
          "DQR0028",
          "DQR0034",
          "DQR0035",
          "DQR0036",
          "DQR0037",
          "DQR0038",
          "DQR0040",
          "DQR0041",
          "DQR0042",
          "DQR0043",
          "DQR0044",
          "DQR0046",
          "DQR0047",
          "DQR0048",
          "DQR0049",
          "DQR0050",
          "DQR0051",
          "DQR0052",
          "DQR0053",
          "DQR0054",
          "DQC0671",
          "DQC0674",
          "PUR0236",
          "PUR0237",
          "PUR0238",
          "PUR0239",
          "PUR0240",
          "PUR0241",
          "PUR0242",
          "PUR0243",
          "PUR0244",
          "FGM0128",
          "FAR0177",
          "FAR0178",
          "FGM0129",
          "FAL0022",
          "FEI0204",
          "FAL0023",
          "DCH0172",
          "DCH0173",
          "DCH0174",
          "DCH0175",
          "FGM0130",
          "PLP0240",
          "PLP0241",
          "PLP0242",
          "PLP0243",
          "PLP0244",
          "DCH0177",
          "DQR0055",
          "DQR0056",
          "PLP0245",
          "FEI0205",
          "PUR0245",
          "PUR0246",
          "PUR0247",
          "PUR0248",
          "PUR0249",
          "PUR0250",
          "PUR0251",
          "PUR0252",
          "PUR0253",
          "PUR0254",
          "PUR0255",
          "PUR0256",
          "PUR0257",
          "PUR0258",
          "PUR0259",
          "PUR0260",
          "PUR0261",
          "PUR0262",
          "PLP0246",
          "PLP0247",
          "PLP0248",
          "PLP0249",
          "PLP0253",
          "PLP0254",
          "PLP0255",
          "PLP0260",
          "PLP0250",
          "FAL0024",
          "FGM0131",
          "PLP0259",
          "PLP0261",
          "PLP0256",
          "PLP0257",
          "PLP0258",
          "FCL0411",
          "PLP0262",
          "DCH0179",
          "FAL0025",
          "FAL0026",
          "FAL0027",
          "FAL0028",
          "FAL0029",
          "FAL0030",
          "FAL0031",
          "FAL0032",
          "FAL0033",
          "FAL0034",
          "FAL0035",
          "FAL0049",
          "FAL0050",
          "DCH0180",
          "FAL0036",
          "FPA0103",
          "FPA0104",
          "FPA0105",
          "FPA0106",
          "FPA0107",
          "FPA0200",
          "FGM0132",
          "FAL0037",
          "FMI0053",
          "DCH0181",
          "FGM0133",
          "FGM0134",
          "FGM0135",
          "FGM0136",
          "PLP0263",
          "PLP0264",
          "FEI0207",
          "FEI0208",
          "FEI0209",
          "FEI0210",
          "FEI0211",
          "FPA0109",
          "FPA0108",
          "DQR0057",
          "DQR0058",
          "DQR0059",
          "DQR0060",
          "DQR0061",
          "DQR0062",
          "DQR0063",
          "DQR0064",
          "DQR0065",
          "DQR0066",
          "DQR0067",
          "FPA0110",
          "FPA0111",
          "FPA0112",
          "DQC0676",
          "DQC0677",
          "FEI0212",
          "FEI0213",
          "FEI0214",
          "FEI0215",
          "FEI0216",
          "FEI0217",
          "FEI0218",
          "FEI0219",
          "FEI0220",
          "FEI0221",
          "FEI0222",
          "DQR0068",
          "DQE0426",
          "DQC0678",
          "FEI0223",
          "FEI0224",
          "FEI0225",
          "FEI0226",
          "FEI0227",
          "FEI0228",
          "DQE0427",
          "DQE0428",
          "DQE0429",
          "DQM0085",
          "DQE0430",
          "DQE0434",
          "DQE0432",
          "DQE0433",
          "PUR0263",
          "PUR0433",
          "FCL0412",
          "FCL0413",
          "FCL0414",
          "DQC0680",
          "DQR0070",
          "DQR0076",
          "DQR0077",
          "DQE0435",
          "DQR0069",
          "DQR0071",
          "FPA0113",
          "FGM0137",
          "FEI0229",
          "FEI0230",
          "DQE0436",
          "FPA0114",
          "DCH0182",
          "PUR0264",
          "DCH0014",
          "FEI0231",
          "FEI0232",
          "FEI0233",
          "FEI0234",
          "FEI0235",
          "FEI0236",
          "FEI0237",
          "FEI0238",
          "FEI0239",
          "FEI0331",
          "FEI0332",
          "FEI0333",
          "FEI0334",
          "FEI0335",
          "FEI0336",
          "FEI0337",
          "FPA0115",
          "DQM0086",
          "PLP0265",
          "DQE0437",
          "FAL0038",
          "PUR0265",
          "PUR0266",
          "PUR0267",
          "DQC0681",
          "PUR0268",
          "DQC0682",
          "FEI0240",
          "FEI0241",
          "FEI0242",
          "FEI0243",
          "FEI0244",
          "FEI0245",
          "FEI0246",
          "FPA0116",
          "PUR0269",
          "FPA0117",
          "FPA0118",
          "FPA0119",
          "FPA0120",
          "FPA0121",
          "FPA0122",
          "FPA0123",
          "FPA0124",
          "FPA0125",
          "FPA0126",
          "FPA0127",
          "FPA0128",
          "FPA0129",
          "FPA0130",
          "FPA0131",
          "FPA0132",
          "FPA0133",
          "FPA0134",
          "FPA0135",
          "FPA0136",
          "FPA0137",
          "FPA0138",
          "DQC0683",
          "PUR0277",
          "FCL0415",
          "DQE0439",
          "FEI0247",
          "FEI0248",
          "FEI0249",
          "FEI0250",
          "FEI0251",
          "FEI0252",
          "FEI0253",
          "FEI0254",
          "FEI0255",
          "FEI0257",
          "FEI0258",
          "FAR0179",
          "FEI0259",
          "FPA0139",
          "FEI0260",
          "DQE0446",
          "PUR0278",
          "DQE0447",
          "DQE0448",
          "DQE0449",
          "DQE0450",
          "DQE0451",
          "DQE0457",
          "DQE0458",
          "DQE0459",
          "PUR0279",
          "PUR0280",
          "PUR0281",
          "PUR0282",
          "PUR0283",
          "PUR0284",
          "PUR0285",
          "PUR0286",
          "PUR0287",
          "PUR0288",
          "PUR0292",
          "PUR0293",
          "PUR0294",
          "PUR0295",
          "PUR0296",
          "PUR0297",
          "FPA0141",
          "FPA0146",
          "FAR0180",
          "FGM0139",
          "FGM0140",
          "FGM0141",
          "FGM0143",
          "FGM0149",
          "FEI0263",
          "FEI0264",
          "FEI0266",
          "FEI0267",
          "FEI0268",
          "FEI0269",
          "FEI0270",
          "DCH0184",
          "DCH0185",
          "DCH0187",
          "DCH0188",
          "DCH0189",
          "DCH0190",
          "DCH0191",
          "FAR0181",
          "PUR0298",
          "FAL0040",
          "FPA0143",
          "DQC0688",
          "DQE0438",
          "PUR0270",
          "PUR0271",
          "PUR0272",
          "PUR0273",
          "PUR0274",
          "PUR0275",
          "PUR0276",
          "FEI0256",
          "DQC0684",
          "DQE0440",
          "DQC0685",
          "DQE0441",
          "DQE0442",
          "DQE0443",
          "DQC0686",
          "FPA0140",
          "DQE0444",
          "DQC0687",
          "FEI0261",
          "FEI0262",
          "FPA0144",
          "FEI0271",
          "FEI0272",
          "FEI0273",
          "FEI0274",
          "FEI0275",
          "FEI0276",
          "FEI0277",
          "DQC0689",
          "DQM0087",
          "DQM0088",
          "DQC0690",
          "DQC0691",
          "DQM0089",
          "DQM0090",
          "DQM0091",
          "FEI0278",
          "FEI0279",
          "FEI0280",
          "FEI0281",
          "FEI0284",
          "FPA0147",
          "FPA0148",
          "DCH0193",
          "FCL0417",
          "FCL0418",
          "FCL0419",
          "FCL0420",
          "FCL0421",
          "FEI0289",
          "FEI0290",
          "FEI0291",
          "FEI0293",
          "FCL0422",
          "FCL0423",
          "FPA0149",
          "FPA0150",
          "FPA0151",
          "PUR0347",
          "PUR0348",
          "PUR0349",
          "PUR0350",
          "PUR0351",
          "PUR0352",
          "FGM0142",
          "FGM0145",
          "PUR0353",
          "PUR0354",
          "DQC0692",
          "DQC0693",
          "DQR0072",
          "DQC0694",
          "DQR0073",
          "FGM0146",
          "PUR0355",
          "FGM0147",
          "DQR0074",
          "PUR0356",
          "PUR0357",
          "PUR0358",
          "PUR0359",
          "PUR0360",
          "DQC0697",
          "DQC0698",
          "PUR0363",
          "FPA0153",
          "FEI0295",
          "DQE0452",
          "FCL0424",
          "FAR0182",
          "FAR0183",
          "FPA0155",
          "FCL0425",
          "DCH0194",
          "PUR0364",
          "FPA0158",
          "FCL0426",
          "DQE0453",
          "DQE0454",
          "DQE0455",
          "PLP0266",
          "PLP0267",
          "FPA0159",
          "FAR0186",
          "DCH0195",
          "DQC0699",
          "PUR0365",
          "PUR0366",
          "PUR0367",
          "PUR0368",
          "PUR0369",
          "FGM0148",
          "PUR0370",
          "PUR0371",
          "DQE0456",
          "PUR0373",
          "DQC0700",
          "PUR0374",
          "FEI0296",
          "FEI0297",
          "FEI0298",
          "FEI0299",
          "FGM0150",
          "FBR0001",
          "FBR0002",
          "PLP0268",
          "DQC0701",
          "FAL0043",
          "FAL0044",
          "FAL0046",
          "DQC0703",
          "PUR0379",
          "PUR0380",
          "PUR0381",
          "PUR0382",
          "PUR0383",
          "PUR0384",
          "PUR0385",
          "PUR0386",
          "PUR0387",
          "PUR0388",
          "PUR0389",
          "PUR0390",
          "PUR0391",
          "PUR0392",
          "PUR0393",
          "PUR0394",
          "PUR0395",
          "PUR0396",
          "PUR0397",
          "PUR0398",
          "PUR0399",
          "PUR0400",
          "PUR0401",
          "PUR0402",
          "PUR0403",
          "FAL0045",
          "FGM0151",
          "FEI0300",
          "FEI0301",
          "FEI0302",
          "FEI0303",
          "FGM0152",
          "FAR0187",
          "DCH0197",
          "PUR0404",
          "PUR0405",
          "PUR0406",
          "FAL0047",
          "DCH0198",
          "FAR0188",
          "FAR0189",
          "FAR0190",
          "FAR0191",
          "FAR0192",
          "FAR0193",
          "FAR0194",
          "FAR0195",
          "FAR0196",
          "FAR0197",
          "FAR0198",
          "FGM0153",
          "FEI0304",
          "DCH0199",
          "FEI0305",
          "DCH0200",
          "FEI0306",
          "FEI0307",
          "DCH0201",
          "FGM0154",
          "FEI0308",
          "DCH0202",
          "FEI0309",
          "DCH0203",
          "DQC0704",
          "FGM0155",
          "PLP0269",
          "FEI0310",
          "FEI0311",
          "PUR0407",
          "FCL0428",
          "PUR0408",
          "PUR0409",
          "PUR0410",
          "PUR0411",
          "PUR0412",
          "PUR0413",
          "PUR0414",
          "PUR0415",
          "PUR0416",
          "PUR0417",
          "FEI0312",
          "PUR0418",
          "FAL0048",
          "FPA0160",
          "PUR0419",
          "PUR0420",
          "PUR0421",
          "PUR0422",
          "PUR0423",
          "PUR0424",
          "FEI0315",
          "FEI0316",
          "FEI0317",
          "FEI0318",
          "FEI0319",
          "FEI0320",
          "FEI0321",
          "FEI0322",
          "FEI0323",
          "FEI0324",
          "FEI0325",
          "FEI0326",
          "FEI0327",
          "FEI0328",
          "FEI0329",
          "FEI0330",
          "DQC0705",
          "DQR0075",
          "FPA0162",
          "FPA0163",
          "FPA0164",
          "FPA0165",
          "FPA0166",
          "FPA0167",
          "FPA0168",
          "FPA0169",
          "FPA0170",
          "FPA0171",
          "FPA0172",
          "FPA0173",
          "FPA0174",
          "FPA0175",
          "FPA0176",
          "FPA0177",
          "FPA0178",
          "FPA0179",
          "FPA0180",
          "FPA0181",
          "FPA0182",
          "FPA0183",
          "FCL0429",
          "FCL0430",
          "FCL0433",
          "FCL0434",
          "FCL0435",
          "FCL0436",
          "PLP0273",
          "PLP0274",
          "PLP0275",
          "DQE0460"
        ],
        "enum": [
          "DCH0001",
          "DCH0002",
          "DCH0003",
          "DCH0004",
          "DCH0005",
          "DCH0006",
          "DCH0007",
          "DCH0008",
          "DCH0009",
          "DCH0010",
          "DCH0011",
          "DCH0012",
          "DCH0015",
          "DCH0016",
          "DCH0017",
          "DCH0018",
          "DCH0019",
          "DCH0020",
          "DCH0021",
          "DCH0022",
          "DCH0023",
          "DCH0024",
          "DCH0025",
          "DCH0026",
          "DCH0027",
          "DCH0028",
          "DCH0029",
          "DCH0030",
          "DCH0031",
          "DCH0032",
          "DCH0033",
          "DCH0034",
          "DCH0035",
          "DCH0036",
          "DCH0037",
          "DCH0038",
          "DCH0039",
          "DCH0040",
          "DCH0041",
          "DCH0042",
          "DCH0043",
          "DCH0044",
          "DCH0045",
          "DCH0046",
          "DCH0047",
          "DCH0048",
          "DCH0049",
          "DCH0050",
          "DCH0051",
          "DCH0052",
          "DCH0053",
          "DCH0054",
          "DCH0055",
          "DCH0057",
          "DCH0058",
          "DCH0059",
          "DCH0060",
          "DCH0061",
          "DCH0062",
          "DCH0063",
          "DCH0064",
          "DCH0065",
          "DCH0066",
          "DCH0067",
          "DCH0068",
          "DCH0069",
          "DCH0070",
          "DCH0071",
          "DCH0072",
          "DCH0073",
          "DCH0074",
          "DCH0075",
          "DCH0076",
          "DCH0077",
          "DCH0078",
          "DCH0079",
          "DCH0080",
          "DCH0081",
          "DCH0082",
          "DCH0083",
          "DCH0084",
          "DCH0085",
          "DCH0086",
          "DCH0087",
          "DCH0088",
          "DCH0089",
          "DCH0090",
          "DCH0091",
          "DCH0092",
          "DCH0093",
          "DCH0094",
          "DCH0095",
          "DCH0096",
          "DCH0097",
          "DCH0098",
          "DCH0099",
          "DCH0100",
          "DCH0101",
          "DCH0102",
          "DCH0103",
          "DCH0104",
          "DCH0105",
          "DCH0106",
          "DCH0107",
          "DCH0108",
          "DCH0109",
          "DCH0110",
          "DCH0112",
          "DCH0113",
          "DCH0114",
          "DCH0115",
          "DCH0116",
          "DCH0117",
          "DCH0118",
          "DCH0119",
          "DCH0120",
          "DCH0121",
          "DCH0122",
          "DCH0123",
          "DCH0124",
          "DCH0125",
          "DCH0126",
          "DCH0127",
          "DCH0128",
          "DCH0129",
          "DCH0130",
          "DCH0131",
          "DCH0132",
          "DCH0133",
          "DCH0134",
          "DCH0135",
          "DCH0136",
          "DCH0137",
          "DCH0138",
          "DCH0140",
          "DCH0141",
          "DCH0142",
          "DCH0143",
          "DCH0144",
          "DCH0145",
          "DCH0146",
          "DCH0147",
          "DCH0148",
          "DCH0149",
          "DCH0150",
          "DCH0151",
          "DCH0152",
          "DCH0153",
          "DCH0156",
          "DCH0157",
          "DQC0190",
          "DQC0191",
          "DQC0193",
          "DQC0194",
          "DQC0195",
          "DQC0196",
          "DQC0197",
          "DQC0198",
          "DQC0199",
          "DQC0200",
          "DQC0201",
          "DQC0202",
          "DQC0203",
          "DQC0204",
          "DQC0205",
          "DQC0206",
          "DQC0207",
          "DQC0208",
          "DQC0209",
          "DQC0210",
          "DQC0211",
          "DQC0479",
          "DQC0214",
          "DQC0215",
          "DQC0476",
          "DQC0477",
          "DQC0478",
          "DQC0216",
          "DQC0217",
          "DQC0475",
          "DQC0219",
          "DQC0220",
          "DQC0471",
          "DQC0472",
          "DQC0473",
          "DQC0474",
          "DQC0221",
          "DQC0222",
          "DQC0223",
          "DQC0224",
          "DQC0468",
          "DQC0469",
          "DQC0470",
          "DQC0225",
          "DQC0227",
          "DQC0467",
          "DQC0228",
          "DQC0229",
          "DQC0230",
          "DQC0231",
          "DQC0232",
          "DQC0466",
          "DQC0234",
          "DQC0235",
          "DQC0236",
          "DQC0237",
          "DQC0238",
          "DQC0239",
          "DQC0240",
          "DQC0241",
          "DQC0242",
          "DQC0243",
          "DQC0244",
          "DQC0245",
          "DQC0246",
          "DQC0247",
          "DQC0248",
          "DQC0249",
          "DQC0250",
          "DQC0251",
          "DQC0252",
          "DQC0253",
          "DQC0254",
          "DQC0255",
          "DQC0256",
          "DQC0257",
          "DQC0258",
          "DQC0259",
          "DQC0260",
          "DQC0261",
          "DQC0262",
          "DQC0263",
          "DQC0264",
          "DQC0265",
          "DQC0266",
          "DQC0267",
          "DQC0268",
          "DQC0269",
          "DQC0270",
          "DQC0271",
          "DQC0273",
          "DQC0274",
          "DQC0275",
          "DQC0276",
          "DQC0277",
          "DQC0278",
          "DQC0279",
          "DQC0280",
          "DQC0281",
          "DQC0282",
          "DQC0283",
          "DQC0284",
          "DQC0285",
          "DQC0286",
          "DQC0287",
          "DQC0288",
          "DQC0289",
          "DQC0290",
          "DQC0291",
          "DQC0292",
          "DQC0293",
          "DQC0294",
          "DQC0295",
          "DQC0296",
          "DQC0297",
          "DQC0298",
          "DQC0463",
          "DQC0464",
          "DQC0465",
          "DQC0299",
          "DQC0460",
          "DQC0461",
          "DQC0462",
          "DQC0300",
          "DQC0459",
          "DQC0301",
          "DQC0302",
          "DQC0303",
          "DQC0304",
          "DQC0458",
          "DQC0481",
          "DQC0480",
          "DQC0305",
          "DQC0306",
          "DQC0307",
          "DQC0308",
          "DQC0309",
          "DQC0311",
          "DQC0312",
          "DQC0313",
          "DQC0314",
          "DQC0315",
          "DQC0316",
          "DQC0317",
          "DQC0457",
          "DQC0318",
          "DQC0319",
          "DQC0320",
          "DQC0456",
          "DQC0322",
          "DQC0455",
          "DQC0324",
          "DQC0325",
          "DQC0454",
          "DQC0327",
          "DQC0453",
          "DQC0329",
          "DQC0452",
          "DQC0330",
          "DQC0331",
          "DQC0333",
          "DQC0334",
          "DQC0451",
          "DQC0336",
          "DQC0450",
          "DQC0338",
          "DQC0449",
          "DQC0340",
          "DQC0448",
          "DQC0342",
          "DQC0447",
          "DQC0344",
          "DQC0446",
          "DQC0346",
          "DQC0445",
          "DQC0348",
          "DQC0444",
          "DQC0350",
          "DQC0351",
          "DQC0352",
          "DQC0353",
          "DQC0354",
          "DQC0355",
          "DQC0356",
          "DQC0357",
          "DQC0358",
          "DQC0443",
          "DQC0360",
          "DQC0361",
          "DQC0362",
          "DQC0363",
          "DQC0364",
          "DQC0365",
          "DQC0366",
          "DQC0367",
          "DQC0368",
          "DQC0369",
          "DQC0370",
          "DQC0371",
          "DQC0372",
          "DQC0373",
          "DQC0374",
          "DQC0375",
          "DQC0376",
          "DQC0377",
          "DQC0442",
          "DQC0378",
          "DQC0379",
          "DQC0380",
          "DQC0381",
          "DQC0382",
          "DQC0383",
          "DQC0384",
          "DQC0385",
          "DQC0386",
          "DQC0387",
          "DQC0388",
          "DQC0389",
          "DQC0390",
          "DQC0391",
          "DQC0392",
          "DQC0441",
          "DQC0394",
          "DQC0395",
          "DQC0440",
          "DQC0396",
          "DQC0397",
          "DQC0398",
          "DQC0399",
          "DQC0400",
          "DQC0401",
          "DQC0402",
          "DQC0403",
          "DQC0404",
          "DQC0405",
          "DQC0406",
          "DQC0407",
          "DQC0408",
          "DQC0409",
          "DQC0410",
          "DQC0411",
          "DQC0412",
          "DQC0413",
          "DQC0414",
          "DQC0415",
          "DQC0416",
          "DQC0417",
          "DQC0418",
          "DQC0419",
          "DQC0420",
          "DQC0421",
          "DQC0422",
          "DQC0423",
          "DQC0424",
          "DQC0425",
          "DQC0426",
          "DQC0427",
          "DQC0428",
          "DQC0429",
          "DQC0430",
          "DQC0431",
          "DQC0432",
          "DQC0433",
          "DQC0434",
          "DQC0435",
          "DQC0436",
          "DQC0437",
          "DQC0438",
          "DQC0439",
          "DQE0324",
          "DQE0319",
          "DQE0320",
          "DQE0326",
          "DQE0323",
          "DQE0321",
          "DQE0322",
          "DQE0325",
          "DQE0157",
          "DQE0158",
          "DQE0159",
          "DQE0160",
          "DQE0161",
          "DQE0162",
          "DQE0163",
          "DQE0164",
          "DQE0165",
          "DQE0166",
          "DQE0167",
          "DQE0168",
          "DQE0169",
          "DQE0170",
          "DQE0171",
          "DQE0172",
          "DQE0173",
          "DQE0174",
          "DQE0175",
          "DQE0176",
          "DQE0177",
          "DQE0178",
          "DQE0179",
          "DQE0180",
          "DQE0181",
          "DQE0182",
          "DQE0183",
          "DQE0184",
          "DQE0185",
          "DQE0186",
          "DQE0187",
          "DQE0188",
          "DQE0189",
          "DQE0190",
          "DQE0191",
          "DQE0192",
          "DQE0193",
          "DQE0194",
          "DQE0195",
          "DQE0196",
          "DQE0197",
          "DQE0198",
          "DQE0199",
          "DQE0318",
          "DQE0200",
          "DQE0313",
          "DQE0314",
          "DQE0315",
          "DQE0201",
          "DQE0311",
          "DQE0312",
          "DQE0202",
          "DQE0203",
          "DQE0204",
          "DQE0205",
          "DQE0309",
          "DQE0310",
          "DQE0206",
          "DQE0308",
          "DQE0307",
          "DQE0208",
          "DQE0209",
          "DQE0210",
          "DQE0304",
          "DQE0305",
          "DQE0211",
          "DQE0303",
          "DQE0302",
          "DQE0212",
          "DQE0301",
          "DQE0300",
          "DQE0299",
          "DQE0213",
          "DQE0298",
          "DQE0297",
          "DQE0214",
          "DQE0296",
          "DQE0215",
          "DQE0294",
          "DQE0295",
          "DQE0216",
          "DQE0217",
          "DQE0218",
          "DQE0219",
          "DQE0220",
          "DQE0221",
          "DQE0222",
          "DQE0223",
          "DQE0292",
          "DQE0293",
          "DQE0224",
          "DQE0288",
          "DQE0289",
          "DQE0290",
          "DQE0291",
          "DQE0226",
          "DQE0285",
          "DQE0286",
          "DQE0287",
          "DQE0227",
          "DQE0283",
          "DQE0284",
          "DQE0282",
          "DQE0229",
          "DQE0281",
          "DQE0230",
          "DQE0231",
          "DQE0232",
          "DQE0280",
          "DQE0234",
          "DQE0235",
          "DQE0236",
          "DQE0237",
          "DQE0238",
          "DQE0239",
          "DQE0240",
          "DQE0241",
          "DQE0242",
          "DQE0243",
          "DQE0244",
          "DQE0245",
          "DQE0246",
          "DQE0247",
          "DQE0248",
          "DQE0249",
          "DQE0250",
          "DQE0251",
          "DQE0252",
          "DQE0253",
          "DQE0254",
          "DQE0255",
          "DQE0256",
          "DQE0257",
          "DQE0275",
          "DQE0276",
          "DQE0277",
          "DQE0278",
          "DQE0279",
          "DQE0260",
          "DQE0262",
          "DQE0263",
          "DQE0265",
          "DQE0266",
          "DQE0267",
          "DQE0268",
          "DQE0269",
          "DQE0270",
          "DQE0271",
          "DQE0272",
          "DQE0273",
          "DQE0274",
          "DQF0044",
          "DQF0045",
          "DQF0228",
          "DQF0229",
          "DQF0230",
          "DQF0046",
          "DQF0047",
          "DQF0048",
          "DQF0049",
          "DQF0050",
          "DQF0051",
          "DQF0052",
          "DQF0053",
          "DQF0054",
          "DQF0055",
          "DQF0056",
          "DQF0057",
          "DQF0058",
          "DQF0059",
          "DQF0060",
          "DQF0061",
          "DQF0062",
          "DQF0063",
          "DQF0064",
          "DQF0065",
          "DQF0066",
          "DQF0067",
          "DQF0068",
          "DQF0069",
          "DQF0070",
          "DQF0071",
          "DQF0072",
          "DQF0073",
          "DQF0227",
          "DQF0074",
          "DQF0075",
          "DQF0076",
          "DQF0077",
          "DQF0078",
          "DQF0079",
          "DQF0080",
          "DQF0081",
          "DQF0082",
          "DQF0226",
          "DQF0083",
          "DQF0084",
          "DQF0085",
          "DQF0225",
          "DQF0086",
          "DQF0087",
          "DQF0088",
          "DQF0089",
          "DQF0090",
          "DQF0091",
          "DQF0092",
          "DQF0093",
          "DQF0094",
          "DQF0095",
          "DQF0096",
          "DQF0097",
          "DQF0098",
          "DQF0099",
          "DQF0100",
          "DQF0101",
          "DQF0102",
          "DQF0103",
          "DQF0104",
          "DQF0105",
          "DQF0106",
          "DQF0107",
          "DQF0108",
          "DQF0109",
          "DQF0110",
          "DQF0111",
          "DQF0112",
          "DQF0113",
          "DQF0114",
          "DQF0116",
          "DQF0117",
          "DQF0118",
          "DQF0119",
          "DQF0120",
          "DQF0121",
          "DQF0122",
          "DQF0123",
          "DQF0124",
          "DQF0125",
          "DQF0126",
          "DQF0127",
          "DQF0128",
          "DQF0129",
          "DQF0130",
          "DQF0131",
          "DQF0132",
          "DQF0133",
          "DQF0134",
          "DQF0135",
          "DQF0136",
          "DQF0137",
          "DQF0138",
          "DQF0139",
          "DQF0140",
          "DQF0141",
          "DQF0142",
          "DQF0143",
          "DQF0144",
          "DQF0145",
          "DQF0146",
          "DQF0147",
          "DQF0148",
          "DQF0149",
          "DQF0150",
          "DQF0151",
          "DQF0152",
          "DQF0153",
          "DQF0154",
          "DQF0155",
          "DQF0156",
          "DQF0157",
          "DQF0224",
          "DQF0158",
          "DQF0218",
          "DQF0219",
          "DQF0220",
          "DQF0221",
          "DQF0222",
          "DQF0223",
          "DQF0159",
          "DQF0160",
          "DQF0161",
          "DQF0162",
          "DQF0163",
          "DQF0164",
          "DQF0165",
          "DQF0166",
          "DQF0167",
          "DQF0168",
          "DQF0169",
          "DQF0170",
          "DQF0171",
          "DQF0172",
          "DQF0173",
          "DQF0174",
          "DQF0175",
          "DQF0176",
          "DQF0177",
          "DQF0178",
          "DQF0179",
          "DQF0180",
          "DQF0181",
          "DQF0182",
          "DQF0183",
          "DQF0184",
          "DQF0185",
          "DQF0186",
          "DQF0187",
          "DQF0188",
          "DQF0189",
          "DQF0190",
          "DQF0191",
          "DQF0215",
          "DQF0216",
          "DQF0217",
          "DQF0192",
          "DQF0193",
          "DQF0194",
          "DQF0195",
          "DQF0196",
          "DQF0197",
          "DQF0198",
          "DQF0199",
          "DQF0200",
          "DQF0201",
          "DQF0202",
          "DQF0203",
          "DQF0212",
          "DQF0213",
          "DQF0214",
          "DQF0204",
          "DQF0210",
          "DQF0209",
          "DQF0208",
          "DQF0205",
          "DQF0207",
          "DQF0211",
          "DQF0206",
          "DQR0001",
          "DQR0002",
          "DQR0003",
          "DQR0004",
          "DQR0005",
          "DQR0009",
          "DQR0010",
          "DQR0011",
          "DQR0014",
          "DQR0015",
          "FAR0001",
          "FAR0002",
          "FAR0003",
          "FAR0004",
          "FAR0005",
          "FEI0201",
          "FAR0006",
          "FAR0007",
          "FAR0008",
          "FAR0009",
          "FAR0010",
          "FAR0012",
          "FAR0013",
          "FAR0014",
          "FAR0016",
          "FAR0017",
          "FAR0018",
          "FAR0019",
          "FAR0020",
          "FAR0021",
          "FAR0022",
          "FAR0023",
          "FAR0024",
          "FAR0025",
          "FAR0026",
          "FAR0027",
          "FAR0028",
          "FAR0029",
          "FAR0030",
          "FAR0031",
          "FAR0032",
          "FAR0033",
          "FAR0034",
          "FAR0126",
          "FAR0035",
          "FAR0036",
          "FAR0037",
          "FAR0038",
          "FAR0039",
          "FAR0040",
          "FAR0041",
          "FAR0042",
          "FAR0043",
          "FAR0044",
          "FAR0045",
          "FAR0046",
          "FAR0047",
          "FAR0049",
          "FAR0050",
          "FAR0051",
          "FAR0052",
          "FAR0053",
          "FAR0054",
          "FAR0055",
          "FAR0056",
          "FAR0057",
          "FAR0058",
          "FAR0059",
          "FAR0060",
          "FAR0061",
          "FAR0062",
          "FAR0063",
          "FAR0064",
          "FAR0065",
          "FAR0067",
          "FAR0068",
          "FAR0070",
          "FAR0071",
          "FAR0072",
          "FAR0073",
          "FAR0074",
          "FAR0075",
          "FAR0076",
          "FAR0077",
          "FAR0078",
          "FAR0079",
          "FAR0081",
          "FAR0082",
          "FAR0083",
          "FAR0084",
          "FAR0085",
          "FAR0086",
          "FAR0087",
          "FAR0088",
          "FAR0089",
          "FAR0090",
          "FAR0091",
          "FAR0093",
          "FAR0094",
          "FAR0095",
          "FAR0096",
          "FAR0097",
          "FAR0098",
          "FAR0099",
          "FAR0100",
          "FAR0101",
          "FAR0102",
          "FAR0103",
          "FAR0104",
          "FAR0105",
          "FAR0106",
          "FAR0107",
          "FAR0108",
          "FAR0109",
          "FAR0110",
          "FAR0111",
          "FAR0112",
          "FAR0113",
          "FAR0115",
          "FAR0116",
          "FAR0117",
          "FAR0118",
          "FAR0120",
          "FAR0121",
          "FAR0122",
          "FAR0123",
          "FAR0124",
          "FAR0125",
          "FCL0001",
          "FCL0002",
          "FCL0003",
          "FCL0004",
          "FCL0005",
          "FCL0006",
          "FCL0007",
          "FCL0009",
          "FCL0010",
          "FCL0013",
          "FCL0014",
          "FCL0015",
          "FCL0016",
          "FCL0017",
          "FCL0018",
          "FCL0019",
          "FCL0020",
          "FCL0021",
          "FCL0022",
          "FCL0023",
          "FCL0024",
          "FCL0025",
          "FCL0026",
          "FCL0027",
          "FCL0028",
          "FCL0029",
          "FCL0030",
          "FCL0031",
          "FCL0032",
          "FCL0033",
          "FCL0034",
          "FCL0035",
          "FCL0036",
          "FCL0037",
          "FCL0038",
          "FCL0039",
          "FCL0040",
          "FCL0041",
          "FCL0042",
          "FCL0043",
          "FCL0044",
          "FCL0045",
          "FCL0046",
          "FCL0047",
          "FCL0048",
          "FCL0049",
          "FCL0050",
          "FCL0051",
          "FCL0052",
          "FCL0053",
          "FCL0054",
          "FCL0055",
          "FCL0056",
          "FCL0057",
          "FCL0058",
          "FCL0059",
          "FCL0060",
          "FCL0061",
          "FCL0062",
          "FCL0063",
          "FCL0064",
          "FCL0065",
          "FCL0066",
          "FCL0067",
          "FCL0068",
          "FCL0069",
          "FCL0070",
          "FCL0071",
          "FCL0072",
          "FCL0073",
          "FCL0074",
          "FCL0075",
          "FCL0076",
          "FCL0077",
          "FCL0078",
          "FCL0079",
          "FCL0080",
          "FCL0081",
          "FCL0082",
          "FCL0083",
          "FCL0084",
          "FCL0085",
          "FCL0086",
          "FCL0087",
          "FCL0088",
          "FCL0089",
          "FCL0090",
          "FCL0091",
          "FCL0092",
          "FCL0093",
          "FCL0094",
          "FCL0095",
          "FCL0096",
          "FCL0097",
          "FCL0098",
          "FCL0099",
          "FCL0100",
          "FCL0101",
          "FCL0102",
          "FCL0103",
          "FCL0104",
          "FCL0105",
          "FCL0106",
          "FCL0107",
          "FCL0108",
          "FCL0109",
          "FCL0110",
          "FCL0111",
          "FCL0112",
          "FCL0113",
          "FCL0114",
          "FCL0115",
          "FCL0116",
          "FCL0117",
          "FCL0118",
          "FCL0119",
          "FCL0120",
          "FCL0121",
          "FCL0122",
          "FCL0123",
          "FCL0124",
          "FCL0125",
          "FCL0126",
          "FCL0127",
          "FCL0128",
          "FCL0129",
          "FCL0130",
          "FCL0131",
          "FCL0132",
          "FCL0133",
          "FCL0134",
          "FCL0135",
          "FCL0136",
          "FCL0137",
          "FCL0138",
          "FCL0139",
          "FCL0140",
          "FCL0141",
          "FCL0142",
          "FCL0143",
          "FCL0144",
          "FCL0145",
          "FCL0146",
          "FCL0147",
          "FCL0148",
          "FCL0149",
          "FCL0150",
          "FCL0151",
          "FCL0152",
          "FCL0153",
          "FCL0154",
          "FCL0155",
          "FCL0156",
          "FCL0157",
          "FCL0158",
          "FCL0159",
          "FCL0160",
          "FCL0161",
          "FCL0162",
          "FCL0163",
          "FCL0164",
          "FCL0165",
          "FCL0166",
          "FCL0167",
          "FCL0168",
          "FCL0169",
          "FCL0170",
          "FCL0171",
          "FCL0172",
          "FCL0173",
          "FCL0174",
          "FCL0175",
          "FCL0176",
          "FCL0177",
          "FCL0178",
          "FCL0179",
          "FCL0180",
          "FCL0181",
          "FCL0182",
          "FCL0183",
          "FCL0184",
          "FCL0185",
          "FCL0186",
          "FCL0187",
          "FCL0189",
          "FCL0190",
          "FCL0191",
          "FCL0192",
          "FCL0193",
          "FCL0194",
          "FCL0195",
          "FCL0196",
          "FCL0197",
          "FCL0198",
          "FCL0199",
          "FCL0200",
          "FCL0201",
          "FCL0202",
          "FCL0203",
          "FCL0204",
          "FCL0205",
          "FCL0206",
          "FCL0207",
          "FCL0208",
          "FCL0210",
          "FCL0212",
          "FCL0213",
          "FCL0214",
          "FCL0215",
          "FCL0216",
          "FCL0217",
          "FCL0218",
          "FCL0219",
          "FCL0220",
          "FCL0221",
          "FCL0222",
          "FCL0223",
          "FCL0224",
          "FCL0225",
          "FCL0226",
          "FCL0227",
          "FCL0228",
          "FCL0229",
          "FCL0230",
          "FCL0231",
          "FCL0232",
          "FCL0234",
          "FCL0235",
          "FCL0236",
          "FCL0237",
          "FCL0238",
          "FCL0239",
          "FCL0240",
          "FCL0241",
          "FCL0242",
          "FCL0243",
          "FCL0244",
          "FCL0245",
          "FCL0246",
          "FCL0247",
          "FCL0248",
          "FCL0249",
          "FCL0250",
          "FCL0251",
          "FCL0252",
          "FCL0253",
          "FCL0254",
          "FCL0255",
          "FCL0256",
          "FCL0257",
          "FCL0258",
          "FCL0259",
          "FCL0260",
          "FCL0261",
          "FCL0262",
          "FCL0263",
          "FCL0264",
          "FCL0266",
          "FCL0267",
          "FCL0268",
          "FCL0270",
          "FCL0271",
          "FCL0272",
          "FCL0274",
          "FCL0275",
          "FCL0276",
          "FCL0278",
          "FCL0280",
          "FCL0281",
          "FCL0282",
          "FCL0283",
          "FCL0284",
          "FCL0285",
          "FCL0286",
          "FCL0287",
          "FCL0288",
          "FCL0289",
          "FCL0290",
          "FCL0291",
          "FCL0292",
          "FCL0293",
          "FCL0294",
          "FCL0295",
          "FCL0297",
          "FCL0299",
          "FCL0301",
          "FCL0303",
          "FCL0304",
          "FCL0305",
          "FCL0306",
          "FCL0307",
          "FCL0308",
          "FCL0309",
          "FCL0310",
          "FCL0311",
          "FCL0312",
          "FCL0313",
          "FCL0314",
          "FCL0315",
          "FCL0316",
          "FCL0317",
          "FCL0318",
          "FCL0319",
          "FCL0320",
          "FCL0321",
          "FCL0322",
          "FCL0323",
          "FCL0324",
          "FCL0325",
          "FCL0326",
          "FCL0327",
          "FCL0328",
          "FCL0329",
          "FCL0330",
          "FCL0331",
          "FCL0332",
          "FCL0333",
          "FCL0334",
          "FCL0335",
          "FCL0336",
          "FCL0337",
          "FCL0338",
          "FCL0339",
          "FCL0340",
          "FCL0341",
          "FCL0342",
          "FCL0343",
          "FCL0344",
          "FCL0345",
          "FCL0346",
          "FCL0347",
          "FCL0348",
          "FCL0349",
          "FCL0350",
          "FCL0351",
          "FCL0352",
          "FCL0353",
          "FCL0354",
          "FCL0355",
          "FCL0356",
          "FCL0357",
          "FCL0358",
          "FCL0359",
          "FCL0361",
          "FCL0363",
          "FCL0364",
          "FCL0365",
          "FEI0002",
          "FEI0004",
          "FEI0005",
          "FEI0006",
          "FEI0007",
          "FEI0008",
          "FEI0009",
          "FEI0010",
          "FEI0011",
          "FEI0012",
          "FEI0013",
          "FEI0014",
          "FEI0015",
          "FEI0016",
          "FEI0017",
          "FEI0018",
          "FEI0019",
          "FEI0020",
          "FEI0021",
          "FEI0022",
          "FEI0023",
          "FEI0024",
          "FEI0025",
          "FEI0026",
          "FEI0001",
          "FEI0028",
          "FEI0029",
          "FEI0030",
          "FEI0031",
          "FEI0032",
          "FEI0033",
          "FEI0034",
          "FEI0035",
          "FEI0036",
          "FEI0037",
          "FEI0038",
          "FEI0039",
          "FEI0040",
          "FEI0041",
          "FEI0042",
          "FEI0043",
          "FEI0044",
          "FEI0045",
          "FEI0046",
          "FEI0047",
          "FEI0048",
          "FEI0049",
          "FEI0050",
          "FEI0051",
          "FEI0052",
          "FEI0053",
          "FEI0054",
          "FEI0055",
          "FEI0056",
          "FEI0057",
          "FEI0058",
          "FEI0059",
          "FEI0060",
          "FEI0061",
          "FEI0062",
          "FEI0063",
          "FEI0064",
          "FEI0065",
          "FEI0066",
          "FEI0067",
          "FEI0068",
          "FEI0069",
          "FEI0070",
          "FEI0071",
          "FEI0072",
          "FEI0073",
          "FEI0074",
          "FEI0075",
          "FEI0076",
          "FEI0077",
          "FEI0078",
          "FEI0079",
          "FEI0080",
          "FEI0081",
          "FEI0082",
          "FEI0083",
          "FEI0084",
          "FEI0085",
          "FEI0086",
          "FEI0087",
          "FEI0088",
          "FEI0089",
          "FEI0090",
          "FEI0091",
          "FEI0092",
          "FEI0093",
          "FEI0094",
          "FEI0095",
          "FEI0096",
          "FEI0097",
          "FEI0098",
          "FEI0099",
          "FEI0100",
          "DCH0170",
          "FEI0102",
          "FEI0105",
          "FEI0106",
          "FEI0107",
          "FEI0108",
          "FEI0109",
          "FEI0110",
          "FEI0111",
          "FEI0112",
          "FEI0113",
          "FEI0114",
          "FEI0115",
          "FEI0116",
          "FEI0117",
          "FEI0118",
          "FEI0119",
          "FEI0120",
          "FEI0121",
          "FEI0122",
          "FEI0123",
          "FEI0124",
          "FEI0125",
          "FEI0126",
          "FEI0127",
          "FEI0128",
          "FEI0129",
          "FEI0130",
          "FEI0131",
          "FEI0132",
          "FEI0133",
          "FEI0134",
          "FEI0135",
          "FEI0136",
          "FEI0137",
          "FEI0138",
          "FEI0139",
          "FEI0140",
          "FEI0141",
          "FEI0142",
          "FEI0143",
          "FEI0144",
          "FEI0145",
          "FEI0146",
          "FEI0147",
          "FEI0148",
          "FEI0149",
          "FEI0150",
          "FEI0151",
          "FEI0152",
          "FEI0153",
          "FEI0154",
          "FEI0155",
          "FEI0156",
          "FEI0157",
          "FEI0158",
          "FEI0159",
          "FEI0160",
          "FEI0161",
          "FEI0162",
          "FGM0001",
          "FGM0002",
          "FGM0003",
          "FGM0004",
          "FGM0005",
          "FGM0006",
          "FGM0007",
          "FGM0009",
          "FGM0014",
          "FGM0015",
          "FGM0016",
          "FGM0017",
          "FGM0018",
          "FGM0020",
          "FGM0021",
          "FGM0022",
          "FGM0023",
          "FGM0024",
          "FGM0025",
          "FGM0026",
          "FGM0027",
          "FGM0028",
          "FGM0029",
          "FAL0011",
          "FGM0033",
          "FGM0034",
          "FGM0035",
          "FGM0039",
          "FGM0041",
          "FGM0042",
          "FGM0046",
          "FGM0047",
          "FGM0048",
          "FGM0050",
          "FGM0051",
          "FGM0052",
          "FGM0053",
          "FGM0054",
          "FGM0055",
          "FGM0056",
          "FGM0059",
          "FGM0060",
          "FGM0061",
          "FGM0062",
          "FGM0064",
          "FGM0065",
          "FGM0066",
          "FGM0067",
          "FGM0068",
          "FGM0069",
          "FGM0070",
          "FGM0071",
          "FGM0072",
          "FGM0073",
          "FGM0074",
          "FGM0075",
          "FGM0076",
          "FGM0078",
          "FGM0079",
          "FGM0080",
          "FGM0081",
          "FGM0082",
          "FGM0083",
          "FGM0103",
          "FGM0084",
          "FGM0159",
          "FGM0156",
          "FGM0157",
          "FGM0158",
          "FGM0160",
          "FQM0161",
          "FQM0162",
          "FGM0163",
          "FGM0164",
          "FGM0165",
          "FGM0166",
          "FGM0167",
          "FGM0168",
          "FGM0169",
          "FGM0170",
          "FGM0171",
          "FGM0173",
          "FGM0174",
          "FAL0020",
          "FGM0087",
          "FGM0088",
          "FGM0089",
          "FGM0090",
          "FGM0091",
          "FGM0092",
          "FGM0093",
          "FGM0102",
          "FGM0094",
          "FGM0095",
          "FGM0096",
          "FAL0009",
          "FGM0100",
          "FGM0101",
          "FGM0099",
          "FMI0014",
          "FMI0015",
          "FMI0016",
          "FMI0017",
          "FMI0021",
          "FMI0022",
          "FMI0023",
          "FMI0025",
          "FMI0026",
          "FMI0027",
          "FMI0028",
          "FMI0029",
          "FMI0030",
          "FMI0031",
          "FMI0032",
          "FMI0033",
          "FMI0034",
          "FMI0035",
          "FMI0036",
          "FMI0037",
          "FMI0038",
          "FMI0039",
          "FMI0040",
          "FPA0001",
          "FPA0002",
          "FPA0003",
          "FPA0004",
          "FPA0005",
          "FPA0006",
          "FPA0007",
          "FPA0008",
          "FPA0009",
          "FPA0010",
          "FPA0011",
          "FPA0012",
          "FPA0013",
          "FPA0014",
          "FPA0015",
          "FPA0016",
          "FPA0018",
          "FPA0019",
          "FPA0020",
          "FPA0021",
          "FPA0022",
          "FPA0023",
          "FPA0024",
          "FPA0025",
          "FPA0026",
          "FPA0027",
          "FPA0028",
          "FPA0029",
          "FPA0030",
          "FPA0031",
          "FPA0032",
          "FPA0033",
          "FPA0034",
          "FPA0035",
          "FPA0036",
          "FPA0037",
          "FPA0038",
          "FPA0039",
          "FPA0040",
          "FPA0041",
          "FPA0042",
          "FPA0043",
          "FPA0044",
          "FPA0045",
          "FPA0046",
          "FPA0047",
          "FPA0048",
          "FPA0049",
          "FPA0050",
          "FPA0051",
          "FPA0053",
          "FPA0054",
          "FPA0057",
          "FPA0058",
          "FPA0059",
          "FPA0066",
          "FPA0067",
          "FPA0068",
          "FPA0069",
          "FPA0072",
          "FPA0073",
          "FPA0074",
          "FPA0077",
          "FPA0078",
          "FPA0079",
          "FPA0080",
          "FPA0081",
          "FPA0082",
          "FPA0084",
          "FPA0085",
          "FPA0202",
          "PLP0015",
          "PLP0016",
          "PLP0017",
          "PLP0018",
          "PLP0197",
          "PLP0198",
          "PLP0199",
          "PLP0200",
          "PLP0201",
          "PLP0202",
          "PLP0203",
          "PLP0204",
          "PLP0205",
          "PLP0206",
          "PLP0019",
          "PLP0020",
          "PLP0021",
          "PLP0022",
          "PLP0207",
          "PLP0023",
          "PLP0024",
          "PLP0026",
          "PLP0027",
          "PLP0028",
          "PLP0029",
          "PLP0030",
          "PLP0031",
          "PLP0032",
          "PLP0033",
          "PLP0034",
          "PLP0035",
          "PLP0036",
          "PLP0037",
          "PLP0038",
          "PLP0039",
          "PLP0040",
          "PLP0041",
          "PLP0042",
          "PLP0043",
          "PLP0044",
          "PLP0045",
          "PLP0046",
          "PLP0047",
          "PLP0048",
          "PLP0049",
          "PLP0050",
          "PLP0051",
          "PLP0052",
          "PLP0053",
          "PLP0054",
          "PLP0055",
          "PLP0056",
          "PLP0057",
          "PLP0058",
          "PLP0059",
          "PLP0060",
          "PLP0061",
          "PLP0062",
          "PLP0063",
          "PLP0064",
          "PLP0065",
          "PLP0066",
          "PLP0067",
          "PLP0068",
          "PLP0069",
          "PLP0070",
          "PLP0071",
          "PLP0072",
          "PLP0073",
          "PLP0074",
          "PLP0075",
          "PLP0076",
          "PLP0077",
          "PLP0078",
          "PLP0160",
          "PLP0161",
          "PLP0100",
          "PLP0196",
          "PLP0195",
          "PLP0194",
          "PLP0193",
          "PLP0192",
          "PLP0191",
          "PLP0190",
          "PLP0189",
          "PLP0188",
          "PLP0187",
          "PLP0186",
          "PLP0185",
          "PLP0184",
          "PLP0183",
          "PLP0182",
          "PLP0181",
          "PLP0180",
          "PLP0179",
          "PLP0178",
          "PLP0177",
          "PLP0176",
          "PLP0175",
          "PLP0174",
          "PLP0173",
          "PLP0172",
          "PLP0171",
          "PLP0170",
          "PLP0169",
          "PLP0168",
          "PLP0167",
          "PLP0166",
          "PLP0165",
          "PLP0164",
          "PLP0163",
          "PLP0162",
          "PLP0210",
          "PLP0079",
          "PLP0080",
          "PLP0081",
          "PLP0082",
          "PLP0083",
          "PLP0084",
          "PLP0085",
          "PLP0086",
          "PLP0087",
          "PLP0088",
          "PLP0089",
          "PLP0090",
          "PLP0091",
          "PLP0092",
          "PLP0093",
          "PLP0094",
          "PLP0095",
          "PLP0096",
          "PLP0097",
          "PLP0098",
          "PLP0099",
          "PLP0208",
          "PLP0101",
          "PLP0102",
          "PLP0103",
          "PLP0104",
          "PLP0105",
          "PLP0107",
          "PLP0108",
          "PLP0109",
          "PLP0110",
          "PLP0111",
          "PLP0112",
          "PLP0113",
          "PLP0114",
          "PLP0115",
          "PLP0116",
          "PLP0117",
          "PLP0118",
          "PLP0119",
          "PLP0120",
          "PLP0121",
          "PLP0122",
          "PLP0123",
          "PLP0124",
          "PLP0125",
          "PLP0126",
          "PLP0127",
          "PLP0128",
          "PLP0129",
          "PLP0130",
          "PLP0131",
          "PLP0132",
          "PLP0133",
          "PLP0134",
          "PLP0159",
          "PLP0135",
          "PLP0136",
          "PLP0137",
          "PLP0138",
          "PLP0139",
          "PLP0140",
          "PLP0141",
          "PLP0142",
          "PLP0143",
          "PLP0144",
          "PLP0145",
          "PLP0146",
          "PLP0147",
          "PLP0148",
          "PLP0149",
          "PLP0150",
          "PLP0151",
          "PLP0152",
          "PLP0153",
          "PLP0154",
          "PLP0155",
          "PLP0156",
          "PLP0157",
          "PLP0158",
          "PLP0209",
          "PUR0001",
          "PUR0002",
          "PUR0003",
          "PUR0004",
          "PUR0005",
          "PUR0006",
          "PUR0007",
          "PUR0008",
          "PUR0009",
          "PUR0010",
          "PUR0011",
          "PUR0012",
          "PUR0013",
          "PUR0014",
          "PUR0015",
          "PUR0016",
          "PUR0017",
          "PUR0018",
          "PUR0019",
          "PUR0020",
          "PUR0021",
          "PUR0022",
          "PUR0023",
          "PUR0024",
          "PUR0025",
          "PUR0026",
          "PUR0027",
          "PUR0028",
          "PUR0029",
          "PUR0030",
          "PUR0031",
          "PUR0032",
          "PUR0033",
          "PUR0034",
          "PUR0035",
          "PUR0036",
          "PUR0037",
          "PUR0038",
          "PUR0039",
          "PUR0040",
          "PUR0041",
          "PUR0042",
          "PUR0043",
          "PUR0044",
          "PUR0045",
          "PUR0046",
          "PUR0047",
          "PUR0048",
          "PUR0049",
          "PUR0050",
          "PUR0051",
          "PUR0052",
          "PUR0053",
          "PUR0054",
          "PUR0055",
          "PUR0056",
          "PUR0057",
          "PUR0058",
          "PUR0059",
          "PUR0060",
          "PUR0061",
          "PUR0062",
          "PUR0063",
          "PUR0064",
          "PUR0065",
          "PUR0066",
          "PUR0067",
          "PUR0068",
          "PUR0069",
          "PUR0070",
          "PUR0071",
          "PUR0072",
          "PUR0073",
          "PUR0074",
          "PUR0075",
          "PUR0076",
          "PUR0077",
          "PUR0078",
          "PUR0079",
          "PUR0080",
          "PUR0081",
          "PUR0082",
          "PUR0083",
          "PUR0084",
          "PUR0085",
          "PUR0086",
          "PUR0087",
          "PUR0088",
          "PUR0089",
          "PUR0090",
          "PUR0091",
          "PUR0092",
          "PUR0093",
          "PUR0094",
          "PUR0095",
          "PUR0096",
          "PUR0097",
          "PUR0098",
          "PUR0099",
          "PUR0100",
          "PUR0101",
          "PUR0102",
          "PUR0103",
          "PUR0104",
          "PUR0105",
          "PUR0108",
          "PUR0109",
          "PUR0111",
          "PUR0112",
          "PUR0113",
          "PUR0114",
          "PUR0115",
          "PUR0116",
          "PUR0117",
          "PUR0118",
          "PUR0119",
          "PUR0120",
          "PUR0121",
          "PUR0122",
          "PUR0123",
          "PUR0124",
          "PUR0125",
          "PUR0126",
          "PUR0127",
          "PUR0128",
          "PUR0129",
          "PUR0130",
          "PUR0131",
          "PUR0132",
          "PUR0133",
          "PUR0134",
          "PUR0135",
          "PUR0136",
          "PUR0137",
          "PUR0138",
          "PUR0139",
          "PUR0140",
          "PUR0141",
          "PUR0142",
          "PUR0143",
          "PUR0144",
          "PUR0145",
          "PUR0146",
          "PUR0147",
          "PUR0148",
          "PUR0149",
          "PUR0150",
          "PUR0151",
          "PUR0152",
          "PUR0153",
          "PUR0154",
          "PUR0155",
          "PUR0156",
          "PUR0157",
          "PUR0158",
          "PUR0159",
          "PUR0160",
          "PUR0161",
          "PUR0162",
          "PUR0163",
          "PUR0164",
          "PUR0165",
          "PUR0166",
          "PUR0167",
          "PUR0168",
          "PUR0169",
          "PUR0170",
          "PUR0171",
          "PUR0172",
          "PUR0173",
          "PUR0174",
          "PUR0175",
          "PUR0176",
          "PUR0177",
          "PUR0178",
          "PUR0179",
          "PUR0180",
          "PUR0181",
          "PUR0182",
          "PUR0183",
          "DQE0142",
          "DQE0048",
          "DQE0004",
          "DQE0006",
          "DQE0054",
          "DQE0009",
          "DQE0051",
          "DQE0010",
          "DQE0140",
          "DQE0019",
          "DQE0154",
          "DQE0144",
          "DQE0074",
          "DQE0075",
          "DQE0017",
          "DQE0071",
          "DQE0328",
          "DQE0095",
          "DQE0038",
          "DQE0029",
          "DQE0003",
          "DQE0039",
          "DQE0040",
          "DQE0041",
          "DQE0043",
          "DQE0143",
          "DQE0044",
          "DQE0069",
          "DQE0066",
          "DQE0080",
          "DQE0082",
          "DQE0083",
          "DQE0088",
          "DQE0155",
          "DQE0090",
          "DQE0091",
          "DQE0092",
          "DQE0139",
          "DQE0148",
          "DQE0045",
          "DQE0070",
          "DQC0088",
          "DQC0137",
          "DQC0017",
          "DQC0020",
          "DQC0077",
          "DQC0145",
          "DQC0112",
          "DQC0093",
          "DQC0006",
          "DQC0007",
          "DQC0009",
          "DQC0010",
          "DQC0171",
          "DQC0012",
          "DQC0153",
          "DQC0167",
          "DQC0078",
          "DQC0174",
          "DQC0003",
          "DQC0072",
          "DQC0079",
          "DQC0098",
          "DQC0483",
          "DQC0080",
          "DQC0081",
          "DQC0026",
          "DQC0014",
          "DQC0069",
          "DQC0163",
          "DQC0022",
          "DQC0023",
          "DQC0028",
          "DQC0165",
          "DQC0029",
          "DQC0030",
          "DQC0032",
          "DQC0036",
          "DQC0035",
          "DQC0037",
          "DQC0042",
          "DQC0082",
          "DQC0083",
          "DQC0084",
          "DQC0085",
          "DQC0066",
          "DQC0043",
          "DQC0038",
          "DQC0039",
          "DQC0040",
          "DQC0115",
          "DQC0054",
          "DQC0168",
          "DQC0089",
          "DQC0090",
          "DQC0094",
          "DQC0073",
          "DQC0119",
          "DQC0045",
          "DQC0095",
          "DQC0096",
          "DQC0097",
          "DQC0099",
          "DQC0100",
          "DQC0101",
          "DQC0182",
          "DQC0102",
          "DQC0108",
          "DQC0114",
          "DQC0151",
          "DQC0181",
          "DQC0183",
          "DQC0184",
          "DQC0185",
          "DQC0041",
          "DQC0179",
          "DQC0055",
          "DQC0177",
          "DQC0189",
          "DQC0129",
          "DQC0134",
          "DQC0033",
          "DQC0047",
          "DQC0048",
          "DQC0051",
          "DQC0052",
          "DQC0053",
          "DQC0133",
          "PLP0001",
          "PLP0002",
          "PLP0003",
          "PLP0004",
          "PLP0005",
          "PLP0006",
          "PLP0007",
          "PLP0008",
          "PLP0009",
          "PLP0010",
          "PLP0011",
          "PLP0012",
          "PLP0013",
          "DQC0092",
          "DQC0180",
          "DQC0484",
          "DQC0497",
          "DQC0485",
          "DQC0486",
          "DQC0487",
          "DQC0488",
          "PLP0211",
          "PLP0014",
          "DQF0232",
          "DQF0233",
          "DQF0032",
          "DQF0238",
          "DQF0239",
          "DQF0240",
          "DQF0014",
          "DQF0022",
          "DQF0244",
          "DQF0250",
          "DQF0252",
          "DQF0247",
          "DQF0012",
          "DQF0030",
          "DQF0254",
          "DQF0255",
          "DQF0024",
          "DQF0259",
          "DQF0260",
          "DQF0261",
          "DQF0262",
          "DQF0263",
          "DQF0264",
          "DQF0267",
          "DQF0038",
          "DQF0039",
          "DQF0040",
          "DQF0041",
          "DQF0042",
          "DQF0043",
          "DQF0031",
          "DQF0029",
          "DQF0256",
          "DQF0265",
          "DQM0056",
          "DQM0058",
          "DQM0059",
          "DQM0060",
          "DQM0061",
          "DQM0062",
          "DQM0063",
          "DQM0064",
          "DQM0065",
          "DQM0066",
          "DQM0067",
          "DQM0069",
          "DQM0070",
          "DQM0071",
          "DQM0072",
          "DQM0073",
          "DQM0074",
          "DQM0075",
          "DQM0076",
          "DQM0077",
          "DQM0078",
          "DQM0079",
          "DQM0083",
          "DQM0084",
          "DQE0149",
          "DQC0500",
          "DQC0050",
          "DQE0329",
          "DQC0501",
          "DQC0502",
          "DQC0503",
          "DQC0504",
          "DQC0505",
          "DQC0506",
          "DQC0508",
          "DQC0509",
          "DQC0510",
          "DQC0511",
          "DQC0512",
          "DQC0513",
          "DQC0515",
          "DQC0516",
          "DQF0268",
          "DQF0269",
          "DQF0270",
          "DQF0271",
          "DQF0272",
          "DQF0273",
          "DQF0274",
          "FEI0164",
          "FEI0165",
          "FAR0167",
          "FAR0168",
          "FAR0169",
          "DCH0171",
          "FAR0171",
          "FEI0163",
          "DQC0498",
          "DQC0521",
          "DQC0522",
          "DQC0523",
          "DQC0524",
          "DQC0525",
          "DQC0526",
          "DQC0527",
          "DQE0330",
          "DQC0529",
          "PUR0185",
          "PUR0186",
          "PUR0187",
          "PUR0188",
          "PUR0189",
          "PUR0190",
          "PUR0191",
          "PUR0192",
          "PUR0193",
          "PUR0194",
          "PUR0195",
          "PUR0196",
          "PUR0197",
          "PUR0198",
          "PUR0199",
          "FGM0105",
          "FGM0106",
          "FGM0107",
          "FEI0168",
          "FEI0169",
          "FGM0108",
          "FGM0109",
          "FPA0088",
          "FGM0110",
          "FMI0045",
          "PUR0201",
          "PUR0202",
          "PUR0203",
          "PUR0204",
          "PUR0205",
          "PUR0206",
          "PUR0211",
          "PUR0207",
          "PUR0208",
          "PUR0209",
          "PUR0210",
          "DQC0530",
          "DQC0531",
          "DQC0532",
          "DQC0537",
          "DQE0417",
          "DQC0538",
          "PLP0226",
          "DQC0540",
          "DQC0541",
          "DQC0542",
          "DQC0543",
          "DQC0544",
          "PLP0215",
          "PLP0216",
          "PLP0217",
          "PLP0218",
          "PLP0219",
          "PLP0220",
          "PLP0221",
          "PLP0222",
          "PLP0223",
          "PLP0224",
          "PLP0214",
          "PLP0213",
          "PLP0225",
          "PLP0227",
          "DQE0332",
          "DQE0333",
          "DQE0334",
          "DQE0336",
          "DQE0337",
          "DQE0338",
          "DQE0341",
          "DQE0342",
          "DQE0344",
          "DQE0346",
          "DQE0347",
          "DQE0348",
          "DQE0351",
          "DQE0352",
          "DQE0353",
          "DQE0354",
          "DQE0355",
          "DQE0358",
          "DQE0359",
          "DQE0362",
          "DQE0363",
          "DQE0366",
          "DQE0380",
          "DQC0545",
          "DQC0546",
          "DQC0547",
          "DQC0548",
          "DQC0549",
          "DQC0550",
          "DQC0553",
          "DQC0554",
          "DQC0557",
          "DQC0558",
          "DQC0559",
          "DQC0560",
          "DQC0565",
          "DQC0566",
          "DQC0567",
          "DQC0568",
          "DQC0569",
          "DQC0570",
          "DQC0571",
          "DQC0572",
          "DQC0573",
          "DQC0574",
          "DQC0575",
          "DQC0576",
          "DQC0577",
          "DQC0578",
          "DQC0579",
          "DQC0582",
          "DQC0584",
          "DQC0586",
          "DQC0587",
          "DQC0588",
          "DQC0590",
          "DQC0591",
          "DQC0592",
          "DQC0593",
          "DQC0594",
          "DQC0595",
          "DQC0596",
          "PLP0228",
          "FCL0369",
          "PUR0212",
          "PUR0213",
          "PUR0214",
          "DQR0016",
          "DQR0018",
          "FPA0089",
          "DQC0599",
          "DQC0600",
          "FCL0370",
          "FCL0366",
          "FCL0367",
          "DQC0601",
          "DQC0602",
          "DCH0158",
          "PUR0215",
          "PUR0217",
          "PUR0218",
          "PUR0219",
          "PUR0220",
          "PUR0221",
          "PUR0222",
          "PUR0223",
          "PUR0224",
          "PUR0225",
          "FAL0015",
          "FAL0016",
          "FAL0017",
          "PUR0226",
          "FAL0018",
          "FAL0012",
          "FAR0172",
          "FEI0171",
          "FEI0172",
          "FEI0174",
          "FEI0175",
          "FEI0176",
          "FEI0177",
          "DQR0020",
          "DQE0385",
          "DQE0386",
          "DQE0387",
          "DQE0388",
          "DQE0389",
          "DQE0390",
          "DQE0391",
          "DQE0392",
          "DQE0393",
          "FMI0047",
          "FMI0048",
          "FMI0049",
          "FPA0090",
          "PUR0227",
          "PLP0229",
          "FAL0001",
          "PUR0228",
          "DQE0394",
          "DQE0395",
          "DQE0396",
          "DQE0397",
          "DQE0398",
          "DQC0603",
          "DQC0604",
          "DQC0605",
          "DQC0606",
          "DQC0607",
          "DQC0608",
          "DQC0609",
          "DQC0610",
          "DQC0611",
          "DQC0612",
          "DQC0613",
          "DQC0614",
          "DQC0615",
          "DQC0616",
          "DQE0399",
          "DQE0400",
          "DQE0401",
          "DQE0402",
          "DQE0403",
          "DQE0404",
          "DQF0275",
          "DQC0617",
          "DQC0618",
          "DQC0619",
          "DQC0620",
          "DQC0621",
          "DQC0622",
          "DQC0623",
          "DQC0624",
          "DCH0159",
          "FGM0116",
          "DQC0628",
          "DQC0629",
          "FEI0178",
          "PUR0230",
          "PUR0229",
          "PLP0230",
          "FEI0179",
          "FEI0182",
          "FEI0183",
          "DQC0630",
          "DQC0631",
          "DQC0632",
          "DQC0633",
          "DQE0405",
          "DQE0407",
          "DQE0408",
          "DQC0634",
          "PLP0231",
          "PLP0232",
          "DQR0022",
          "DQC0636",
          "DQC0637",
          "DQE0410",
          "DQE0411",
          "DQE0412",
          "DQE0413",
          "DQE0414",
          "DQE0415",
          "DQC0638",
          "DQC0639",
          "DQC0640",
          "DQC0641",
          "DQE0423",
          "DQC0643",
          "DQC0644",
          "DQC0645",
          "DQE0424",
          "DQC0647",
          "DQC0650",
          "DQE0416",
          "DQC0651",
          "DQC0652",
          "DQC0653",
          "DQE0418",
          "DQC0655",
          "DQE0419",
          "DQC0656",
          "DQC0657",
          "DQC0658",
          "DQC0659",
          "DQC0660",
          "DQC0661",
          "DQC0662",
          "FEI0184",
          "FEI0185",
          "FEI0186",
          "FEI0188",
          "FEI0189",
          "FEI0190",
          "FEI0191",
          "FEI0192",
          "FEI0193",
          "FPA0091",
          "FPA0092",
          "FPA0093",
          "FPA0094",
          "FPA0095",
          "FPA0096",
          "FGM0118",
          "FGM0119",
          "FGM0120",
          "FGM0121",
          "FGM0122",
          "FGM0123",
          "FGM0124",
          "FGM0125",
          "FGM0126",
          "FAL0002",
          "FAL0003",
          "FAL0005",
          "DCH0161",
          "DCH0162",
          "DCH0163",
          "FAL0006",
          "FAL0007",
          "FAL0008",
          "PUR0231",
          "PUR0232",
          "PUR0233",
          "PUR0234",
          "DCH0164",
          "FCL0372",
          "FCL0373",
          "FCL0374",
          "FCL0375",
          "FCL0382",
          "FCL0383",
          "FCL0384",
          "FCL0385",
          "FCL0386",
          "FCL0388",
          "FCL0397",
          "FCL0402",
          "FEI0187",
          "FAR0173",
          "DQE0420",
          "DQC0663",
          "DQC0664",
          "FCL0406",
          "FAR0174",
          "DCH0165",
          "DCH0166",
          "FEI0199",
          "FEI0200",
          "FAR0176",
          "FCL0407",
          "FPA0097",
          "FMI0051",
          "FCL0408",
          "DCH0167",
          "DCH0168",
          "DQC0665",
          "DQC0666",
          "PUR0235",
          "DQR0023",
          "FEI0202",
          "FPA0098",
          "DQE0422",
          "FPA0099",
          "FPA0100",
          "FPA0101",
          "FPA0102",
          "FPA0184",
          "FPA0185",
          "FPA0186",
          "FPA0187",
          "FPA0188",
          "FPA0189",
          "FPA0190",
          "FPA0191",
          "FPA0192",
          "FPA0193",
          "FPA0194",
          "FPA0195",
          "FPA0196",
          "FPA0197",
          "FPA0198",
          "FPA0199",
          "DQC0667",
          "DQC0668",
          "DQC0669",
          "DQE0425",
          "PLP0235",
          "PLP0236",
          "PLP0237",
          "PLP0238",
          "PLP0239",
          "DQR0025",
          "DQR0027",
          "DQR0028",
          "DQR0034",
          "DQR0035",
          "DQR0036",
          "DQR0037",
          "DQR0038",
          "DQR0040",
          "DQR0041",
          "DQR0042",
          "DQR0043",
          "DQR0044",
          "DQR0046",
          "DQR0047",
          "DQR0048",
          "DQR0049",
          "DQR0050",
          "DQR0051",
          "DQR0052",
          "DQR0053",
          "DQR0054",
          "DQC0671",
          "DQC0674",
          "PUR0236",
          "PUR0237",
          "PUR0238",
          "PUR0239",
          "PUR0240",
          "PUR0241",
          "PUR0242",
          "PUR0243",
          "PUR0244",
          "FGM0128",
          "FAR0177",
          "FAR0178",
          "FGM0129",
          "FAL0022",
          "FEI0204",
          "FAL0023",
          "DCH0172",
          "DCH0173",
          "DCH0174",
          "DCH0175",
          "FGM0130",
          "PLP0240",
          "PLP0241",
          "PLP0242",
          "PLP0243",
          "PLP0244",
          "DCH0177",
          "DQR0055",
          "DQR0056",
          "PLP0245",
          "FEI0205",
          "PUR0245",
          "PUR0246",
          "PUR0247",
          "PUR0248",
          "PUR0249",
          "PUR0250",
          "PUR0251",
          "PUR0252",
          "PUR0253",
          "PUR0254",
          "PUR0255",
          "PUR0256",
          "PUR0257",
          "PUR0258",
          "PUR0259",
          "PUR0260",
          "PUR0261",
          "PUR0262",
          "PLP0246",
          "PLP0247",
          "PLP0248",
          "PLP0249",
          "PLP0253",
          "PLP0254",
          "PLP0255",
          "PLP0260",
          "PLP0250",
          "FAL0024",
          "FGM0131",
          "PLP0259",
          "PLP0261",
          "PLP0256",
          "PLP0257",
          "PLP0258",
          "FCL0411",
          "PLP0262",
          "DCH0179",
          "FAL0025",
          "FAL0026",
          "FAL0027",
          "FAL0028",
          "FAL0029",
          "FAL0030",
          "FAL0031",
          "FAL0032",
          "FAL0033",
          "FAL0034",
          "FAL0035",
          "FAL0049",
          "FAL0050",
          "DCH0180",
          "FAL0036",
          "FPA0103",
          "FPA0104",
          "FPA0105",
          "FPA0106",
          "FPA0107",
          "FPA0200",
          "FGM0132",
          "FAL0037",
          "FMI0053",
          "DCH0181",
          "FGM0133",
          "FGM0134",
          "FGM0135",
          "FGM0136",
          "PLP0263",
          "PLP0264",
          "FEI0207",
          "FEI0208",
          "FEI0209",
          "FEI0210",
          "FEI0211",
          "FPA0109",
          "FPA0108",
          "DQR0057",
          "DQR0058",
          "DQR0059",
          "DQR0060",
          "DQR0061",
          "DQR0062",
          "DQR0063",
          "DQR0064",
          "DQR0065",
          "DQR0066",
          "DQR0067",
          "FPA0110",
          "FPA0111",
          "FPA0112",
          "DQC0676",
          "DQC0677",
          "FEI0212",
          "FEI0213",
          "FEI0214",
          "FEI0215",
          "FEI0216",
          "FEI0217",
          "FEI0218",
          "FEI0219",
          "FEI0220",
          "FEI0221",
          "FEI0222",
          "DQR0068",
          "DQE0426",
          "DQC0678",
          "FEI0223",
          "FEI0224",
          "FEI0225",
          "FEI0226",
          "FEI0227",
          "FEI0228",
          "DQE0427",
          "DQE0428",
          "DQE0429",
          "DQM0085",
          "DQE0430",
          "DQE0434",
          "DQE0432",
          "DQE0433",
          "PUR0263",
          "PUR0433",
          "FCL0412",
          "FCL0413",
          "FCL0414",
          "DQC0680",
          "DQR0070",
          "DQR0076",
          "DQR0077",
          "DQE0435",
          "DQR0069",
          "DQR0071",
          "FPA0113",
          "FGM0137",
          "FEI0229",
          "FEI0230",
          "DQE0436",
          "FPA0114",
          "DCH0182",
          "PUR0264",
          "DCH0014",
          "FEI0231",
          "FEI0232",
          "FEI0233",
          "FEI0234",
          "FEI0235",
          "FEI0236",
          "FEI0237",
          "FEI0238",
          "FEI0239",
          "FEI0331",
          "FEI0332",
          "FEI0333",
          "FEI0334",
          "FEI0335",
          "FEI0336",
          "FEI0337",
          "FPA0115",
          "DQM0086",
          "PLP0265",
          "DQE0437",
          "FAL0038",
          "PUR0265",
          "PUR0266",
          "PUR0267",
          "DQC0681",
          "PUR0268",
          "DQC0682",
          "FEI0240",
          "FEI0241",
          "FEI0242",
          "FEI0243",
          "FEI0244",
          "FEI0245",
          "FEI0246",
          "FPA0116",
          "PUR0269",
          "FPA0117",
          "FPA0118",
          "FPA0119",
          "FPA0120",
          "FPA0121",
          "FPA0122",
          "FPA0123",
          "FPA0124",
          "FPA0125",
          "FPA0126",
          "FPA0127",
          "FPA0128",
          "FPA0129",
          "FPA0130",
          "FPA0131",
          "FPA0132",
          "FPA0133",
          "FPA0134",
          "FPA0135",
          "FPA0136",
          "FPA0137",
          "FPA0138",
          "DQC0683",
          "PUR0277",
          "FCL0415",
          "DQE0439",
          "FEI0247",
          "FEI0248",
          "FEI0249",
          "FEI0250",
          "FEI0251",
          "FEI0252",
          "FEI0253",
          "FEI0254",
          "FEI0255",
          "FEI0257",
          "FEI0258",
          "FAR0179",
          "FEI0259",
          "FPA0139",
          "FEI0260",
          "DQE0446",
          "PUR0278",
          "DQE0447",
          "DQE0448",
          "DQE0449",
          "DQE0450",
          "DQE0451",
          "DQE0457",
          "DQE0458",
          "DQE0459",
          "PUR0279",
          "PUR0280",
          "PUR0281",
          "PUR0282",
          "PUR0283",
          "PUR0284",
          "PUR0285",
          "PUR0286",
          "PUR0287",
          "PUR0288",
          "PUR0292",
          "PUR0293",
          "PUR0294",
          "PUR0295",
          "PUR0296",
          "PUR0297",
          "FPA0141",
          "FPA0146",
          "FAR0180",
          "FGM0139",
          "FGM0140",
          "FGM0141",
          "FGM0143",
          "FGM0149",
          "FEI0263",
          "FEI0264",
          "FEI0266",
          "FEI0267",
          "FEI0268",
          "FEI0269",
          "FEI0270",
          "DCH0184",
          "DCH0185",
          "DCH0187",
          "DCH0188",
          "DCH0189",
          "DCH0190",
          "DCH0191",
          "FAR0181",
          "PUR0298",
          "FAL0040",
          "FPA0143",
          "DQC0688",
          "DQE0438",
          "PUR0270",
          "PUR0271",
          "PUR0272",
          "PUR0273",
          "PUR0274",
          "PUR0275",
          "PUR0276",
          "FEI0256",
          "DQC0684",
          "DQE0440",
          "DQC0685",
          "DQE0441",
          "DQE0442",
          "DQE0443",
          "DQC0686",
          "FPA0140",
          "DQE0444",
          "DQC0687",
          "FEI0261",
          "FEI0262",
          "FPA0144",
          "FEI0271",
          "FEI0272",
          "FEI0273",
          "FEI0274",
          "FEI0275",
          "FEI0276",
          "FEI0277",
          "DQC0689",
          "DQM0087",
          "DQM0088",
          "DQC0690",
          "DQC0691",
          "DQM0089",
          "DQM0090",
          "DQM0091",
          "FEI0278",
          "FEI0279",
          "FEI0280",
          "FEI0281",
          "FEI0284",
          "FPA0147",
          "FPA0148",
          "DCH0193",
          "FCL0417",
          "FCL0418",
          "FCL0419",
          "FCL0420",
          "FCL0421",
          "FEI0289",
          "FEI0290",
          "FEI0291",
          "FEI0293",
          "FCL0422",
          "FCL0423",
          "FPA0149",
          "FPA0150",
          "FPA0151",
          "PUR0347",
          "PUR0348",
          "PUR0349",
          "PUR0350",
          "PUR0351",
          "PUR0352",
          "FGM0142",
          "FGM0145",
          "PUR0353",
          "PUR0354",
          "DQC0692",
          "DQC0693",
          "DQR0072",
          "DQC0694",
          "DQR0073",
          "FGM0146",
          "PUR0355",
          "FGM0147",
          "DQR0074",
          "PUR0356",
          "PUR0357",
          "PUR0358",
          "PUR0359",
          "PUR0360",
          "DQC0697",
          "DQC0698",
          "PUR0363",
          "FPA0153",
          "FEI0295",
          "DQE0452",
          "FCL0424",
          "FAR0182",
          "FAR0183",
          "FPA0155",
          "FCL0425",
          "DCH0194",
          "PUR0364",
          "FPA0158",
          "FCL0426",
          "DQE0453",
          "DQE0454",
          "DQE0455",
          "PLP0266",
          "PLP0267",
          "FPA0159",
          "FAR0186",
          "DCH0195",
          "DQC0699",
          "PUR0365",
          "PUR0366",
          "PUR0367",
          "PUR0368",
          "PUR0369",
          "FGM0148",
          "PUR0370",
          "PUR0371",
          "DQE0456",
          "PUR0373",
          "DQC0700",
          "PUR0374",
          "FEI0296",
          "FEI0297",
          "FEI0298",
          "FEI0299",
          "FGM0150",
          "FBR0001",
          "FBR0002",
          "PLP0268",
          "DQC0701",
          "FAL0043",
          "FAL0044",
          "FAL0046",
          "DQC0703",
          "PUR0379",
          "PUR0380",
          "PUR0381",
          "PUR0382",
          "PUR0383",
          "PUR0384",
          "PUR0385",
          "PUR0386",
          "PUR0387",
          "PUR0388",
          "PUR0389",
          "PUR0390",
          "PUR0391",
          "PUR0392",
          "PUR0393",
          "PUR0394",
          "PUR0395",
          "PUR0396",
          "PUR0397",
          "PUR0398",
          "PUR0399",
          "PUR0400",
          "PUR0401",
          "PUR0402",
          "PUR0403",
          "FAL0045",
          "FGM0151",
          "FEI0300",
          "FEI0301",
          "FEI0302",
          "FEI0303",
          "FGM0152",
          "FAR0187",
          "DCH0197",
          "PUR0404",
          "PUR0405",
          "PUR0406",
          "FAL0047",
          "DCH0198",
          "FAR0188",
          "FAR0189",
          "FAR0190",
          "FAR0191",
          "FAR0192",
          "FAR0193",
          "FAR0194",
          "FAR0195",
          "FAR0196",
          "FAR0197",
          "FAR0198",
          "FGM0153",
          "FEI0304",
          "DCH0199",
          "FEI0305",
          "DCH0200",
          "FEI0306",
          "FEI0307",
          "DCH0201",
          "FGM0154",
          "FEI0308",
          "DCH0202",
          "FEI0309",
          "DCH0203",
          "DQC0704",
          "FGM0155",
          "PLP0269",
          "FEI0310",
          "FEI0311",
          "PUR0407",
          "FCL0428",
          "PUR0408",
          "PUR0409",
          "PUR0410",
          "PUR0411",
          "PUR0412",
          "PUR0413",
          "PUR0414",
          "PUR0415",
          "PUR0416",
          "PUR0417",
          "FEI0312",
          "PUR0418",
          "FAL0048",
          "FPA0160",
          "PUR0419",
          "PUR0420",
          "PUR0421",
          "PUR0422",
          "PUR0423",
          "PUR0424",
          "FEI0315",
          "FEI0316",
          "FEI0317",
          "FEI0318",
          "FEI0319",
          "FEI0320",
          "FEI0321",
          "FEI0322",
          "FEI0323",
          "FEI0324",
          "FEI0325",
          "FEI0326",
          "FEI0327",
          "FEI0328",
          "FEI0329",
          "FEI0330",
          "DQC0705",
          "DQR0075",
          "FPA0162",
          "FPA0163",
          "FPA0164",
          "FPA0165",
          "FPA0166",
          "FPA0167",
          "FPA0168",
          "FPA0169",
          "FPA0170",
          "FPA0171",
          "FPA0172",
          "FPA0173",
          "FPA0174",
          "FPA0175",
          "FPA0176",
          "FPA0177",
          "FPA0178",
          "FPA0179",
          "FPA0180",
          "FPA0181",
          "FPA0182",
          "FPA0183",
          "FCL0429",
          "FCL0430",
          "FCL0433",
          "FCL0434",
          "FCL0435",
          "FCL0436",
          "PLP0273",
          "PLP0274",
          "PLP0275",
          "DQE0460"
        ]
      },
      "MaineLicenseType": {
        "type": "string",
        "example": "SupervisedLenderLicense",
        "x-enumNames": [
          "SupervisedLenderLicense",
          "DebtCollector"
        ],
        "enum": [
          "SupervisedLenderLicense",
          "DebtCollector"
        ]
      },
      "ManualDisclosureStatus": {
        "type": "string",
        "example": "Generated",
        "x-enumNames": [
          "Generated",
          "Sent",
          "Completed",
          "Failed"
        ],
        "enum": [
          "Generated",
          "Sent",
          "Completed",
          "Failed"
        ]
      },
      "ManufacturedHomeConditionDescription": {
        "type": "string",
        "example": "New",
        "x-enumNames": [
          "New",
          "Used"
        ],
        "enum": [
          "New",
          "Used"
        ]
      },
      "MaritalStatus": {
        "type": "string",
        "example": "Married",
        "x-enumNames": [
          "Married",
          "Separated",
          "Unmarried"
        ],
        "enum": [
          "Married",
          "Separated",
          "Unmarried"
        ]
      },
      "MassachusettsLicenseType": {
        "type": "string",
        "example": "MortgageLenderLicense",
        "x-enumNames": [
          "MortgageLenderLicense",
          "MortgageBrokerLicense",
          "DebtCollector"
        ],
        "enum": [
          "MortgageLenderLicense",
          "MortgageBrokerLicense",
          "DebtCollector"
        ]
      },
      "MichiganLicenseType": {
        "type": "string",
        "example": "FirstMortgageBrokerAndLenderLicense",
        "x-enumNames": [
          "FirstMortgageBrokerAndLenderLicense",
          "FirstMortgageBrokerAndLenderRegistration",
          "FirstMortgageBrokerLicense",
          "FirstMortgageBrokerRegistration",
          "FirstMortgageBrokerLenderAndServicerLicense",
          "FirstMortgageBrokerLenderAndServicerRegistration",
          "SecondMortgageBrokerAndLenderLicense",
          "SecondMortgageBrokerAndLenderRegistration",
          "SecondMortgageBrokerLicense",
          "SecondMortgageBrokerRegistration",
          "SecondMortgageBrokerLenderAndServicerLicense"
        ],
        "enum": [
          "FirstMortgageBrokerAndLenderLicense",
          "FirstMortgageBrokerAndLenderRegistration",
          "FirstMortgageBrokerLicense",
          "FirstMortgageBrokerRegistration",
          "FirstMortgageBrokerLenderAndServicerLicense",
          "FirstMortgageBrokerLenderAndServicerRegistration",
          "SecondMortgageBrokerAndLenderLicense",
          "SecondMortgageBrokerAndLenderRegistration",
          "SecondMortgageBrokerLicense",
          "SecondMortgageBrokerRegistration",
          "SecondMortgageBrokerLenderAndServicerLicense"
        ]
      },
      "MilitaryDischargeType": {
        "type": "string",
        "example": "Honorable",
        "x-enumNames": [
          "Honorable",
          "Dishonorable",
          "Other"
        ],
        "enum": [
          "Honorable",
          "Dishonorable",
          "Other"
        ]
      },
      "MilitaryServicePeriod": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "branchName": {
            "type": "string",
            "description": "The name of the branch if the branch type is other",
            "nullable": true
          },
          "branchType": {
            "description": "Describes which branch the borrower served in",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MilitaryServicePeriodBranchType"
              }
            ]
          },
          "filedClaimPriorToDischarge": {
            "type": "boolean",
            "description": "Did the borrower file a claim for VA disability benefits prior to discharge from active duty?",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "militaryServiceNumber": {
            "type": "string",
            "description": "The borrower's military service number if different from their SSN",
            "nullable": true
          },
          "militaryServiceNumberDifferentFromSSN": {
            "type": "boolean",
            "description": "Military service number different from SSN"
          },
          "personnelType": {
            "description": "Military personnel type",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MilitaryServicePeriodPersonnelType"
              }
            ]
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          },
          "servedAsAnAliasDifferentFromBorrowerName": {
            "type": "boolean",
            "description": "Served as an alias different from borrower name"
          },
          "serviceEndDate": {
            "type": "string",
            "description": "The date the borrower's service ended on if status is veteran, separated, or reserve national guard never activated",
            "format": "date",
            "nullable": true
          },
          "serviceServedAsName": {
            "type": "string",
            "description": "The alias the borrower served under if different from the borrower name",
            "nullable": true
          },
          "serviceStartDate": {
            "type": "string",
            "description": "The date the borrower's service started on",
            "format": "date",
            "nullable": true
          },
          "statusType": {
            "description": "Describes the status of the borrower's military service",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MilitaryServicePeriodStatusType"
              }
            ]
          }
        }
      },
      "MilitaryServicePeriodBranchType": {
        "type": "string",
        "example": "AirForce",
        "x-enumNames": [
          "AirForce",
          "AirNationalGuard",
          "Army",
          "ArmyNationalGuard",
          "ArmyReserves",
          "CoastGuard",
          "Marines",
          "MarinesReserves",
          "Navy",
          "NavyReserves",
          "Other"
        ],
        "enum": [
          "AirForce",
          "AirNationalGuard",
          "Army",
          "ArmyNationalGuard",
          "ArmyReserves",
          "CoastGuard",
          "Marines",
          "MarinesReserves",
          "Navy",
          "NavyReserves",
          "Other"
        ]
      },
      "MilitaryServicePeriodPersonnelType": {
        "type": "string",
        "example": "Officer",
        "x-enumNames": [
          "Officer",
          "Enlisted"
        ],
        "enum": [
          "Officer",
          "Enlisted"
        ]
      },
      "MilitaryServicePeriodStatusType": {
        "type": "string",
        "example": "ActiveDuty",
        "x-enumNames": [
          "ActiveDuty",
          "Veteran",
          "Separated",
          "ReserveNationalGuardNeverActivated"
        ],
        "enum": [
          "ActiveDuty",
          "Veteran",
          "Separated",
          "ReserveNationalGuardNeverActivated"
        ]
      },
      "MilitaryStatusType": {
        "type": "string",
        "example": "None",
        "x-enumNames": [
          "None",
          "ActiveDuty",
          "ReserveNationalGuardNeverActivated",
          "Veteran"
        ],
        "enum": [
          "None",
          "ActiveDuty",
          "ReserveNationalGuardNeverActivated",
          "Veteran"
        ]
      },
      "MinnesotaLicenseType": {
        "type": "string",
        "example": "ResidentialMortgageOriginatorLicense",
        "x-enumNames": [
          "ResidentialMortgageOriginatorLicense",
          "ResidentialMortgageOriginatorLicenseOtherTradeName1"
        ],
        "enum": [
          "ResidentialMortgageOriginatorLicense",
          "ResidentialMortgageOriginatorLicenseOtherTradeName1"
        ]
      },
      "MiPlaceOrderInput": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "orderType"
        ],
        "properties": {
          "orderType": {
            "$ref": "#/components/schemas/PmiOrderType"
          },
          "quoteId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          }
        }
      },
      "MIPremiumSchedule": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "premiumAmount",
          "premiumRatePercent",
          "rateDurationMonthsCount"
        ],
        "properties": {
          "premiumAmount": {
            "type": "number",
            "format": "decimal"
          },
          "premiumRatePercent": {
            "type": "number",
            "format": "decimal"
          },
          "rateDurationMonthsCount": {
            "type": "integer"
          }
        }
      },
      "MiQuote": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "coveragePercent": {
            "type": "number",
            "readOnly": true,
            "format": "decimal",
            "nullable": true
          },
          "expiration": {
            "type": "string",
            "readOnly": true,
            "format": "date"
          },
          "externalProviderIdentifier": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "isPremiumFinanced": {
            "type": "boolean",
            "readOnly": true,
            "nullable": true
          },
          "isRefundable": {
            "type": "boolean",
            "readOnly": true,
            "nullable": true
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "miPremiumSchedule": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/MIPremiumSchedule"
            }
          },
          "mortgageInsuranceFinancedAmount": {
            "type": "number",
            "readOnly": true,
            "format": "decimal",
            "nullable": true
          },
          "premiumAtClosing": {
            "type": "boolean",
            "readOnly": true,
            "nullable": true
          },
          "premiumPaidBy": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MortgageInsurancePremiumPaidBy"
              }
            ]
          },
          "premiumPlan": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MortgageInsurancePremiumPlan"
              }
            ]
          },
          "prepaidPayment": {
            "type": "number",
            "readOnly": true,
            "format": "decimal",
            "nullable": true
          },
          "provider": {
            "readOnly": true,
            "$ref": "#/components/schemas/PmiProvider"
          },
          "pulledAt": {
            "type": "string",
            "readOnly": true,
            "format": "date-time"
          },
          "renewalType": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MortgageInsuranceRenewalType"
              }
            ]
          },
          "upfrontPayment": {
            "type": "number",
            "readOnly": true,
            "format": "decimal",
            "nullable": true
          }
        }
      },
      "MiQuoteInput": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "coveragePercent": {
            "type": "integer"
          },
          "isPremiumFinanced": {
            "type": "boolean"
          },
          "isRefundable": {
            "type": "boolean"
          },
          "premiumAtClosing": {
            "type": "boolean"
          },
          "premiumPaidBy": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MortgageInsurancePremiumPaidBy"
              }
            ]
          },
          "premiumPlan": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MortgageInsurancePremiumPlan"
              }
            ]
          },
          "renewalType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MortgageInsuranceRenewalType"
              }
            ]
          },
          "upfrontPremiumPercent": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          }
        }
      },
      "MiQuoteResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "providerErrorMessages": {
            "type": "object",
            "readOnly": true,
            "nullable": true,
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "quotes": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/MiQuote"
            }
          }
        }
      },
      "MontanaLicenseType": {
        "type": "string",
        "example": "ConsumerLoanLicense",
        "x-enumNames": [
          "ConsumerLoanLicense",
          "MortgageBrokerLicense",
          "MortgageLenderLicense",
          "MortgageServicerLicense"
        ],
        "enum": [
          "ConsumerLoanLicense",
          "MortgageBrokerLicense",
          "MortgageLenderLicense",
          "MortgageServicerLicense"
        ]
      },
      "MonthDay": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "day": {
            "type": "integer",
            "format": "byte"
          },
          "month": {
            "type": "integer",
            "format": "byte"
          }
        }
      },
      "MonthName": {
        "type": "string",
        "example": "January",
        "x-enumNames": [
          "January",
          "February",
          "March",
          "April",
          "May",
          "June",
          "July",
          "August",
          "September",
          "October",
          "November",
          "December"
        ],
        "enum": [
          "January",
          "February",
          "March",
          "April",
          "May",
          "June",
          "July",
          "August",
          "September",
          "October",
          "November",
          "December"
        ]
      },
      "MortgageHolderType": {
        "type": "string",
        "example": "FNMA",
        "x-enumNames": [
          "FNMA",
          "FMAC",
          "GNMA",
          "Other"
        ],
        "enum": [
          "FNMA",
          "FMAC",
          "GNMA",
          "Other"
        ]
      },
      "MortgageInsuranceCancellationType": {
        "type": "string",
        "example": "LTVCutoffSalesPrice",
        "x-enumNames": [
          "LTVCutoffSalesPrice",
          "LTVCutoffAppraisedValue",
          "Midpoint",
          "NotEligible",
          "LTVCutoff"
        ],
        "enum": [
          "LTVCutoffSalesPrice",
          "LTVCutoffAppraisedValue",
          "Midpoint",
          "NotEligible",
          "LTVCutoff"
        ]
      },
      "MortgageInsurancePremiumPaidBy": {
        "type": "string",
        "example": "Borrower",
        "x-enumNames": [
          "Borrower",
          "Lender"
        ],
        "enum": [
          "Borrower",
          "Lender"
        ]
      },
      "MortgageInsurancePremiumPlan": {
        "type": "string",
        "example": "Monthly",
        "x-enumNames": [
          "Monthly",
          "Annual",
          "SinglePremium",
          "SplitPremium"
        ],
        "enum": [
          "Monthly",
          "Annual",
          "SinglePremium",
          "SplitPremium"
        ]
      },
      "MortgageInsuranceRenewalType": {
        "type": "string",
        "example": "AverageAnnualScheduledUnpaidPrincipalBalance",
        "x-enumNames": [
          "AverageAnnualScheduledUnpaidPrincipalBalance",
          "BaseLoanAmount",
          "Constant",
          "Declining",
          "NoRenewals",
          "PercentOfCurrentBalance",
          "PercentOfOriginalBalance"
        ],
        "enum": [
          "AverageAnnualScheduledUnpaidPrincipalBalance",
          "BaseLoanAmount",
          "Constant",
          "Declining",
          "NoRenewals",
          "PercentOfCurrentBalance",
          "PercentOfOriginalBalance"
        ]
      },
      "MortgageInsuranceStatus": {
        "type": "string",
        "example": "QuoteSelected",
        "x-enumNames": [
          "QuoteSelected",
          "CommitmentReceived",
          "OrderInProgress",
          "OrderFailed",
          "QuoteExpired",
          "QuoteFailed"
        ],
        "enum": [
          "QuoteSelected",
          "CommitmentReceived",
          "OrderInProgress",
          "OrderFailed",
          "QuoteExpired",
          "QuoteFailed"
        ]
      },
      "MortgageInvestorGuidelinesType": {
        "type": "string",
        "example": "FNMA",
        "x-enumNames": [
          "FNMA",
          "FMAC",
          "GNMA",
          "Other"
        ],
        "enum": [
          "FNMA",
          "FMAC",
          "GNMA",
          "Other"
        ]
      },
      "MortgageProductBenefitType": {
        "type": "string",
        "example": "LowerInterestRate",
        "x-enumNames": [
          "LowerInterestRate",
          "ShortenLoanTerm",
          "LowerMonthlyPayment",
          "ConvertFromARMToFixed",
          "MakePaymentOnExistingBalloonLoan",
          "RemoveMortgageInsuranceDueToLTV",
          "NewLoanIsSpecialHousingAgencyMortgage",
          "IncreaseInMonthlyResidualIncome"
        ],
        "enum": [
          "LowerInterestRate",
          "ShortenLoanTerm",
          "LowerMonthlyPayment",
          "ConvertFromARMToFixed",
          "MakePaymentOnExistingBalloonLoan",
          "RemoveMortgageInsuranceDueToLTV",
          "NewLoanIsSpecialHousingAgencyMortgage",
          "IncreaseInMonthlyResidualIncome"
        ]
      },
      "MortgageSizeType": {
        "type": "string",
        "example": "Conforming",
        "x-enumNames": [
          "Conforming",
          "HighBalance",
          "Jumbo"
        ],
        "enum": [
          "Conforming",
          "HighBalance",
          "Jumbo"
        ]
      },
      "MortgageType": {
        "type": "string",
        "example": "Conventional",
        "x-enumNames": [
          "Conventional",
          "FHA",
          "USDA",
          "VA"
        ],
        "enum": [
          "Conventional",
          "FHA",
          "USDA",
          "VA"
        ]
      },
      "MultipleUnitOwner": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "entityName": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "isDeveloperOrSponsorIndicator": {
            "type": "boolean",
            "nullable": true
          },
          "leasedAtMarketNumberUnits": {
            "type": "integer",
            "nullable": true
          },
          "leasedRentControlledNumberUnits": {
            "type": "integer",
            "nullable": true
          },
          "ownedNumberUnits": {
            "type": "integer",
            "nullable": true
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          }
        }
      },
      "NativeAmericanLandsType": {
        "type": "string",
        "example": "FeeSimple",
        "x-enumNames": [
          "FeeSimple",
          "IndividualTrustLand",
          "AlaskaNativeCorporationLand",
          "TribalTrustLandOffReservation",
          "TribalTrustLandOnAReservation"
        ],
        "enum": [
          "FeeSimple",
          "IndividualTrustLand",
          "AlaskaNativeCorporationLand",
          "TribalTrustLandOffReservation",
          "TribalTrustLandOnAReservation"
        ]
      },
      "NaturalPersonsType": {
        "type": "string",
        "example": "Borrower",
        "x-enumNames": [
          "Borrower",
          "NonBorrower"
        ],
        "enum": [
          "Borrower",
          "NonBorrower"
        ]
      },
      "NegativeAmortizationType": {
        "type": "string",
        "example": "None",
        "x-enumNames": [
          "None",
          "Potential",
          "Scheduled"
        ],
        "enum": [
          "None",
          "Potential",
          "Scheduled"
        ]
      },
      "NevadaLicenseType": {
        "type": "string",
        "example": "MortgageCompanyLicense",
        "x-enumNames": [
          "MortgageCompanyLicense",
          "SupplementalMortgageServicerLicense"
        ],
        "enum": [
          "MortgageCompanyLicense",
          "SupplementalMortgageServicerLicense"
        ]
      },
      "NewJerseyLicenseType": {
        "type": "string",
        "example": "ResidentialMortgageLenderLicense",
        "x-enumNames": [
          "ResidentialMortgageLenderLicense",
          "ResidentialMortgageLenderAndServicerRegistration"
        ],
        "enum": [
          "ResidentialMortgageLenderLicense",
          "ResidentialMortgageLenderAndServicerRegistration"
        ]
      },
      "NewMexicoLicenseType": {
        "type": "string",
        "example": "MortgageLoanCompanyLicense",
        "x-enumNames": [
          "MortgageLoanCompanyLicense",
          "CollectionAgencyLicense"
        ],
        "enum": [
          "MortgageLoanCompanyLicense",
          "CollectionAgencyLicense"
        ]
      },
      "NewYorkLicenseType": {
        "type": "string",
        "example": "MortgageBankerLicense",
        "x-enumNames": [
          "MortgageBankerLicense",
          "MortgageBrokerRegistration",
          "ExemptMortgageLoanServicerRegistration"
        ],
        "enum": [
          "MortgageBankerLicense",
          "MortgageBrokerRegistration",
          "ExemptMortgageLoanServicerRegistration"
        ]
      },
      "NFIPCommunityParticipationStatus": {
        "type": "string",
        "example": "Emergency",
        "x-enumNames": [
          "Emergency",
          "NonParticipating",
          "Other",
          "Probation",
          "Regular",
          "Suspended",
          "Unknown"
        ],
        "enum": [
          "Emergency",
          "NonParticipating",
          "Other",
          "Probation",
          "Regular",
          "Suspended",
          "Unknown"
        ]
      },
      "NFIPFloodDataRevisionType": {
        "type": "string",
        "example": "LOMA",
        "x-enumNames": [
          "LOMA",
          "LOMR"
        ],
        "enum": [
          "LOMA",
          "LOMR"
        ]
      },
      "NFIPFloodZone": {
        "type": "string",
        "example": "A",
        "x-enumNames": [
          "A",
          "A1",
          "A10",
          "A11",
          "A12",
          "A13",
          "A14",
          "A15",
          "A16",
          "A17",
          "A18",
          "A19",
          "A2",
          "A20",
          "A21",
          "A22",
          "A23",
          "A24",
          "A25",
          "A26",
          "A27",
          "A28",
          "A29",
          "A3",
          "A30",
          "A4",
          "A5",
          "A6",
          "A7",
          "A8",
          "A9",
          "A99",
          "AE",
          "AH",
          "AO",
          "AR",
          "AROrA",
          "AROrA1",
          "AROrA10",
          "AROrA11",
          "AROrA12",
          "AROrA13",
          "AROrA14",
          "AROrA15",
          "AROrA16",
          "AROrA17",
          "AROrA18",
          "AROrA19",
          "AROrA2",
          "AROrA20",
          "AROrA21",
          "AROrA22",
          "AROrA23",
          "AROrA24",
          "AROrA25",
          "AROrA26",
          "AROrA27",
          "AROrA28",
          "AROrA29",
          "AROrA3",
          "AROrA30",
          "AROrA4",
          "AROrA5",
          "AROrA6",
          "AROrA7",
          "AROrA8",
          "AROrA9",
          "AROrAE",
          "AROrAO",
          "B",
          "C",
          "D",
          "V",
          "V1",
          "V10",
          "V11",
          "V12",
          "V13",
          "V14",
          "V15",
          "V16",
          "V17",
          "V18",
          "V19",
          "V2",
          "V20",
          "V21",
          "V22",
          "V23",
          "V24",
          "V25",
          "V26",
          "V27",
          "V28",
          "V29",
          "V3",
          "V30",
          "V4",
          "V5",
          "V6",
          "V7",
          "V8",
          "V9",
          "VE",
          "X",
          "X500",
          "NONE",
          "XAsterisk"
        ],
        "enum": [
          "A",
          "A1",
          "A10",
          "A11",
          "A12",
          "A13",
          "A14",
          "A15",
          "A16",
          "A17",
          "A18",
          "A19",
          "A2",
          "A20",
          "A21",
          "A22",
          "A23",
          "A24",
          "A25",
          "A26",
          "A27",
          "A28",
          "A29",
          "A3",
          "A30",
          "A4",
          "A5",
          "A6",
          "A7",
          "A8",
          "A9",
          "A99",
          "AE",
          "AH",
          "AO",
          "AR",
          "AROrA",
          "AROrA1",
          "AROrA10",
          "AROrA11",
          "AROrA12",
          "AROrA13",
          "AROrA14",
          "AROrA15",
          "AROrA16",
          "AROrA17",
          "AROrA18",
          "AROrA19",
          "AROrA2",
          "AROrA20",
          "AROrA21",
          "AROrA22",
          "AROrA23",
          "AROrA24",
          "AROrA25",
          "AROrA26",
          "AROrA27",
          "AROrA28",
          "AROrA29",
          "AROrA3",
          "AROrA30",
          "AROrA4",
          "AROrA5",
          "AROrA6",
          "AROrA7",
          "AROrA8",
          "AROrA9",
          "AROrAE",
          "AROrAO",
          "B",
          "C",
          "D",
          "V",
          "V1",
          "V10",
          "V11",
          "V12",
          "V13",
          "V14",
          "V15",
          "V16",
          "V17",
          "V18",
          "V19",
          "V2",
          "V20",
          "V21",
          "V22",
          "V23",
          "V24",
          "V25",
          "V26",
          "V27",
          "V28",
          "V29",
          "V3",
          "V30",
          "V4",
          "V5",
          "V6",
          "V7",
          "V8",
          "V9",
          "VE",
          "X",
          "X500",
          "NONE",
          "XAsterisk"
        ]
      },
      "NonResidentialUnit": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "ownerOrTenantName": {
            "type": "string",
            "nullable": true
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          },
          "typeOfUse": {
            "type": "string",
            "nullable": true
          },
          "usedNumberOfUnits": {
            "type": "integer",
            "nullable": true
          },
          "usedTotalSquareFootage": {
            "type": "integer",
            "nullable": true
          }
        }
      },
      "NonTraditionalCreditType": {
        "type": "string",
        "example": "RentalHousingPayments",
        "x-enumNames": [
          "RentalHousingPayments",
          "Utilities",
          "AutoInsurance",
          "LifeInsurance",
          "MedicalBills",
          "CellPhonePayments",
          "LocalStoreChargeAccounts",
          "DurableGoodsRental",
          "SchoolTuition",
          "ChildCare",
          "IndividualLoan",
          "RegularAccountContributions",
          "RegularWireRemittance"
        ],
        "enum": [
          "RentalHousingPayments",
          "Utilities",
          "AutoInsurance",
          "LifeInsurance",
          "MedicalBills",
          "CellPhonePayments",
          "LocalStoreChargeAccounts",
          "DurableGoodsRental",
          "SchoolTuition",
          "ChildCare",
          "IndividualLoan",
          "RegularAccountContributions",
          "RegularWireRemittance"
        ]
      },
      "NorthDakotaLicenseType": {
        "type": "string",
        "example": "ResidentialMortgageLenderLicense",
        "x-enumNames": [
          "ResidentialMortgageLenderLicense",
          "MoneyBrokerLicense",
          "ResidentialMortgageLoanServicerLicense"
        ],
        "enum": [
          "ResidentialMortgageLenderLicense",
          "MoneyBrokerLicense",
          "ResidentialMortgageLoanServicerLicense"
        ]
      },
      "NotarySigningMethod": {
        "type": "string",
        "example": "InPersonWetSigned",
        "x-enumNames": [
          "InPersonWetSigned",
          "InPersonElectronicSigned",
          "RemoteOnlineNotary"
        ],
        "enum": [
          "InPersonWetSigned",
          "InPersonElectronicSigned",
          "RemoteOnlineNotary"
        ]
      },
      "Note": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "authorId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "conditionId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "readOnly": true,
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "readOnly": true
          },
          "documentId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "loanStageTemplateName": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "message": {
            "type": "string",
            "readOnly": true
          },
          "objectiveId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "objectiveTaskId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "taskId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          }
        }
      },
      "NoteType": {
        "type": "string",
        "example": "Loan",
        "x-enumNames": [
          "Loan",
          "Task",
          "Document",
          "EntityCondition",
          "Objective",
          "ObjectiveTask"
        ],
        "enum": [
          "Loan",
          "Task",
          "Document",
          "EntityCondition",
          "Objective",
          "ObjectiveTask"
        ]
      },
      "Objective": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "assigneeId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "automatedActions": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ObjectiveAutomatedAction"
            }
          },
          "blockedByUserId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "blockedReason": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ObjectiveBlockedAndEscalatedReason"
              }
            ]
          },
          "blockedReasonOther": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "blockedUntil": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "blockingTaskIds": {
            "type": "array",
            "readOnly": true,
            "description": "A list of IDs of tasks that are blocking this objective. These task IDs correspond to tasks in other objectives.",
            "items": {
              "type": "string",
              "format": "guid"
            }
          },
          "completedAt": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "completingUserSkillSets": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "createdAt": {
            "type": "string",
            "readOnly": true,
            "format": "date-time"
          },
          "dependentExternalPartyType": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DependentExternalPartyType"
              }
            ]
          },
          "dueDateTime": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "entityId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "entityType": {
            "readOnly": true,
            "$ref": "#/components/schemas/OntologyEntityType"
          },
          "escalatedByUserId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "escalatedReason": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ObjectiveBlockedAndEscalatedReason"
              }
            ]
          },
          "escalatedReasonOther": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "isBlocked": {
            "type": "boolean",
            "readOnly": true
          },
          "isEscalated": {
            "type": "boolean",
            "readOnly": true
          },
          "isReadinessOverridden": {
            "type": "boolean",
            "readOnly": true
          },
          "lastAssignedAt": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "lastCancelledAt": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "lastReadyAt": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "meetsRelevanceAndReadinessConditions": {
            "type": "boolean",
            "readOnly": true
          },
          "meetsRelevanceConditions": {
            "type": "boolean",
            "readOnly": true
          },
          "needsRecompletion": {
            "type": "boolean",
            "readOnly": true,
            "nullable": true
          },
          "objectiveTemplateExternalIdentifier": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "objectiveTemplateName": {
            "type": "string",
            "readOnly": true
          },
          "readinessOverrideReason": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "startedAt": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "readOnly": true,
            "$ref": "#/components/schemas/ObjectiveStatus"
          },
          "tasks": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ObjectiveTask"
            }
          },
          "unblockedAt": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "ObjectiveAssignedWebhook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "assigneeId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "dependentExternalPartyType": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DependentExternalPartyType"
              }
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "loanChannel": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanChannel"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "objectiveEntityId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "objectiveEntityType": {
            "type": "string",
            "readOnly": true
          },
          "objectiveExternalIdentifier": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "objectiveId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "objectiveName": {
            "type": "string",
            "readOnly": true
          },
          "retries": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "sourceType": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSourceType"
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSubscriptionType"
          },
          "userId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "version": {
            "readOnly": true,
            "$ref": "#/components/schemas/ApiVersion"
          }
        }
      },
      "ObjectiveAutomatedAction": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "automatedActionType": {
            "readOnly": true,
            "$ref": "#/components/schemas/AutomatedActionType"
          },
          "completedAt": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "entityId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "entityType": {
            "readOnly": true,
            "$ref": "#/components/schemas/OntologyEntityType"
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "objectiveId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "objectiveName": {
            "type": "string",
            "readOnly": true
          },
          "status": {
            "readOnly": true,
            "$ref": "#/components/schemas/AutomatedActionStatus"
          },
          "templateName": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "ObjectiveAutomatedActionCreatedWebhook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "automatedActionEntityId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "automatedActionEntityType": {
            "type": "string",
            "readOnly": true
          },
          "automatedActionId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "automatedActionName": {
            "type": "string",
            "readOnly": true
          },
          "automatedActionType": {
            "readOnly": true,
            "$ref": "#/components/schemas/AutomatedActionType"
          },
          "dependentExternalPartyType": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DependentExternalPartyType"
              }
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "loanChannel": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanChannel"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "objectiveEntityId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "objectiveEntityType": {
            "type": "string",
            "readOnly": true
          },
          "objectiveExternalIdentifier": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "objectiveId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "objectiveName": {
            "type": "string",
            "readOnly": true
          },
          "retries": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "sourceType": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSourceType"
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSubscriptionType"
          },
          "userId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "version": {
            "readOnly": true,
            "$ref": "#/components/schemas/ApiVersion"
          }
        }
      },
      "ObjectiveAutomatedActionDeletedWebhook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "automatedActionEntityId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "automatedActionEntityType": {
            "type": "string",
            "readOnly": true
          },
          "automatedActionId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "automatedActionName": {
            "type": "string",
            "readOnly": true
          },
          "automatedActionType": {
            "readOnly": true,
            "$ref": "#/components/schemas/AutomatedActionType"
          },
          "dependentExternalPartyType": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DependentExternalPartyType"
              }
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "loanChannel": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanChannel"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "objectiveEntityId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "objectiveEntityType": {
            "type": "string",
            "readOnly": true
          },
          "objectiveExternalIdentifier": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "objectiveId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "objectiveName": {
            "type": "string",
            "readOnly": true
          },
          "retries": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "sourceType": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSourceType"
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSubscriptionType"
          },
          "userId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "version": {
            "readOnly": true,
            "$ref": "#/components/schemas/ApiVersion"
          }
        }
      },
      "ObjectiveAutomatedActionStatusUpdatedWebhook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "automatedActionEntityId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "automatedActionEntityType": {
            "type": "string",
            "readOnly": true
          },
          "automatedActionId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "automatedActionName": {
            "type": "string",
            "readOnly": true
          },
          "automatedActionType": {
            "readOnly": true,
            "$ref": "#/components/schemas/AutomatedActionType"
          },
          "dependentExternalPartyType": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DependentExternalPartyType"
              }
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "loanChannel": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanChannel"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "objectiveEntityId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "objectiveEntityType": {
            "type": "string",
            "readOnly": true
          },
          "objectiveExternalIdentifier": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "objectiveId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "objectiveName": {
            "type": "string",
            "readOnly": true
          },
          "retries": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "sourceType": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSourceType"
          },
          "status": {
            "readOnly": true,
            "$ref": "#/components/schemas/AutomatedActionStatus"
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSubscriptionType"
          },
          "userId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "version": {
            "readOnly": true,
            "$ref": "#/components/schemas/ApiVersion"
          }
        }
      },
      "ObjectiveBlockedAndEscalatedReason": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "reason": {
            "type": "string",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/ObjectiveBlockedAndEscalatedReasonActionType"
          },
          "userSelectedObjectiveBlockedForTimeHours": {
            "type": "integer",
            "readOnly": true,
            "format": "int32",
            "nullable": true
          },
          "userSelectedObjectiveBlockedForTimeType": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserSelectedObjectiveBlockedForTimeType"
              }
            ]
          }
        }
      },
      "ObjectiveBlockedAndEscalatedReasonActionType": {
        "type": "string",
        "example": "BlockForDuration",
        "x-enumNames": [
          "BlockForDuration",
          "BlockUntilTaskCompletion",
          "Escalate",
          "UserSelect"
        ],
        "enum": [
          "BlockForDuration",
          "BlockUntilTaskCompletion",
          "Escalate",
          "UserSelect"
        ]
      },
      "ObjectiveCreatedWebhook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "dependentExternalPartyType": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DependentExternalPartyType"
              }
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "loanChannel": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanChannel"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "objectiveEntityId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "objectiveEntityType": {
            "type": "string",
            "readOnly": true
          },
          "objectiveExternalIdentifier": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "objectiveId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "objectiveName": {
            "type": "string",
            "readOnly": true
          },
          "retries": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "sourceType": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSourceType"
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSubscriptionType"
          },
          "userId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "version": {
            "readOnly": true,
            "$ref": "#/components/schemas/ApiVersion"
          }
        }
      },
      "ObjectiveDeletedWebhook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "dependentExternalPartyType": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DependentExternalPartyType"
              }
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "loanChannel": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanChannel"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "objectiveEntityId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "objectiveEntityType": {
            "type": "string",
            "readOnly": true
          },
          "objectiveExternalIdentifier": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "objectiveId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "objectiveName": {
            "type": "string",
            "readOnly": true
          },
          "retries": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "sourceType": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSourceType"
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSubscriptionType"
          },
          "userId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "version": {
            "readOnly": true,
            "$ref": "#/components/schemas/ApiVersion"
          }
        }
      },
      "ObjectiveManualCancellationReason": {
        "type": "string",
        "example": "NotRelevant",
        "x-enumNames": [
          "NotRelevant",
          "NotFeasible",
          "Duplicate",
          "AddedByMistake",
          "AlreadyCompleted",
          "Other"
        ],
        "enum": [
          "NotRelevant",
          "NotFeasible",
          "Duplicate",
          "AddedByMistake",
          "AlreadyCompleted",
          "Other"
        ]
      },
      "ObjectiveNoteAddedWebhook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "entityId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "entityType": {
            "type": "string",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "loanChannel": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanChannel"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "noteType": {
            "readOnly": true,
            "$ref": "#/components/schemas/NoteType"
          },
          "objectiveId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "retries": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "sourceType": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSourceType"
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSubscriptionType"
          },
          "userId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "version": {
            "readOnly": true,
            "$ref": "#/components/schemas/ApiVersion"
          }
        }
      },
      "ObjectiveStatus": {
        "type": "string",
        "example": "RelevantNotReady",
        "x-enumNames": [
          "RelevantNotReady",
          "Ready",
          "ManuallyCompleted",
          "AutomaticallyCompleted",
          "ManuallyCancelled",
          "AutomaticallyCancelled"
        ],
        "enum": [
          "RelevantNotReady",
          "Ready",
          "ManuallyCompleted",
          "AutomaticallyCompleted",
          "ManuallyCancelled",
          "AutomaticallyCancelled"
        ]
      },
      "ObjectiveStatusUpdatedWebhook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "dependentExternalPartyType": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DependentExternalPartyType"
              }
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "loanChannel": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanChannel"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "objectiveEntityId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "objectiveEntityType": {
            "type": "string",
            "readOnly": true
          },
          "objectiveExternalIdentifier": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "objectiveId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "objectiveName": {
            "type": "string",
            "readOnly": true
          },
          "retries": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "sourceType": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSourceType"
          },
          "status": {
            "readOnly": true,
            "$ref": "#/components/schemas/ObjectiveStatus"
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSubscriptionType"
          },
          "userId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "version": {
            "readOnly": true,
            "$ref": "#/components/schemas/ApiVersion"
          }
        }
      },
      "ObjectiveTask": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "additionalInstructions": {
            "type": "string",
            "readOnly": true,
            "description": "Provided if the task is a FormInput task.",
            "nullable": true
          },
          "associatedDocumentIds": {
            "type": "array",
            "readOnly": true,
            "description": "Provided if the task is a DocumentRequired task. The document IDs of\nnon-archived documents that are associated with the task.",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "guid"
            }
          },
          "cancellationReason": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ObjectiveTaskCancellationReason"
              }
            ]
          },
          "cancellationReasonDescription": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "completedAt": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "documentConditions": {
            "type": "array",
            "readOnly": true,
            "description": "Provided if the task is a DocumentRequired task.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/DocumentRequiredCondition"
            }
          },
          "documentId": {
            "type": "string",
            "readOnly": true,
            "description": "Provided if the task is a DocumentProcessing or DocumentDiscrepancies task.",
            "format": "guid",
            "nullable": true
          },
          "documentTypeExternalIdentifier": {
            "type": "string",
            "readOnly": true,
            "description": "Provided if the task is a DocumentProcessing or DocumentDiscrepancies task.",
            "nullable": true
          },
          "documentTypeName": {
            "type": "string",
            "readOnly": true,
            "description": "Provided if the task is a DocumentProcessing or DocumentDiscrepancies task.",
            "nullable": true
          },
          "entityId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "entityType": {
            "readOnly": true,
            "$ref": "#/components/schemas/OntologyEntityType"
          },
          "externalFacingMessage": {
            "type": "string",
            "readOnly": true,
            "description": "Provided if the task is a DocumentRequired task.",
            "nullable": true
          },
          "externalLinkName": {
            "type": "string",
            "readOnly": true,
            "description": "Provided if the task is a FormInput task.",
            "nullable": true
          },
          "externalLinkUrl": {
            "type": "string",
            "readOnly": true,
            "description": "Provided if the task is a FormInput task.",
            "nullable": true
          },
          "formInputs": {
            "type": "array",
            "readOnly": true,
            "description": "Provided if the task is a FormInput task.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FieldInputRequiredFormRow"
            }
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "instruction": {
            "type": "string",
            "readOnly": true,
            "description": "Provided if the task is a ManualDocumentRequest task.",
            "nullable": true
          },
          "instructions": {
            "type": "array",
            "readOnly": true,
            "description": "Provided if the task is an Instructions task.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/InstructionsObjectiveTaskChecklistEntry"
            }
          },
          "isManual": {
            "type": "boolean",
            "readOnly": true
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "objectiveDependentExternalPartyType": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DependentExternalPartyType"
              }
            ]
          },
          "objectiveId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "objectiveName": {
            "type": "string",
            "readOnly": true
          },
          "scenario": {
            "readOnly": true,
            "description": "Provided if the task is a ScenarioChange task.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Scenario"
              }
            ]
          },
          "startedAt": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "readOnly": true,
            "$ref": "#/components/schemas/ObjectiveTaskStatus"
          },
          "taskTemplateExternalIdentifier": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "taskTemplateName": {
            "type": "string",
            "readOnly": true
          },
          "taskTemplateType": {
            "readOnly": true,
            "$ref": "#/components/schemas/ObjectiveTaskTemplateType"
          }
        }
      },
      "ObjectiveTaskCancellationReason": {
        "type": "string",
        "example": "NotRelevant",
        "x-enumNames": [
          "NotRelevant",
          "NotFeasible",
          "Duplicate",
          "NotNeeded",
          "AddedByMistake",
          "CompletedWorkElsewhere",
          "Other"
        ],
        "enum": [
          "NotRelevant",
          "NotFeasible",
          "Duplicate",
          "NotNeeded",
          "AddedByMistake",
          "CompletedWorkElsewhere",
          "Other"
        ]
      },
      "ObjectiveTaskCreatedWebhook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "dependentExternalPartyType": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DependentExternalPartyType"
              }
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "loanChannel": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanChannel"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "objectiveEntityId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "objectiveEntityType": {
            "type": "string",
            "readOnly": true
          },
          "objectiveExternalIdentifier": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "objectiveId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "objectiveName": {
            "type": "string",
            "readOnly": true
          },
          "retries": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "sourceType": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSourceType"
          },
          "taskEntityId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "taskEntityType": {
            "type": "string",
            "readOnly": true
          },
          "taskId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "taskName": {
            "type": "string",
            "readOnly": true
          },
          "taskTemplateExternalIdentifier": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "taskType": {
            "readOnly": true,
            "$ref": "#/components/schemas/ObjectiveTaskTemplateType"
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSubscriptionType"
          },
          "userId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "version": {
            "readOnly": true,
            "$ref": "#/components/schemas/ApiVersion"
          }
        }
      },
      "ObjectiveTaskDeletedWebhook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "dependentExternalPartyType": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DependentExternalPartyType"
              }
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "loanChannel": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanChannel"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "objectiveEntityId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "objectiveEntityType": {
            "type": "string",
            "readOnly": true
          },
          "objectiveExternalIdentifier": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "objectiveId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "objectiveName": {
            "type": "string",
            "readOnly": true
          },
          "retries": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "sourceType": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSourceType"
          },
          "taskEntityId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "taskEntityType": {
            "type": "string",
            "readOnly": true
          },
          "taskId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "taskName": {
            "type": "string",
            "readOnly": true
          },
          "taskTemplateExternalIdentifier": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "taskType": {
            "readOnly": true,
            "$ref": "#/components/schemas/ObjectiveTaskTemplateType"
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSubscriptionType"
          },
          "userId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "version": {
            "readOnly": true,
            "$ref": "#/components/schemas/ApiVersion"
          }
        }
      },
      "ObjectiveTaskNoteAddedWebhook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "entityId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "entityType": {
            "type": "string",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "loanChannel": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanChannel"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "noteType": {
            "readOnly": true,
            "$ref": "#/components/schemas/NoteType"
          },
          "objectiveTaskId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "retries": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "sourceType": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSourceType"
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSubscriptionType"
          },
          "userId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "version": {
            "readOnly": true,
            "$ref": "#/components/schemas/ApiVersion"
          }
        }
      },
      "ObjectiveTaskStatus": {
        "type": "string",
        "example": "Ready",
        "x-enumNames": [
          "Ready",
          "ManuallyCompleted",
          "AutomaticallyCompleted",
          "ManuallyCancelled",
          "AutomaticallyCancelled"
        ],
        "enum": [
          "Ready",
          "ManuallyCompleted",
          "AutomaticallyCompleted",
          "ManuallyCancelled",
          "AutomaticallyCancelled"
        ]
      },
      "ObjectiveTaskStatusUpdatedWebhook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "dependentExternalPartyType": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DependentExternalPartyType"
              }
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "loanChannel": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanChannel"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "objectiveEntityId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "objectiveEntityType": {
            "type": "string",
            "readOnly": true
          },
          "objectiveExternalIdentifier": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "objectiveId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "objectiveName": {
            "type": "string",
            "readOnly": true
          },
          "retries": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "sourceType": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSourceType"
          },
          "status": {
            "readOnly": true,
            "$ref": "#/components/schemas/ObjectiveTaskStatus"
          },
          "taskEntityId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "taskEntityType": {
            "type": "string",
            "readOnly": true
          },
          "taskId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "taskName": {
            "type": "string",
            "readOnly": true
          },
          "taskTemplateExternalIdentifier": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "taskType": {
            "readOnly": true,
            "$ref": "#/components/schemas/ObjectiveTaskTemplateType"
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSubscriptionType"
          },
          "userId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "version": {
            "readOnly": true,
            "$ref": "#/components/schemas/ApiVersion"
          }
        }
      },
      "ObjectiveTaskTemplateType": {
        "type": "string",
        "example": "DocumentProcessing",
        "x-enumNames": [
          "DocumentProcessing",
          "DocumentRequired",
          "FormInput",
          "Instructions",
          "ScenarioChange",
          "DocumentDiscrepancies",
          "ManualDocumentRequest"
        ],
        "enum": [
          "DocumentProcessing",
          "DocumentRequired",
          "FormInput",
          "Instructions",
          "ScenarioChange",
          "DocumentDiscrepancies",
          "ManualDocumentRequest"
        ]
      },
      "OccupancyType": {
        "type": "string",
        "example": "Own",
        "x-enumNames": [
          "Own",
          "Rent",
          "NoPrimaryHousingExpense"
        ],
        "enum": [
          "Own",
          "Rent",
          "NoPrimaryHousingExpense"
        ]
      },
      "OccupyingPersonsType": {
        "type": "string",
        "example": "Spouse",
        "x-enumNames": [
          "Spouse",
          "Dependent"
        ],
        "enum": [
          "Spouse",
          "Dependent"
        ]
      },
      "OklahomaLicenseType": {
        "type": "string",
        "example": "MortgageBrokerLicense",
        "x-enumNames": [
          "MortgageBrokerLicense",
          "MortgageLenderLicense",
          "MortgageLenderLicenseOtherTradeName1",
          "MortgageLenderLicenseOtherTradeName2",
          "SupervisedLenderLicense"
        ],
        "enum": [
          "MortgageBrokerLicense",
          "MortgageLenderLicense",
          "MortgageLenderLicenseOtherTradeName1",
          "MortgageLenderLicenseOtherTradeName2",
          "SupervisedLenderLicense"
        ]
      },
      "OntologyChangeType": {
        "type": "string",
        "example": "AnyChange",
        "x-enumNames": [
          "AnyChange",
          "Percentage",
          "Threshold",
          "AnyIncrease",
          "AnyDecrease",
          "NameChanged",
          "ContactAdded",
          "ContactRemoved",
          "StateChanged",
          "CountyChanged",
          "AnyAdverseChange",
          "IncreaseOfSize",
          "IncreaseOfPercentage",
          "IncreasePastThreshold",
          "DecreaseOfSize",
          "DecreaseOfPercentage",
          "DecreasePastThreshold",
          "ChangeInFinalVesting",
          "ChangeInMannerTitleHeld",
          "ChangedToOrFromSubordinate"
        ],
        "enum": [
          "AnyChange",
          "Percentage",
          "Threshold",
          "AnyIncrease",
          "AnyDecrease",
          "NameChanged",
          "ContactAdded",
          "ContactRemoved",
          "StateChanged",
          "CountyChanged",
          "AnyAdverseChange",
          "IncreaseOfSize",
          "IncreaseOfPercentage",
          "IncreasePastThreshold",
          "DecreaseOfSize",
          "DecreaseOfPercentage",
          "DecreasePastThreshold",
          "ChangeInFinalVesting",
          "ChangeInMannerTitleHeld",
          "ChangedToOrFromSubordinate"
        ]
      },
      "OntologyEntityType": {
        "type": "string",
        "example": "Loan",
        "x-enumNames": [
          "Loan",
          "Borrower",
          "Property",
          "Asset",
          "Income",
          "Liability",
          "BorrowerBusiness",
          "ConcurrentFinancing",
          "Proration",
          "ClosingCost",
          "CreditInquiry",
          "PublicRecord",
          "UnderwritingException",
          "PropertyValuation",
          "Document",
          "PricingRequest",
          "TaxTranscriptRequestForm"
        ],
        "enum": [
          "Loan",
          "Borrower",
          "Property",
          "Asset",
          "Income",
          "Liability",
          "BorrowerBusiness",
          "ConcurrentFinancing",
          "Proration",
          "ClosingCost",
          "CreditInquiry",
          "PublicRecord",
          "UnderwritingException",
          "PropertyValuation",
          "Document",
          "PricingRequest",
          "TaxTranscriptRequestForm"
        ]
      },
      "OregonLicenseType": {
        "type": "string",
        "example": "MortgageLenderLicense",
        "x-enumNames": [
          "MortgageLenderLicense",
          "CollectionAgencyRegistration",
          "MortgageServicerLicense"
        ],
        "enum": [
          "MortgageLenderLicense",
          "CollectionAgencyRegistration",
          "MortgageServicerLicense"
        ]
      },
      "OtherHousingExpense": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "isEscrowed": {
            "type": "boolean",
            "nullable": true
          },
          "monthlyAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          }
        }
      },
      "OwnershipBreakdown": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ownedByHOANumberUnits": {
            "type": "integer",
            "description": "Units owned by HOA",
            "nullable": true
          },
          "rentedByDeveloperOrSponsorNumberUnits": {
            "type": "integer",
            "description": "Units rented by sponsor",
            "nullable": true
          },
          "soldAndClosedNumberUnits": {
            "type": "integer",
            "description": "Units sold and closed",
            "nullable": true
          },
          "soldOrUnderContractToInvestorOwnersNumberUnits": {
            "type": "integer",
            "description": "Units for investors",
            "nullable": true
          },
          "soldOrUnderContractToOwnerOccupantsNumberUnits": {
            "type": "integer",
            "description": "Units for owner-occupants",
            "nullable": true
          },
          "soldOrUnderContractToSecondHomeNumberUnits": {
            "type": "integer",
            "description": "Units for second home",
            "nullable": true
          },
          "totalNumberUnits": {
            "type": "integer",
            "description": "Total units",
            "nullable": true
          },
          "underContractNumberUnits": {
            "type": "integer",
            "description": "Units under contract",
            "nullable": true
          }
        }
      },
      "OwnershipDetails": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "finalVestingToRead": {
            "type": "string",
            "nullable": true
          },
          "mannerInWhichTitleIsHeld": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TitleHeldManner"
              }
            ]
          },
          "mannerInWhichTitleIsHeldOtherDescription": {
            "type": "string",
            "description": "A text field to capture descriptions of non-standard or custom manner in which title is held when \"Other\" is selected.",
            "nullable": true
          },
          "ownershipInfo": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/OwnershipInfo"
            }
          }
        }
      },
      "OwnershipInfo": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "amendedDateYear": {
            "type": "string",
            "description": "Year the entity's terms were last amended",
            "format": "date",
            "nullable": true
          },
          "beneficiaries": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/BorrowerOrNonBorrower"
            }
          },
          "borrowerOwners": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "guid"
            }
          },
          "designatedSignerInfos": {
            "type": "array",
            "description": "Information about the person signing for the entity",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/DesignatedSignerInfo"
            }
          },
          "establishedDate": {
            "type": "string",
            "description": "Date the entity was established",
            "format": "date",
            "nullable": true
          },
          "establishedState": {
            "type": "string",
            "description": "State the entity is incorporated in",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "maintainBorrowerConfidentiality": {
            "type": "boolean",
            "description": "Maintain borrower confidentiality",
            "nullable": true
          },
          "naturalPersonsType": {
            "description": "Whether the natural person owning the property is a borrower or not",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/NaturalPersonsType"
              }
            ]
          },
          "ownershipType": {
            "description": "Type of ownership for the property",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PropertyOwnershipType"
              }
            ]
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          },
          "relationshipVestingType": {
            "description": "How the natural persons hold vesting",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/RelationshipVestingType"
              }
            ]
          },
          "settlors": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/BorrowerOrNonBorrower"
            }
          },
          "taxIdOrTrustNo": {
            "type": "string",
            "description": "Tax ID number or trust number of the entity",
            "nullable": true
          },
          "trustees": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/BorrowerOrNonBorrower"
            }
          },
          "trustLLCOrPartnershipName": {
            "type": "string",
            "description": "Name of the entity on title",
            "nullable": true
          },
          "trustOwnerType": {
            "description": "Type of entity on title",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TrustOwnerType"
              }
            ]
          }
        }
      },
      "PaidToOrFromBorrower": {
        "type": "string",
        "example": "ToBorrower",
        "x-enumNames": [
          "ToBorrower",
          "FromBorrower"
        ],
        "enum": [
          "ToBorrower",
          "FromBorrower"
        ]
      },
      "PartialPaymentApplicationMethodType": {
        "type": "string",
        "example": "ApplyPartialPayment",
        "x-enumNames": [
          "ApplyPartialPayment",
          "HoldUntilCompleteAmount",
          "Other"
        ],
        "enum": [
          "ApplyPartialPayment",
          "HoldUntilCompleteAmount",
          "Other"
        ]
      },
      "PatchDisclosuresDeliveryInput": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "deliveryMethod": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DeliveryMethod"
              }
            ]
          },
          "intentToProceedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "manualDisclosureStatus": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ManualDisclosureStatus"
              }
            ]
          },
          "receivedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sentOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "PatchFileContactResponse": {
        "type": "object",
        "additionalProperties": false
      },
      "PennsylvaniaLicenseType": {
        "type": "string",
        "example": "MortgageLenderLicense",
        "x-enumNames": [
          "MortgageLenderLicense",
          "MortgageServicerLicense"
        ],
        "enum": [
          "MortgageLenderLicense",
          "MortgageServicerLicense"
        ]
      },
      "PerDiemCalculationMethod": {
        "type": "string",
        "example": "Per360",
        "x-enumNames": [
          "Per360",
          "Per365",
          "Per365Or366"
        ],
        "enum": [
          "Per360",
          "Per365",
          "Per365Or366"
        ]
      },
      "PerUnitInformation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "incomeId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "numberOfBathrooms": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "numberOfBedrooms": {
            "type": "integer",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32"
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          },
          "totalRoomCount": {
            "type": "integer",
            "nullable": true
          },
          "unit": {
            "type": "string"
          }
        }
      },
      "PhoneNumberType": {
        "type": "string",
        "example": "Mobile",
        "x-enumNames": [
          "Mobile",
          "Home",
          "Work",
          "Other"
        ],
        "enum": [
          "Mobile",
          "Home",
          "Work",
          "Other"
        ]
      },
      "PipelineView": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "columns": {
            "type": "array",
            "readOnly": true,
            "description": "The columns in the pipeline view, in the order they should be displayed.",
            "items": {
              "$ref": "#/components/schemas/PipelineViewColumn"
            }
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "name": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "PipelineViewColumn": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "isSortable": {
            "type": "boolean",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "readOnly": true
          },
          "supportedFilterTypes": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/QueryPipelineViewFilterType"
            }
          }
        }
      },
      "PmiOrderType": {
        "type": "string",
        "example": "Delegated",
        "x-enumNames": [
          "Delegated",
          "NonDelegated"
        ],
        "enum": [
          "Delegated",
          "NonDelegated"
        ]
      },
      "PmiProvider": {
        "type": "string",
        "example": "Arch",
        "x-enumNames": [
          "Arch",
          "MGIC",
          "NationalMI",
          "Essent",
          "Enact",
          "Radian"
        ],
        "enum": [
          "Arch",
          "MGIC",
          "NationalMI",
          "Essent",
          "Enact",
          "Radian"
        ]
      },
      "PostAusInput": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "submittingPartyType",
          "underwritingEngine"
        ],
        "properties": {
          "dudoCreditOverrides": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/DUDOCreditOverrideCode"
              }
            }
          },
          "institutionId": {
            "type": "string",
            "nullable": true
          },
          "submissionStage": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BrokerUnderwriteSubmissionStage"
              }
            ]
          },
          "submittingPartyType": {
            "$ref": "#/components/schemas/SubmittingPartyType"
          },
          "underwritingEngine": {
            "$ref": "#/components/schemas/UnderwritingEngine"
          }
        }
      },
      "PostFileContactInput": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "globalFileContactId",
          "type"
        ],
        "properties": {
          "globalFileContactId": {
            "type": "string",
            "format": "guid"
          },
          "type": {
            "$ref": "#/components/schemas/LoanFileContactType"
          }
        }
      },
      "PostNoteInput": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "message"
        ],
        "properties": {
          "authorId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "conditionId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "documentId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "message": {
            "type": "string"
          },
          "objectiveId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "objectiveTaskId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "taskId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          }
        }
      },
      "PostUserInput": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "authMethod",
          "email"
        ],
        "properties": {
          "authMethod": {
            "$ref": "#/components/schemas/AuthMethod"
          },
          "branchId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "email": {
            "type": "string"
          },
          "employeeId": {
            "type": "string",
            "nullable": true
          },
          "fhaDirectEndorsementId": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "lenderSarId": {
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "type": "string",
            "nullable": true
          },
          "nmlsId": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "roleIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "guid"
            }
          },
          "stateLicensingInfos": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/StateLicensingInfo"
            }
          },
          "twoFactorEnabled": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "PrepaidExpenseType": {
        "type": "string",
        "example": "PropertyTax",
        "x-enumNames": [
          "PropertyTax",
          "HomeownersInsurancePremium",
          "FloodInsurancePremium",
          "HomeownersAssociationDues",
          "HomeownersAssociationSpecialAssessment",
          "MortgageInsurancePremium",
          "Other",
          "PrepaidInterest",
          "USDARuralDevelopmentGuaranteeFee",
          "VAFundingFee",
          "StateTax",
          "WaterSewerAssessment",
          "SupplementalPropertyInsurance",
          "EarthquakeInsurancePremium",
          "WindAndHailInsurancePremium",
          "CityTax",
          "VillageTax",
          "SchoolTax",
          "TownTax",
          "VolcanoInsurance",
          "HurricaneInsurance",
          "FireInsurance"
        ],
        "enum": [
          "PropertyTax",
          "HomeownersInsurancePremium",
          "FloodInsurancePremium",
          "HomeownersAssociationDues",
          "HomeownersAssociationSpecialAssessment",
          "MortgageInsurancePremium",
          "Other",
          "PrepaidInterest",
          "USDARuralDevelopmentGuaranteeFee",
          "VAFundingFee",
          "StateTax",
          "WaterSewerAssessment",
          "SupplementalPropertyInsurance",
          "EarthquakeInsurancePremium",
          "WindAndHailInsurancePremium",
          "CityTax",
          "VillageTax",
          "SchoolTax",
          "TownTax",
          "VolcanoInsurance",
          "HurricaneInsurance",
          "FireInsurance"
        ]
      },
      "PrepaymentCalculationTerm": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "prepaymentPenaltyCalculationPercent": {
            "type": "number",
            "description": "Percentage applied to the principal balance to determine the prepayment penalty amount",
            "format": "decimal",
            "nullable": true
          },
          "prepaymentPenaltyCalculationPrincipalBalanceType": {
            "description": "Specifies the principal balance used as the basis for calculating the prepayment penalty",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PrepaymentPenaltyCalculationPrincipalBalanceType"
              }
            ]
          },
          "prepaymentPenaltyCalculationType": {
            "description": "Identifies how the prepayment penalty amount is being calculated.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PrepaymentPenaltyCalculationType"
              }
            ]
          },
          "prepaymentPenaltyDurationInMonths": {
            "type": "integer",
            "description": "The period in months over which prepayment penalties are applicable after loan origination",
            "nullable": true
          },
          "prepaymentPenaltyEffectiveDate": {
            "type": "string",
            "description": "The date that the prepayment penalty becomes effective",
            "format": "date",
            "nullable": true
          },
          "prepaymentPenaltyFixedAmount": {
            "type": "number",
            "description": "Specifies the fixed dollar amount charged when a prepayment penalty is applied",
            "format": "decimal",
            "nullable": true
          },
          "prepaymentPenaltyMaximumAmount": {
            "type": "number",
            "description": "Cap on the dollar amount that can be charged for a prepayment penalty",
            "format": "decimal",
            "nullable": true
          },
          "prepaymentPenaltyOptionType": {
            "description": "Indicates under what transaction type the prepayment penalty may be applied",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PrepaymentPenaltyOptionType"
              }
            ]
          },
          "prepaymentPenaltyThreshold": {
            "type": "number",
            "description": "Percentage of principal that, if prepaid, will trigger prepayment penalty",
            "format": "decimal",
            "nullable": true
          },
          "prepaymentPenaltyTriggerCurtailmentAmount": {
            "type": "number",
            "description": "Specifies the dollar amount of principal curtailment that, if exceeded, will incur a prepayment penalty",
            "format": "decimal",
            "nullable": true
          },
          "prepaymentPenaltyTriggerCurtailmentPercent": {
            "type": "number",
            "description": "Specifies the percentage of the principal balance that, when curtailed, may result in a prepayment penalty",
            "format": "decimal",
            "nullable": true
          },
          "prepaymentPenaltyType": {
            "description": "Identifies the type of early principal repayment eligible for a penalty charge.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PrepaymentCalculationTermPenaltyType"
              }
            ]
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          }
        }
      },
      "PrepaymentCalculationTermPenaltyType": {
        "type": "string",
        "example": "Assumption",
        "x-enumNames": [
          "Assumption",
          "EarlyPayoff",
          "PrincipalCurtailment",
          "Refinance",
          "Other"
        ],
        "enum": [
          "Assumption",
          "EarlyPayoff",
          "PrincipalCurtailment",
          "Refinance",
          "Other"
        ]
      },
      "PrepaymentPenaltyCalculationPrincipalBalanceType": {
        "type": "string",
        "example": "CurrentPrincipalBalance",
        "x-enumNames": [
          "CurrentPrincipalBalance",
          "ExcessPrincipal",
          "OriginalPrincipalBalance",
          "Other"
        ],
        "enum": [
          "CurrentPrincipalBalance",
          "ExcessPrincipal",
          "OriginalPrincipalBalance",
          "Other"
        ]
      },
      "PrepaymentPenaltyCalculationType": {
        "type": "string",
        "example": "FixedAmount",
        "x-enumNames": [
          "FixedAmount",
          "PercentageOfPrincipalBalance",
          "SpecifiedMonthsOfInterest",
          "QualifyingAmountOfCurtailment",
          "YieldMaintenance",
          "Other"
        ],
        "enum": [
          "FixedAmount",
          "PercentageOfPrincipalBalance",
          "SpecifiedMonthsOfInterest",
          "QualifyingAmountOfCurtailment",
          "YieldMaintenance",
          "Other"
        ]
      },
      "PrepaymentPenaltyOptionType": {
        "type": "string",
        "example": "Hard",
        "x-enumNames": [
          "Hard",
          "Soft"
        ],
        "enum": [
          "Hard",
          "Soft"
        ]
      },
      "PrepaymentPenaltyWaiverType": {
        "type": "string",
        "example": "None",
        "x-enumNames": [
          "None",
          "HardshipSale",
          "ThirdPartySale",
          "Other"
        ],
        "enum": [
          "None",
          "HardshipSale",
          "ThirdPartySale",
          "Other"
        ]
      },
      "PresenceOfSolarPanelsType": {
        "type": "string",
        "example": "FixtureToProperty",
        "x-enumNames": [
          "FixtureToProperty",
          "PresentButNotFixtureToProperty"
        ],
        "enum": [
          "FixtureToProperty",
          "PresentButNotFixtureToProperty"
        ]
      },
      "PreviousVALoan": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "associatedLienId": {
            "type": "string",
            "description": "Associated Lien",
            "format": "guid",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "loanPropertyInNaturalDisasterLossDate": {
            "type": "string",
            "description": "Loan property in natural disaster loss date",
            "format": "date",
            "nullable": true
          },
          "loanPropertyInNaturalDisasterStillOwnedIndicator": {
            "type": "boolean",
            "description": "Loan property in natural disaster still owned indicator",
            "nullable": true
          },
          "ownedPropertyId": {
            "type": "string",
            "description": "REO",
            "format": "guid",
            "nullable": true
          },
          "paidOffIndicator": {
            "type": "boolean",
            "description": "Has this loan been paid off?",
            "nullable": true
          },
          "previousLoanEntitlementRestorationType": {
            "description": "Previous loan entitlement restoration type",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanEntitlementRestorationType"
              }
            ]
          },
          "previousLoanNoteDate": {
            "type": "string",
            "description": "Previous loan note date",
            "format": "date",
            "nullable": true
          },
          "previousLoanNumber": {
            "type": "string",
            "description": "Previous loan number",
            "nullable": true
          },
          "previousLoanPropertyAddress": {
            "description": "Previous loan property address",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ]
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          },
          "stillOwnedIndicator": {
            "type": "boolean",
            "description": "Does the borrower still own the property?",
            "nullable": true
          }
        }
      },
      "PriceConcessionRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "comments": {
            "type": "string",
            "nullable": true
          },
          "concessionType": {
            "$ref": "#/components/schemas/PricingConcessionType"
          },
          "reason": {
            "type": "string"
          },
          "reasonId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "decimal"
          },
          "valueType": {
            "$ref": "#/components/schemas/PricingExceptionValueType"
          }
        }
      },
      "PricingActionsInput": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "quoteId"
        ],
        "properties": {
          "quoteId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "PricingConcessionType": {
        "type": "string",
        "example": "Price",
        "x-enumNames": [
          "Price",
          "Fee"
        ],
        "enum": [
          "Price",
          "Fee"
        ]
      },
      "PricingEngine": {
        "type": "string",
        "example": "Mortech",
        "x-enumNames": [
          "Mortech",
          "Polly",
          "LenderPrice",
          "OptimalBlue",
          "Manual",
          "LoanPass",
          "Gemini"
        ],
        "enum": [
          "Mortech",
          "Polly",
          "LenderPrice",
          "OptimalBlue",
          "Manual",
          "LoanPass",
          "Gemini"
        ]
      },
      "PricingExceptionValueType": {
        "type": "string",
        "example": "Points",
        "x-enumNames": [
          "Points",
          "Amount"
        ],
        "enum": [
          "Points",
          "Amount"
        ]
      },
      "PricingQueryType": {
        "type": "string",
        "example": "InitialQuery",
        "x-enumNames": [
          "InitialQuery",
          "Reprice",
          "RequestReprice",
          "RequestRelock",
          "HistoricalPricing",
          "Relock"
        ],
        "enum": [
          "InitialQuery",
          "Reprice",
          "RequestReprice",
          "RequestRelock",
          "HistoricalPricing",
          "Relock"
        ]
      },
      "PricingQuoteScenario": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "annualPercentageRate": {
            "type": "number",
            "readOnly": true,
            "format": "decimal",
            "nullable": true
          },
          "apor": {
            "type": "number",
            "readOnly": true,
            "format": "decimal",
            "nullable": true
          },
          "eligible": {
            "type": "boolean",
            "readOnly": true
          },
          "escrowAccountRequirementWaivedIndicator": {
            "type": "boolean",
            "readOnly": true,
            "nullable": true
          },
          "externalPriceLockId": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "externalPriceQuoteId": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "ineligibleReasons": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "interestOnlyTermMonthsCount": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "investorName": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "leadSourceId": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "lenderPriceLineItem": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "lenderPriceLock": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "loanAmortizationMonthsCount": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "loanAmortizationType": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanAmortizationType"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "loanTermMonthsCount": {
            "type": "integer",
            "readOnly": true,
            "format": "int32",
            "nullable": true
          },
          "monthlyPayment": {
            "type": "number",
            "readOnly": true,
            "format": "decimal",
            "nullable": true
          },
          "mortgageSizeType": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MortgageSizeType"
              }
            ]
          },
          "mortgageType": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MortgageType"
              }
            ]
          },
          "postAdjustedParPrice": {
            "type": "number",
            "readOnly": true,
            "format": "decimal",
            "nullable": true
          },
          "postAdjustedParRate": {
            "type": "number",
            "readOnly": true,
            "format": "decimal",
            "nullable": true
          },
          "priceAdjustments": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LoanProductAdjustment"
            }
          },
          "pricingEngineNoteRate": {
            "type": "number",
            "readOnly": true,
            "format": "decimal",
            "nullable": true
          },
          "pricingEnginePoints": {
            "type": "number",
            "readOnly": true,
            "format": "decimal",
            "nullable": true
          },
          "pricingSource": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "programName": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "quotedAtDateTime": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "quoteId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "quoteStatus": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/QuoteStatus"
              }
            ]
          },
          "rateAdjustments": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LoanProductAdjustment"
            }
          },
          "rateLockPeriod": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          }
        }
      },
      "PricingQuoteScenarioInput": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "queryType",
          "rateLockDuration"
        ],
        "properties": {
          "maxPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "minPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "queryType": {
            "$ref": "#/components/schemas/PricingQueryType"
          },
          "rateLockDuration": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PricingRateLockInput": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "quoteId"
        ],
        "properties": {
          "quoteId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "PricingRequestExtension": {
        "type": "object",
        "description": "Represents a request body for requesting a rate lock extension for a locked product/price.",
        "additionalProperties": false,
        "required": [
          "quoteId"
        ],
        "properties": {
          "extensionDurationDays": {
            "type": "integer",
            "nullable": true
          },
          "extensionFeeFixedAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "extensionFeePercentage": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "extensionFeeType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/FeeCalculationMethod"
              }
            ]
          },
          "quoteId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "PricingSelectQuoteScenarioInput": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "quoteId"
        ],
        "properties": {
          "quoteId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "PrimaryBorrower": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "borrowerId"
        ],
        "properties": {
          "borrowerId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "PrimaryContacts": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "appraiser": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "builder": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "buyerRealEstateAgent": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "cityTaxAssessor": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "closingAgent": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "closingAttorney": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "correspondentLender": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "countyTaxAssessor": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "earthquakeInsuranceCompany": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "escrowAgent": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "fidelityInsuranceAgent": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "fireInsuranceCompany": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "floodInsuranceAgent": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "floodInsuranceCompany": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "hoaMasterInsuranceAgent": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "homeInsuranceAgent": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "homeManufacturer": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "homeOwnersAssociation": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "homeownersInsuranceCompany": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "hurricaneInsuranceCompany": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "inspector": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "irsTaxFormThirdParty": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "liabilityInsuranceAgent": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "mortgageInsuranceCompany": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "nonBorrowingOwner": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "notaryAgent": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "partnerBroker": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "partnerWholesaler": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "propertySeller": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "recordingOffice": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "renovationConsultant": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "schoolTaxAssessor": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "sellerRealEstateAgent": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "servicer": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "supplementalInsuranceCompany": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "titleAgent": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "townPropertyTaxCollector": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "trusteeCompany": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "villagePropertyTaxCollector": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "volcanoInsuranceCompany": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "windAndHailInsuranceCompany": {
            "type": "string",
            "format": "guid",
            "nullable": true
          }
        }
      },
      "PriorPropertyTitleType": {
        "type": "string",
        "example": "JointWithOtherThanSpouse",
        "x-enumNames": [
          "JointWithOtherThanSpouse",
          "JointWithSpouse",
          "Sole"
        ],
        "enum": [
          "JointWithOtherThanSpouse",
          "JointWithSpouse",
          "Sole"
        ]
      },
      "PriorPropertyUsageType": {
        "type": "string",
        "example": "Investment",
        "x-enumNames": [
          "Investment",
          "PrimaryResidence",
          "SecondHome",
          "FHASecondaryResidence"
        ],
        "enum": [
          "Investment",
          "PrimaryResidence",
          "SecondHome",
          "FHASecondaryResidence"
        ]
      },
      "ProgramEligibilityFailure": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "programEligibilityFailureCategory": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "programEligibilityFailureDescription": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "programEligibilityFailureType": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProgramEligibilityFailureType"
              }
            ]
          }
        }
      },
      "ProgramEligibilityFailureType": {
        "type": "string",
        "example": "Hard",
        "x-enumNames": [
          "Hard",
          "Soft"
        ],
        "enum": [
          "Hard",
          "Soft"
        ]
      },
      "ProjectClassification": {
        "type": "string",
        "example": "FreddieMacStreamlinedReview",
        "x-enumNames": [
          "FreddieMacStreamlinedReview",
          "FreddieMacEstablishedProject",
          "FreddieMacNewProject",
          "FreddieMacDetachedProject",
          "FreddieMacTwoToFourUnitProject",
          "FreddieMacReciprocalReview",
          "FannieMaePLimitedReviewNewDetached",
          "FannieMaeQLimitedReviewEstablished",
          "FannieMaeRExpeditedReviewNew",
          "FannieMaeSExpeditedReviewEstablished",
          "FannieMaeTFannieMaeReview",
          "FannieMaeUFHAApproved",
          "FannieMaeVRefiPlus",
          "OtherEPUD",
          "OtherFPUD",
          "OtherTPUD",
          "Other1Coop",
          "Other2Coop",
          "OtherTCoop",
          "FreddieMacReciprocalReviewFHAApproved",
          "FreddieMacReciprocalReviewCondominiumProjectManagerReview",
          "FreddieMacExemptFromReview"
        ],
        "enum": [
          "FreddieMacStreamlinedReview",
          "FreddieMacEstablishedProject",
          "FreddieMacNewProject",
          "FreddieMacDetachedProject",
          "FreddieMacTwoToFourUnitProject",
          "FreddieMacReciprocalReview",
          "FannieMaePLimitedReviewNewDetached",
          "FannieMaeQLimitedReviewEstablished",
          "FannieMaeRExpeditedReviewNew",
          "FannieMaeSExpeditedReviewEstablished",
          "FannieMaeTFannieMaeReview",
          "FannieMaeUFHAApproved",
          "FannieMaeVRefiPlus",
          "OtherEPUD",
          "OtherFPUD",
          "OtherTPUD",
          "Other1Coop",
          "Other2Coop",
          "OtherTCoop",
          "FreddieMacReciprocalReviewFHAApproved",
          "FreddieMacReciprocalReviewCondominiumProjectManagerReview",
          "FreddieMacExemptFromReview"
        ]
      },
      "ProjectDesignType": {
        "type": "string",
        "example": "Garden",
        "x-enumNames": [
          "Garden",
          "Highrise",
          "Midrise",
          "Other",
          "TownhouseRowhouse"
        ],
        "enum": [
          "Garden",
          "Highrise",
          "Midrise",
          "Other",
          "TownhouseRowhouse"
        ]
      },
      "ProjectDetails": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "accessControlsPerAccountIndicator": {
            "type": "boolean",
            "description": "Indicates that there are appropriate access controls in place for the HOA's accounts",
            "nullable": true
          },
          "areAmenitiesAndCommonFacilitiesCompleteIndicator": {
            "type": "boolean",
            "description": "Indicates that the common facilities are fully complete - e.g. only units are still in progress",
            "nullable": true
          },
          "bankStatementsToHOAIndicator": {
            "type": "boolean",
            "description": "Indicates that the monthly bank statements are sent directly to the HOA and not to an intermediary",
            "nullable": true
          },
          "careForSeniorOrResidentsWithDisabilitiesIndicator": {
            "type": "boolean",
            "description": "Indicates that the project offers supportive services for persons with disabilities or seniors",
            "nullable": true
          },
          "condominiumPUDDeclarationsDescription": {
            "type": "string",
            "description": "Project Declarations Description",
            "nullable": true
          },
          "cpmProjectId": {
            "type": "string",
            "description": "Fannie Mae Condo Project Manager ID",
            "nullable": true
          },
          "dateHOAControlToBeTransferred": {
            "type": "string",
            "description": "The estimated date that the developer will transfer control of the HOA to unit owners, if it has not yet happened",
            "format": "date",
            "nullable": true
          },
          "dateHOAControlTransferred": {
            "type": "string",
            "description": "The date that the developer transferred control of the HOA to unit owners, if it has already happened",
            "format": "date",
            "nullable": true
          },
          "deedOrResaleRestrictionsIndicator": {
            "type": "boolean",
            "description": "Indicates that there are limitations to the owner's rights to modify the deed, such as a right of first refusal",
            "nullable": true
          },
          "entireProjectOwnerOccupationRate": {
            "type": "number",
            "readOnly": true,
            "description": "The ratio of (# of units for owner-occupants) / (total # units) expressed as a percentage",
            "format": "decimal",
            "nullable": true
          },
          "entireProjectOwnershipBreakdown": {
            "description": "The number of units in the entire project",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/OwnershipBreakdown"
              }
            ]
          },
          "entitiesOwningMultipleUnits": {
            "type": "array",
            "description": "A list of the entities that own multiple units, how many units they own, and what they are used for",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/MultipleUnitOwner"
            }
          },
          "entitiesOwningMultipleUnitsIndicator": {
            "type": "boolean",
            "description": "Indicates that some entities own multiple units in the project",
            "nullable": true
          },
          "fidelityInsuranceAgents": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "fidelityInsuranceDetails": {
            "description": "All of the information - insurance provider, contact information, policy number, coverage info - pertaining to the project's fidelity insurance",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/InsuranceDetails"
              }
            ]
          },
          "fullGutRehabilitationIndicator": {
            "type": "boolean",
            "description": "Indicates that the conversion of the property is a full gut rehabilitation",
            "nullable": true
          },
          "hasDeveloperTransferredHOAControlToUnitOwnersIndicator": {
            "type": "boolean",
            "description": "Indicates that the unit owners now control the HOA",
            "nullable": true
          },
          "hoaActiveOrPendingLitigationIndicator": {
            "type": "boolean",
            "description": "Indicates that the HOA is involved in active or pending litigation",
            "nullable": true
          },
          "hoaLitigationAttorneyName": {
            "type": "string",
            "description": "The full name of the attorney representing the HOA if there is active/pending litigation",
            "nullable": true
          },
          "hoaLitigationAttorneyPhoneNumber": {
            "type": "string",
            "description": "The phone number of the attorney representing the HOA if there is active/pending litigation",
            "nullable": true
          },
          "hoaManagementCompanyAddress": {
            "description": "The legal address of the HOA management company for the project",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ]
          },
          "hoaManagementCompanyTaxIDNumber": {
            "type": "string",
            "description": "The federal tax ID of the HOA management company",
            "nullable": true
          },
          "hoaName": {
            "type": "string",
            "description": "The legal name of the HOA",
            "nullable": true
          },
          "hoaTaxIDNumber": {
            "type": "string",
            "description": "The federal tax ID of the HOA",
            "nullable": true
          },
          "isConversionOfNonResidentialStructureIndicator": {
            "type": "boolean",
            "description": "Indicates that this project is a conversion of a previously commercial or industrial building",
            "nullable": true
          },
          "isProjectCompleteIndicator": {
            "type": "boolean",
            "description": "Indicates that the project has already been completed",
            "nullable": true
          },
          "isProjectPhasedIndicator": {
            "type": "boolean",
            "description": "Indicates that the project has already been legally phased",
            "nullable": true
          },
          "isProjectSubjectToAdditionalPhasingIndicator": {
            "type": "boolean",
            "description": "Indicates that the project is still has additional phases to be planned",
            "nullable": true
          },
          "liabilityInsuranceAgents": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "liabilityInsuranceDetails": {
            "description": "All of the information - insurance provider, contact information, policy number, coverage info - pertaining to the project's liability insurance",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/InsuranceDetails"
              }
            ]
          },
          "managementCompanyCannotDrawOnReserveIndicator": {
            "type": "boolean",
            "description": "Indicates that the management company cannot access the reserve account of the HOA",
            "nullable": true
          },
          "mandatoryFeeBasedMembershipsIndicator": {
            "type": "boolean",
            "description": "Indicates that there are mandatory fee-based memberships that are part of living in or owning a unit in the project",
            "nullable": true
          },
          "manufacturedHomesIndicator": {
            "type": "boolean",
            "description": "Indicates the presence of manufactured homes in the project",
            "nullable": true
          },
          "masterOrUmbrellaAssociationName": {
            "type": "string",
            "description": "If applicable, the name of any master or umbrella association over the project HOA",
            "nullable": true
          },
          "mortgageeResponsibleForDelinquentExpenseAssessmentsIfForeclosedIndicator": {
            "type": "boolean",
            "description": "Indicates that if the lender acquires a unit, e.g. via foreclosure, that they are responsible for paying the delinquent expense assessments",
            "nullable": true
          },
          "mortgageeResponsibleForDelinquentExpenseAssessmentsIfForeclosedNumMonths": {
            "type": "integer",
            "description": "The number of months of delinquent payments the lender is responsible for if they acquire a unit that is delinquent on common expense assessments",
            "nullable": true
          },
          "nonIncidentalOperationsIncomeIndicator": {
            "type": "boolean",
            "description": "Indicates that the project receives non-incidental income",
            "nullable": true
          },
          "nonResidentialUnits": {
            "type": "array",
            "description": "List of the units used for non-residential purposes, and their usage",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/NonResidentialUnit"
            }
          },
          "nonResidentialUnitsIndicator": {
            "type": "boolean",
            "description": "Indicates that there are units in the project used for non-residential purposes",
            "nullable": true
          },
          "numberOfPhasesCompleted": {
            "type": "integer",
            "description": "The number of phases in the project that have already been completed",
            "nullable": true
          },
          "numberOfPhasesTotal": {
            "type": "integer",
            "description": "The number of phases, both completed and uncompleted, in the project",
            "nullable": true
          },
          "othersHaveRightsToAmenitiesExplanation": {
            "type": "string",
            "description": "If any non-unit owners have rights to the amenities, an explanation of who has those rights and why",
            "nullable": true
          },
          "othersHaveRightsToAmenitiesIndicator": {
            "type": "boolean",
            "description": "Indicates that non-unit owners have the right to use the amenities",
            "nullable": true
          },
          "projectClassification": {
            "description": "Project classification",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProjectClassification"
              }
            ]
          },
          "projectDesignType": {
            "description": "Describes the project design type, which is typically a function of the number of floors and other unit configuration",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProjectDesignType"
              }
            ]
          },
          "projectLegalName": {
            "type": "string",
            "description": "The legal name of the project",
            "nullable": true
          },
          "projectPhysicalAddress": {
            "description": "Where the project is located",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ]
          },
          "projectTotalSquareFootage": {
            "type": "integer",
            "description": "The total square footage of the project, including all units and common spaces",
            "nullable": true
          },
          "reservesAllocatedForAllImprovementsIndicator": {
            "type": "boolean",
            "description": "Indicates that there have been reserves allocated for all improvements",
            "nullable": true
          },
          "reservesSufficientForAllImprovementsIndicator": {
            "type": "boolean",
            "description": "Indicates that the reserves allocated are sufficient to fund all planned improvements",
            "nullable": true
          },
          "restrictionsOnAbilityToOccupyIndicator": {
            "type": "boolean",
            "description": "Indicates restrictions on unit owner's ability to occupy, such as due to hotel/motel/resort activities or mandatory rental",
            "nullable": true
          },
          "safetyAndSoundnessRepairsCompleteIndicator": {
            "type": "boolean",
            "description": "Indicates that all repairs affecting safety and structural integrity have already been completed",
            "nullable": true
          },
          "separateOperatingAndReserveAccountsIndicator": {
            "type": "boolean",
            "description": "Indicates that the HOA maintains separate operating and reserve accounts",
            "nullable": true
          },
          "separateRecordsForEachHOAIndicator": {
            "type": "boolean",
            "description": "Indicates that the management company maintains a separate bank account per HOA",
            "nullable": true
          },
          "structurallySoundIndicator": {
            "type": "boolean",
            "description": "Indicates that there has been a report, provided by a licensed engineer, that says that the project is structurally sound",
            "nullable": true
          },
          "subjectLegalPhaseOwnershipBreakdown": {
            "description": "The number of units in the same phase as the subject unit, if the project is phased",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/OwnershipBreakdown"
              }
            ]
          },
          "twoSignaturesForReserveIndicator": {
            "type": "boolean",
            "description": "Indicates that just one board member is unable to write checks against the reserve account without another's consent",
            "nullable": true
          },
          "unitOwners60DaysDelinquentCount": {
            "type": "integer",
            "description": "The number of unit owners over 60 days delinquent on common expense assessments, if there are any",
            "nullable": true
          },
          "unitOwners60DaysDelinquentIndicator": {
            "type": "boolean",
            "description": "Indicates that at least one unit owner is over 60 days deliqnuent on common expense assessments",
            "nullable": true
          },
          "yearPropertyConverted": {
            "type": "integer",
            "description": "The year the property was was converted to a residential project, if the project is a conversion of an existing structure",
            "nullable": true
          },
          "yearPropertyOriginallyBuilt": {
            "type": "integer",
            "description": "The year the property was originally built, if the project is a conversion of an existing structure",
            "nullable": true
          }
        }
      },
      "Property": {
        "type": "object",
        "description": "The property model.",
        "example": {
          "propertyType": "SingleFamily",
          "estimatedValueAmount": 500000,
          "numberOfUnits": 1,
          "address": {
            "line": "123 S Main St",
            "city": "Rochester",
            "state": "Michigan",
            "zipCode": "48307"
          }
        },
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "actualValueAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "address": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ]
          },
          "alleyAccessDetails": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteAccessDetails"
              }
            ]
          },
          "applicableSpecialProgram": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpecialProgramType"
              }
            ]
          },
          "appraisalDeliveredToBorrowerDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "appraisalEffectiveDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "appraisalIdentifier": {
            "type": "string",
            "nullable": true
          },
          "appraisalInspectionCompletedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "appraisalMostRecentPaymentDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "appraisalOrderedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "appraisalPropertyConditionRating": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AppraisalPropertyCondition"
              }
            ]
          },
          "appraisalProvider": {
            "type": "string",
            "nullable": true
          },
          "appraisalReceivedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "appraisalScheduledDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "appraisers": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "appraiserSupervisors": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "attachmentType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PropertyAttachmentType"
              }
            ]
          },
          "averageGrossIncome": {
            "type": "number",
            "readOnly": true,
            "format": "decimal",
            "nullable": true
          },
          "averageGrossIncomeLessExpenses": {
            "type": "number",
            "readOnly": true,
            "format": "decimal",
            "nullable": true
          },
          "avmModelNameType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AVMModelNameType"
              }
            ]
          },
          "avmModelNameTypeOtherDescription": {
            "type": "string",
            "nullable": true
          },
          "bathroomCount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "bedroomCount": {
            "type": "integer",
            "nullable": true
          },
          "breakdownRoomCountByUnit": {
            "type": "boolean",
            "nullable": true
          },
          "buildingStatus": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/FHAConstructionType"
              }
            ]
          },
          "cityPropertyTaxHistory": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PropertyTaxPaymentHistory"
              }
            ]
          },
          "collateralUnderwriterRiskScore": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "computedFields": {
            "type": "object",
            "readOnly": true,
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "conditionOfAppraisal": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConditionOfAppraisal"
              }
            ]
          },
          "constructionMethodType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConstructionMethodType"
              }
            ]
          },
          "constructionMethodTypeOtherDescription": {
            "type": "string",
            "nullable": true
          },
          "countyPropertyTaxHistory": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PropertyTaxPaymentHistory"
              }
            ]
          },
          "currentBorrowerOwners": {
            "type": "array",
            "writeOnly": true,
            "items": {
              "$ref": "#/components/schemas/Borrower"
            }
          },
          "currentBorrowerOwnersIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "guid"
            }
          },
          "currentBorrowerOwnersRefs": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "currentOwnershipDetails": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/OwnershipDetails"
              }
            ]
          },
          "currentTotalHousingExpenses": {
            "type": "number",
            "readOnly": true,
            "format": "decimal",
            "nullable": true
          },
          "currentUsageType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PropertyUsageType"
              }
            ]
          },
          "customFields": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "dateAcquired": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "dateLeaseStarted": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "deedRestrictionTermMonths": {
            "type": "integer",
            "nullable": true
          },
          "derivationFirstPageNumberValue": {
            "type": "integer",
            "nullable": true
          },
          "derivationInstrumentType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DerivationInstrumentType"
              }
            ]
          },
          "derivationRecordedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "derivationVolumeIdentifier": {
            "type": "string",
            "nullable": true
          },
          "earthquakeInsuranceCompanies": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "easements": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/PropertyEasement"
            }
          },
          "electricitySiteUtilityAccess": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteUtilityAccess"
              }
            ]
          },
          "energyEfficientIndicator": {
            "type": "boolean",
            "nullable": true
          },
          "estateType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PropertyEstateType"
              }
            ]
          },
          "estimatedRemainingEconomicLifeYearsCount": {
            "type": "integer",
            "nullable": true
          },
          "estimatedValueAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "facts": {
            "type": "object",
            "readOnly": true,
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "fhaSecondaryResidenceIndicator": {
            "type": "boolean",
            "nullable": true
          },
          "fireInsuranceCompanies": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "firstMortgageMonthlyPayment": {
            "type": "number",
            "readOnly": true,
            "format": "decimal",
            "nullable": true
          },
          "floodCertificationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "floodInsuranceAgents": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "floodInsuranceCompanies": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "floodInsuranceDetails": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/InsuranceDetails"
              }
            ]
          },
          "floodOrderId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "floodOrderPlacementDate": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "floodOrderStatus": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/FloodOrderStatus"
              }
            ]
          },
          "floodPartialIndicator": {
            "type": "boolean",
            "nullable": true
          },
          "floodProductCertifyDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "gasSiteUtilityAccess": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteUtilityAccess"
              }
            ]
          },
          "geocode": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Geocode"
              }
            ]
          },
          "hasAccessoryDwelling": {
            "type": "boolean",
            "nullable": true
          },
          "hawaiianLavaZone": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/HawaiianLavaZone"
              }
            ]
          },
          "hawaiianLavaZoneIndicator": {
            "type": "boolean",
            "nullable": true
          },
          "highestAndBestUseIndicator": {
            "type": "boolean",
            "nullable": true
          },
          "hoaDuesMonthlyPayment": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "hoaMasterInsuranceAgents": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "hoaMasterInsuranceDetails": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/InsuranceDetails"
              }
            ]
          },
          "homeInsuranceAgents": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "homeInsuranceDetails": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/InsuranceDetails"
              }
            ]
          },
          "homeInsuranceMonthlyPayment": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "homeownersInsuranceCompanies": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "hudFhaPropertyCurrentBorrowerOwnersIds": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "type": "string",
              "format": "guid"
            }
          },
          "hurricaneInsuranceCompanies": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "incomes": {
            "type": "array",
            "writeOnly": true,
            "items": {
              "$ref": "#/components/schemas/Income"
            }
          },
          "incomesIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "guid"
            }
          },
          "incomesRefs": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "inspectors": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "intendedDisposition": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PropertyDisposition"
              }
            ]
          },
          "intendedUsageType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PropertyUsageType"
              }
            ]
          },
          "isCurrentAddress": {
            "type": "boolean",
            "nullable": true
          },
          "leaseholdConveysToFeeSimpleOwnershipDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "leaseholdExpirationDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "leaseholdRecordingInformation": {
            "type": "string",
            "nullable": true
          },
          "leaseholdTermInYears": {
            "type": "integer",
            "nullable": true
          },
          "legalDescription": {
            "type": "string",
            "nullable": true
          },
          "legalNumAcres": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "lendersTitleInsuranceCoverageAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "lengthFeetNumber": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "liensOnProperty": {
            "type": "array",
            "writeOnly": true,
            "items": {
              "$ref": "#/components/schemas/Liability"
            }
          },
          "liensOnPropertyIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "guid"
            }
          },
          "liensOnPropertyRefs": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "listingPropertyPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "manufacturedHomeCertificateofTitleNumber": {
            "type": "string",
            "nullable": true
          },
          "manufacturedHomeConditionDescriptionType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ManufacturedHomeConditionDescription"
              }
            ]
          },
          "manufacturedHomeCurrentlyCoveredByCertificateOfTitleIndicator": {
            "type": "boolean",
            "nullable": true
          },
          "manufacturedHomeHUDDataPlateIdentifier": {
            "type": "string",
            "nullable": true
          },
          "manufacturedHomeManufacturerName": {
            "type": "string",
            "nullable": true
          },
          "manufacturedHomeManufactureYear": {
            "type": "integer",
            "nullable": true
          },
          "manufacturedHomeModelIdentifier": {
            "type": "string",
            "nullable": true
          },
          "manufacturedHomeSerialNumberIdentifier": {
            "type": "string",
            "nullable": true
          },
          "mixedUsageIndicator": {
            "type": "boolean",
            "nullable": true
          },
          "mortgageInsuranceMonthlyPayment": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "multifamilyAffordableUnitsCount": {
            "type": "integer",
            "nullable": true
          },
          "nativeAmericanLandsType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/NativeAmericanLandsType"
              }
            ]
          },
          "nfipCommunityIdentifier": {
            "type": "string",
            "nullable": true
          },
          "nfipCommunityName": {
            "type": "string",
            "nullable": true
          },
          "nfipCommunityParticipationStatus": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/NFIPCommunityParticipationStatus"
              }
            ]
          },
          "nfipFloodDataRevisionIndicator": {
            "type": "boolean",
            "nullable": true
          },
          "nfipFloodDataRevisionType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/NFIPFloodDataRevisionType"
              }
            ]
          },
          "nfipFloodZone": {
            "description": "The code (such as A1) pertaining to the flood zone covering the building or mobile home",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/NFIPFloodZone"
              }
            ]
          },
          "nfipLetterOfMapDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "nfipMapPanelDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "nfipMapPanelNumber": {
            "type": "string",
            "nullable": true
          },
          "nonWarrantableCondoIndicator": {
            "type": "boolean",
            "nullable": true
          },
          "numberOfParcels": {
            "type": "integer",
            "nullable": true
          },
          "numberOfUnits": {
            "type": "integer",
            "nullable": true
          },
          "originalCostAmount": {
            "type": "number",
            "description": "The original cost paid for the property. Only relevant if the borrowers currently own this property",
            "format": "decimal",
            "nullable": true
          },
          "otherHousingExpenses": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "otherIntendedUsageType": {
            "type": "string",
            "nullable": true
          },
          "otherLiensOnPropertyIndicator": {
            "type": "boolean",
            "nullable": true
          },
          "otherPropertyValuationForm": {
            "type": "string",
            "nullable": true
          },
          "ownersTitleInsuranceCoverageAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "parcels": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/PropertyParcel"
            }
          },
          "partiesToLeasehold": {
            "type": "string",
            "nullable": true
          },
          "perUnitInformations": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/PerUnitInformation"
            }
          },
          "presenceOfSolarPanelsType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PresenceOfSolarPanelsType"
              }
            ]
          },
          "projectDetails": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProjectDetails"
              }
            ]
          },
          "propertyInspectionType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PropertyInspectionType"
              }
            ]
          },
          "propertyListingStatusDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "propertyListingStatusType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PropertyListingStatusType"
              }
            ]
          },
          "propertyManufacturedHomeIncludesLand": {
            "type": "boolean",
            "nullable": true
          },
          "propertyManufacturedHomeLotOwnershipType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PropertyManufacturedHomeLotOwnershipType"
              }
            ]
          },
          "propertyManufacturedHomeWidthType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PropertyManufacturedHomeWidthType"
              }
            ]
          },
          "propertyTaxMonthlyPayment": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "propertyType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PropertyType"
              }
            ]
          },
          "propertyValuationForm": {
            "description": "Valuation verification type",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PropertyValuationForm"
              }
            ]
          },
          "propertyValuationMethodType": {
            "description": "The method by which the property value was assessed",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ValuationMethod"
              }
            ]
          },
          "propertyValuationMethodTypeOtherDescription": {
            "type": "string",
            "description": "A description of the method by which the property value was assessed if Other is selected",
            "nullable": true
          },
          "proposedOwnershipDetails": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/OwnershipDetails"
              }
            ]
          },
          "proposedOwnershipDetailsSameAsCurrent": {
            "type": "boolean",
            "nullable": true
          },
          "protectedAreaDesignationDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "protectedAreaIndicator": {
            "type": "boolean",
            "nullable": true
          },
          "recentPropertyListingPeriod": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/RecentPropertyListingPeriod"
              }
            ]
          },
          "recordingJurisdiction": {
            "type": "string",
            "nullable": true
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          },
          "renovationAsIsAppraisedValue": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "repairsDescription": {
            "type": "string",
            "nullable": true
          },
          "ruralAreaIndicator": {
            "type": "boolean",
            "nullable": true
          },
          "sanitarySewerSiteUtilityAccess": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteUtilityAccess"
              }
            ]
          },
          "schoolPropertyTaxHistory": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PropertyTaxPaymentHistory"
              }
            ]
          },
          "solarPanelAssociatedLiability": {
            "writeOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Liability"
              }
            ]
          },
          "solarPanelAssociatedLiabilityId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "solarPanelAssociatedLiabilityRef": {
            "type": "string",
            "nullable": true
          },
          "solarPanelOwnershipType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SolarPanelOwnershipType"
              }
            ]
          },
          "solarPanelsOnPropertyIndicator": {
            "type": "boolean",
            "nullable": true
          },
          "soldPropertyPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "specialFloodHazardAreaIndicator": {
            "type": "boolean",
            "nullable": true
          },
          "squareFootage": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "statePropertyTaxHistory": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PropertyTaxPaymentHistory"
              }
            ]
          },
          "storiesCount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "streetAccessDetails": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteAccessDetails"
              }
            ]
          },
          "subdivisionName": {
            "type": "string",
            "nullable": true
          },
          "subjectPropertyIndicator": {
            "type": "boolean",
            "readOnly": true,
            "nullable": true
          },
          "subordinateMortgageMonthlyPayments": {
            "type": "number",
            "readOnly": true,
            "format": "decimal",
            "nullable": true
          },
          "supplementalInsuranceCompanies": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "supplementaryInsuranceDetails": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SupplementaryInsuranceDetails"
            }
          },
          "titleClearedToCloseDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "titleCommitmentReceivedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "titleEndorsementOtherDescription": {
            "type": "string",
            "nullable": true
          },
          "titleEndorsements": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TitleEndorsementType"
            }
          },
          "titleInsuranceLenderPolicyNumber": {
            "type": "string",
            "nullable": true
          },
          "titleInsuranceOwnerPolicyNumber": {
            "type": "string",
            "nullable": true
          },
          "titleInsuranceProvider": {
            "type": "string",
            "nullable": true
          },
          "titleInsuranceProviderFileContactId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "titleInsuranceStatus": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TitleInsuranceStatus"
              }
            ]
          },
          "titleIntegrationUsed": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TitleProvider"
              }
            ]
          },
          "titleOrderedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "titlePolicyEffectiveDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "titlePolicyReceivedDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "titlePremiumAdjustment": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "totalHousingExpenses": {
            "type": "number",
            "readOnly": true,
            "format": "decimal",
            "nullable": true
          },
          "totalMonthlyMarketRentAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "totalRoomCount": {
            "type": "integer",
            "nullable": true
          },
          "townPropertyTaxHistory": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PropertyTaxPaymentHistory"
              }
            ]
          },
          "vaAppraisalAdjustedIndicator": {
            "type": "boolean",
            "nullable": true
          },
          "vaAppraisalType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VAAppraisalType"
              }
            ]
          },
          "valueOfImprovementsOverSinceOriginalPurchase": {
            "type": "number",
            "description": "Value of any improvements made since the property was originally purchased by the borrowers",
            "format": "decimal",
            "nullable": true
          },
          "vaPropertyDesignation": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VAPropertyDesignation"
              }
            ]
          },
          "villagePropertyTaxHistory": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PropertyTaxPaymentHistory"
              }
            ]
          },
          "volcanoInsuranceCompanies": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "waiverToReceiveAppraisalSignedByBorrowerDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "waterSiteUtilityAccess": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteUtilityAccess"
              }
            ]
          },
          "widthFeetNumber": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "windAndHailInsuranceCompanies": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "yearBuilt": {
            "type": "integer",
            "nullable": true
          },
          "zoningClassificationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "zoningComplianceType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ZoningComplianceType"
              }
            ]
          }
        }
      },
      "PropertyAttachmentType": {
        "type": "string",
        "example": "Attached",
        "x-enumNames": [
          "Attached",
          "Detached",
          "SemiDetached"
        ],
        "enum": [
          "Attached",
          "Detached",
          "SemiDetached"
        ]
      },
      "PropertyDisposition": {
        "type": "string",
        "example": "Retain",
        "x-enumNames": [
          "Retain",
          "PendingSale",
          "Sold"
        ],
        "enum": [
          "Retain",
          "PendingSale",
          "Sold"
        ]
      },
      "PropertyEasement": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          },
          "type": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EasementType"
              }
            ]
          }
        }
      },
      "PropertyEstateType": {
        "type": "string",
        "example": "FeeSimple",
        "x-enumNames": [
          "FeeSimple",
          "Leasehold"
        ],
        "enum": [
          "FeeSimple",
          "Leasehold"
        ]
      },
      "PropertyInspectionType": {
        "type": "string",
        "example": "ExteriorOnly",
        "x-enumNames": [
          "ExteriorOnly",
          "InteriorAndExterior",
          "None"
        ],
        "enum": [
          "ExteriorOnly",
          "InteriorAndExterior",
          "None"
        ]
      },
      "PropertyListingStatusType": {
        "type": "string",
        "example": "Active",
        "x-enumNames": [
          "Active",
          "Expired",
          "Withdrawn"
        ],
        "enum": [
          "Active",
          "Expired",
          "Withdrawn"
        ]
      },
      "PropertyManufacturedHomeLotOwnershipType": {
        "type": "string",
        "example": "UnpaidRentedLot",
        "x-enumNames": [
          "UnpaidRentedLot",
          "PaidRentedLot",
          "OwnedLot",
          "PermanentFoundation"
        ],
        "enum": [
          "UnpaidRentedLot",
          "PaidRentedLot",
          "OwnedLot",
          "PermanentFoundation"
        ]
      },
      "PropertyManufacturedHomeWidthType": {
        "type": "string",
        "example": "ManufacturedHome",
        "x-enumNames": [
          "ManufacturedHome",
          "MultiwideManufacturedHome"
        ],
        "enum": [
          "ManufacturedHome",
          "MultiwideManufacturedHome"
        ]
      },
      "PropertyOwnershipType": {
        "type": "string",
        "example": "NaturalPersons",
        "x-enumNames": [
          "NaturalPersons",
          "TrustLLCOrPartnership"
        ],
        "enum": [
          "NaturalPersons",
          "TrustLLCOrPartnership"
        ]
      },
      "PropertyParcel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "identificationType": {
            "description": "Parcel identification type",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PropertyParcelIdentificationType"
              }
            ]
          },
          "identifier": {
            "type": "string",
            "description": "Parcel identifier",
            "nullable": true
          },
          "otherIdentificationType": {
            "type": "string",
            "description": "Other identification type",
            "nullable": true
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          }
        }
      },
      "PropertyParcelIdentificationType": {
        "type": "string",
        "example": "AssessorUnformattedId",
        "x-enumNames": [
          "AssessorUnformattedId",
          "ParcelIdNumber",
          "TaxMapId",
          "TaxParcelId",
          "TorrensCertificateId",
          "Other"
        ],
        "enum": [
          "AssessorUnformattedId",
          "ParcelIdNumber",
          "TaxMapId",
          "TaxParcelId",
          "TorrensCertificateId",
          "Other"
        ]
      },
      "PropertySellerType": {
        "type": "string",
        "example": "Individual",
        "x-enumNames": [
          "Individual",
          "Business"
        ],
        "enum": [
          "Individual",
          "Business"
        ]
      },
      "PropertyTaxPaymentHistory": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "amountLastPaid": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "currentlyDelinquent": {
            "type": "boolean",
            "nullable": true
          },
          "delinquencyStartDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "exemptFromTaxes": {
            "type": "boolean",
            "nullable": true
          },
          "lastPaidDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          }
        }
      },
      "PropertyType": {
        "type": "string",
        "example": "SingleFamily",
        "x-enumNames": [
          "SingleFamily",
          "Condominium",
          "Cooperative",
          "TwoToFourUnitProperty",
          "ManufacturedHome",
          "PlannedUnitDevelopment",
          "Land",
          "MultiFamily"
        ],
        "enum": [
          "SingleFamily",
          "Condominium",
          "Cooperative",
          "TwoToFourUnitProperty",
          "ManufacturedHome",
          "PlannedUnitDevelopment",
          "Land",
          "MultiFamily"
        ]
      },
      "PropertyUsageType": {
        "type": "string",
        "example": "Investment",
        "x-enumNames": [
          "Investment",
          "PrimaryResidence",
          "SecondHome",
          "Other"
        ],
        "enum": [
          "Investment",
          "PrimaryResidence",
          "SecondHome",
          "Other"
        ]
      },
      "PropertyValuation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "actualValueAmount": {
            "type": "number",
            "description": "Actual value of the property as determined by an appraiser. For renovation loans, this will be the as-completed appraised value.",
            "format": "decimal",
            "nullable": true
          },
          "adjustedAVMAmountIndicator": {
            "type": "boolean",
            "description": "Indicates if the AVM includes an adjustment",
            "nullable": true
          },
          "alleyAccessDetails": {
            "description": "Alley access",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteAccessDetails"
              }
            ]
          },
          "appraisalDeliveredToBorrowerDate": {
            "type": "string",
            "description": "Date appraisal was delivered to the borrower",
            "format": "date-time",
            "nullable": true
          },
          "appraisalEffectiveDate": {
            "type": "string",
            "description": "The effective date of the appraisal report on the subject property",
            "format": "date",
            "nullable": true
          },
          "appraisalFee": {
            "type": "number",
            "description": "Appraisal fee",
            "format": "decimal",
            "nullable": true
          },
          "appraisalFeeClosingCostId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "appraisalInspectionCompletedDate": {
            "type": "string",
            "description": "Date appraisal inspection was completed",
            "format": "date-time",
            "nullable": true
          },
          "appraisalManagementCompanies": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "appraisalOrderedDate": {
            "type": "string",
            "description": "Date appraisal was ordered",
            "format": "date-time",
            "nullable": true
          },
          "appraisalPropertyConditionRating": {
            "description": "Appraisal property condition rating",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AppraisalPropertyCondition"
              }
            ]
          },
          "appraisalProvider": {
            "type": "string",
            "description": "Name of the company that provided the appraisal, if one was used",
            "nullable": true
          },
          "appraisalProviderPaymentStatus": {
            "type": "string",
            "nullable": true
          },
          "appraisalProviderStatus": {
            "type": "string",
            "nullable": true
          },
          "appraisalReceivedDate": {
            "type": "string",
            "description": "Date appraisal was received",
            "format": "date-time",
            "nullable": true
          },
          "appraisalScheduledDate": {
            "type": "string",
            "description": "Date appraisal scheduled for",
            "format": "date-time",
            "nullable": true
          },
          "appraisalTypeName": {
            "type": "string",
            "description": "The appraisal type we requested from the appraisal integration",
            "nullable": true
          },
          "appraisalXmlFileId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "appraisedPropertyValue": {
            "type": "number",
            "description": "Appraised property value",
            "format": "decimal",
            "nullable": true
          },
          "appraiserAssignedDate": {
            "type": "string",
            "description": "Date appraiser was assigned.",
            "format": "date",
            "nullable": true
          },
          "appraiserCompany": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AppraiserCompany"
              }
            ]
          },
          "appraiserFileIdentifier": {
            "type": "string",
            "nullable": true
          },
          "appraiserReportSignedDate": {
            "type": "string",
            "description": "Appraiser report signed date",
            "format": "date",
            "nullable": true
          },
          "appraisers": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FileContact"
            }
          },
          "attachmentType": {
            "description": "Whether the property is attached or detached to neighboring properties. Mostly relevant for subject properties",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PropertyAttachmentType"
              }
            ]
          },
          "avmConfidenceScoreValue": {
            "type": "number",
            "description": "The confidence score used by various AVMs to indicate the confidence level of the value estimate",
            "format": "decimal",
            "nullable": true
          },
          "avmDate": {
            "type": "string",
            "description": "The date the automated valuation was calculated for the subject Property",
            "format": "date",
            "nullable": true
          },
          "avmHighValueRangeAmount": {
            "type": "number",
            "description": "The upper end of the value range for the subject property resulting from the application of an AVM",
            "format": "decimal",
            "nullable": true
          },
          "avmIndexType": {
            "description": "The name of the published index used in the AVM",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AVMIndexType"
              }
            ]
          },
          "avmLowValueRangeAmount": {
            "type": "number",
            "description": "The low end of the value range for the subject property resulting from the application of an AVM",
            "format": "decimal",
            "nullable": true
          },
          "avmMethodType": {
            "description": "Specifies the method used by the Automated Valuation system",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AVMMethodType"
              }
            ]
          },
          "avmModelEffectiveDate": {
            "type": "string",
            "description": "The last update date for the AVM used in this transaction",
            "format": "date",
            "nullable": true
          },
          "avmModelNameType": {
            "description": "The name of the AVM model used to calculate the valuation of the subject property",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AVMModelNameType"
              }
            ]
          },
          "avmModelNameTypeOtherDescription": {
            "type": "string",
            "nullable": true
          },
          "avmOutcomeType": {
            "description": "The type of value computed by the AVM for presentation",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AVMOutcomeType"
              }
            ]
          },
          "avmServiceProviderName": {
            "type": "string",
            "description": "The vendor who provided an AVM evaluation for the subject property",
            "nullable": true
          },
          "avmValueAmount": {
            "type": "number",
            "description": "The AVM computed value of the subject property resulting from the application of an AVM",
            "format": "decimal",
            "nullable": true
          },
          "bathroomCount": {
            "type": "number",
            "description": "How many bathrooms the property has",
            "format": "decimal",
            "nullable": true
          },
          "bedroomCount": {
            "type": "integer",
            "description": "How many bedrooms the property has",
            "nullable": true
          },
          "breakdownRoomCountByUnit": {
            "type": "boolean",
            "description": "Whether the property's room count will be broken down by unit. Only available when number of units more than 1 for investment property.",
            "nullable": true
          },
          "computedFields": {
            "type": "object",
            "x-ms-dynamic-schema": {
              "operationId": "GetDynamicSchema",
              "parameters": {
                "entityType": "PropertyValuation",
                "fieldType": "ComputedField",
                "processVersionId": {
                  "parameterResponseReference": "processVersionId"
                }
              }
            },
            "readOnly": true,
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "conditionOfAppraisal": {
            "description": "Conditions of the appraisal if there is a dependency on future repairs or activities",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConditionOfAppraisal"
              }
            ]
          },
          "constructionMethodType": {
            "description": "How the property will be constructed - site built vs manufactured",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConstructionMethodType"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "cuRiskScore": {
            "type": "number",
            "description": "Risk score evaluating the valuation risk of an appraisal.",
            "format": "decimal",
            "nullable": true
          },
          "currentUsageType": {
            "description": "How the property is currently being used. Only relevant if the borrowers currently own this property",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PropertyUsageType"
              }
            ]
          },
          "customFields": {
            "type": "object",
            "x-ms-dynamic-schema": {
              "operationId": "GetDynamicSchema",
              "parameters": {
                "entityType": "PropertyValuation",
                "fieldType": "CustomField",
                "processVersionId": {
                  "parameterResponseReference": "processVersionId"
                }
              }
            },
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "electricitySiteUtilityAccess": {
            "description": "Electricity utility access",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteUtilityAccess"
              }
            ]
          },
          "estimatedRemainingEconomicLifeYearsCount": {
            "type": "integer",
            "description": "Specifies the estimated remaining economic life of property improvements in years. This value is used in calculating the depreciation of the property improvements.",
            "nullable": true
          },
          "facts": {
            "type": "object",
            "x-ms-dynamic-schema": {
              "operationId": "GetDynamicSchema",
              "parameters": {
                "entityType": "PropertyValuation",
                "fieldType": "Fact",
                "processVersionId": {
                  "parameterResponseReference": "processVersionId"
                }
              }
            },
            "readOnly": true,
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "forecastStandardDeviationScoreValue": {
            "type": "number",
            "description": "The value of the FSD score for this AVM transaction",
            "format": "decimal",
            "nullable": true
          },
          "forecastStandardDeviationScoringModelName": {
            "type": "string",
            "description": "The name of the Forecast Standard Deviation scoring model presented by the selected AVM",
            "nullable": true
          },
          "gasSiteUtilityAccess": {
            "description": "Gas utility access",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteUtilityAccess"
              }
            ]
          },
          "hasAccessoryDwelling": {
            "type": "boolean",
            "description": "Whether the property has an additional dwelling.",
            "nullable": true
          },
          "highestAndBestUseIndicator": {
            "type": "boolean",
            "description": "Indicates that the present use is the highest and best of the site as improved",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "inspectionCompletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "inspectionScheduledAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lcaAppraisalQualityRiskScore": {
            "type": "number",
            "description": "Risk score evaluating the quality of an appraisal.",
            "format": "decimal",
            "nullable": true
          },
          "lcaValuationRiskScore": {
            "type": "number",
            "description": "Risk score evaluating the valuation risk of an appraisal for Freddie Mac).",
            "format": "decimal",
            "nullable": true
          },
          "manuallyUploadedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "mixedUsageIndicator": {
            "type": "boolean",
            "description": "Indicates that this home is also used for business purposes",
            "nullable": true
          },
          "mostRecentPaymentDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "numberOfParcels": {
            "type": "integer",
            "description": "Number of parcels in the property. Mostly relevant for subject properties",
            "nullable": true
          },
          "numberOfUnits": {
            "type": "integer",
            "description": "Number of units in the property.",
            "nullable": true
          },
          "orderAcceptedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "orderCompletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "orderId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "paymentLink": {
            "type": "string",
            "nullable": true
          },
          "paymentStatus": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AppraisalPaymentStatus"
              }
            ]
          },
          "perUnitInformations": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/PerUnitInformation"
            }
          },
          "pointOfContactId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "propertyValuationForm": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PropertyValuationForm"
              }
            ]
          },
          "propertyValuationMethodType": {
            "description": "Property valuation method type",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ValuationMethod"
              }
            ]
          },
          "propertyValuationMethodTypeOtherDescription": {
            "type": "string",
            "description": "Property valuation method type other description",
            "nullable": true
          },
          "receivedDocumentIds": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "type": "string",
              "format": "guid"
            }
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          },
          "sanitarySewerSiteUtilityAccess": {
            "description": "SanitarySewer utility access",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteUtilityAccess"
              }
            ]
          },
          "selectedPropertyValuationIndicator": {
            "type": "boolean",
            "readOnly": true,
            "description": "Indicates if this property valuation is the selected property valuation for the loan",
            "nullable": true
          },
          "serviceNeededByDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "source": {
            "$ref": "#/components/schemas/AppraisalSource"
          },
          "squareFootage": {
            "type": "integer",
            "description": "Square footage of the property",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AppraisalOrderStatus"
              }
            ]
          },
          "storiesCount": {
            "type": "number",
            "description": "How many floors or stories the property has",
            "format": "decimal",
            "nullable": true
          },
          "streetAccessDetails": {
            "description": "Street access",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteAccessDetails"
              }
            ]
          },
          "totalMonthlyMarketRentAmount": {
            "type": "number",
            "description": "Total monthly market rent amount",
            "format": "decimal",
            "nullable": true
          },
          "totalRoomCount": {
            "type": "integer",
            "description": "How many rooms the property has",
            "nullable": true
          },
          "transferredAppraisalIndicator": {
            "type": "boolean",
            "description": "Indicates whether the appraisal report was transferred",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/PropertyValuationType"
          },
          "unadjustedAVMValue": {
            "type": "number",
            "description": "The unadjusted AVM value",
            "format": "decimal",
            "nullable": true
          },
          "waterSiteUtilityAccess": {
            "description": "Water utility access",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteUtilityAccess"
              }
            ]
          },
          "yearBuilt": {
            "type": "integer",
            "description": "The year the property was originally built. Mostly relevant for subject properties",
            "nullable": true
          },
          "zoningClassificationIdentifier": {
            "type": "string",
            "description": "Identifies the zoning classification applied to the site",
            "nullable": true
          },
          "zoningComplianceType": {
            "description": "Indicates the level of compliance of the subject site to zoning regulations",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ZoningComplianceType"
              }
            ]
          }
        }
      },
      "PropertyValuationForm": {
        "type": "string",
        "example": "AppraisalUpdateAndOrCompletionReport",
        "x-enumNames": [
          "AppraisalUpdateAndOrCompletionReport",
          "ComplianceInspectionReport",
          "ConditionalCommitmentDirectEndorsementStatementOfAppraisedValue",
          "DefinitionsStatementOfLimitingConditionsAndAppraisersCertification",
          "DesktopUnderwriterPropertyInspectionReport",
          "EmployeeRelocationCouncil2001",
          "ExteriorOnlyInspectionIndividualCondominiumUnitAppraisalReport",
          "ExteriorOnlyInspectionIndividualCooperativeInterestAppraisalReport",
          "ExteriorOnlyInspectionResidentialAppraisalReport",
          "ForYourProtectionGetAHomeInspection",
          "GeneralAddendum",
          "HUDVAAddendumToURLA",
          "ImportantNoticeToHomebuyers",
          "IndividualCondominiumUnitAppraisalReport",
          "IndividualCooperativeInterestAppraisalReport",
          "LoanProspectorConditionAndMarketability",
          "ManufacturedHomeAppraisalReport",
          "ManufacturedHomeAppraisalReportVA",
          "MarketConditionsAddendumToTheAppraisalReport",
          "MortgageesAssuranceOfCompletion",
          "NewConstructionSubterraneanTermiteSoilTreatmentRecord",
          "OneUnitResidentialAppraisalFieldReviewReport",
          "Other",
          "RequestForDeterminationOfReasonableValue",
          "SmallResidentialIncomePropertyAppraisalReport",
          "SubterraneanTermiteSoilTreatmentBuildersGuarantee",
          "TwoToFourUnitResidentialAppraisalFieldReviewReport",
          "UniformResidentialAppraisalReport",
          "WorldwideEmployeeRelocationCouncilSummaryAppraisalReport",
          "EmployeeRelocationAppraisalFormReport",
          "DesktopUnderwriterQualitativeAnalysisAppraisalReport",
          "OneUnitResidentialAppraisalDeskReviewReport"
        ],
        "enum": [
          "AppraisalUpdateAndOrCompletionReport",
          "ComplianceInspectionReport",
          "ConditionalCommitmentDirectEndorsementStatementOfAppraisedValue",
          "DefinitionsStatementOfLimitingConditionsAndAppraisersCertification",
          "DesktopUnderwriterPropertyInspectionReport",
          "EmployeeRelocationCouncil2001",
          "ExteriorOnlyInspectionIndividualCondominiumUnitAppraisalReport",
          "ExteriorOnlyInspectionIndividualCooperativeInterestAppraisalReport",
          "ExteriorOnlyInspectionResidentialAppraisalReport",
          "ForYourProtectionGetAHomeInspection",
          "GeneralAddendum",
          "HUDVAAddendumToURLA",
          "ImportantNoticeToHomebuyers",
          "IndividualCondominiumUnitAppraisalReport",
          "IndividualCooperativeInterestAppraisalReport",
          "LoanProspectorConditionAndMarketability",
          "ManufacturedHomeAppraisalReport",
          "ManufacturedHomeAppraisalReportVA",
          "MarketConditionsAddendumToTheAppraisalReport",
          "MortgageesAssuranceOfCompletion",
          "NewConstructionSubterraneanTermiteSoilTreatmentRecord",
          "OneUnitResidentialAppraisalFieldReviewReport",
          "Other",
          "RequestForDeterminationOfReasonableValue",
          "SmallResidentialIncomePropertyAppraisalReport",
          "SubterraneanTermiteSoilTreatmentBuildersGuarantee",
          "TwoToFourUnitResidentialAppraisalFieldReviewReport",
          "UniformResidentialAppraisalReport",
          "WorldwideEmployeeRelocationCouncilSummaryAppraisalReport",
          "EmployeeRelocationAppraisalFormReport",
          "DesktopUnderwriterQualitativeAnalysisAppraisalReport",
          "OneUnitResidentialAppraisalDeskReviewReport"
        ]
      },
      "PropertyValuationType": {
        "type": "string",
        "example": "Appraisal",
        "x-enumNames": [
          "Appraisal",
          "AVM"
        ],
        "enum": [
          "Appraisal",
          "AVM"
        ]
      },
      "Proration": {
        "type": "object",
        "description": "The proration model.",
        "example": {
          "amount": 750,
          "paidFromDate": "2023-01-01",
          "paidThroughDate": "2023-05-09",
          "paidByParty": "Seller",
          "prorationType": "CountyPropertyTax"
        },
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "amount": {
            "type": "number",
            "description": "Adjustment amount",
            "format": "decimal",
            "nullable": true
          },
          "computedFields": {
            "type": "object",
            "x-ms-dynamic-schema": {
              "operationId": "GetDynamicSchema",
              "parameters": {
                "entityType": "Proration",
                "fieldType": "ComputedField",
                "processVersionId": {
                  "parameterResponseReference": "processVersionId"
                }
              }
            },
            "readOnly": true,
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "customFields": {
            "type": "object",
            "x-ms-dynamic-schema": {
              "operationId": "GetDynamicSchema",
              "parameters": {
                "entityType": "Proration",
                "fieldType": "CustomField",
                "processVersionId": {
                  "parameterResponseReference": "processVersionId"
                }
              }
            },
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "facts": {
            "type": "object",
            "x-ms-dynamic-schema": {
              "operationId": "GetDynamicSchema",
              "parameters": {
                "entityType": "Proration",
                "fieldType": "Fact",
                "processVersionId": {
                  "parameterResponseReference": "processVersionId"
                }
              }
            },
            "readOnly": true,
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "paidByParty": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProrationPaidByParty"
              }
            ]
          },
          "paidFromDate": {
            "type": "string",
            "description": "Paid from date",
            "format": "date",
            "nullable": true
          },
          "paidOutsideOfClosing": {
            "type": "boolean",
            "nullable": true
          },
          "paidThroughDate": {
            "type": "string",
            "description": "Paid through date",
            "format": "date",
            "nullable": true
          },
          "prorationType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProrationType"
              }
            ]
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          }
        }
      },
      "ProrationPaidByParty": {
        "type": "string",
        "example": "Buyer",
        "x-enumNames": [
          "Buyer",
          "Seller"
        ],
        "enum": [
          "Buyer",
          "Seller"
        ]
      },
      "ProrationType": {
        "type": "string",
        "example": "BoroughPropertyTax",
        "x-enumNames": [
          "BoroughPropertyTax",
          "CityPropertyTax",
          "CondominiumAssociationDues",
          "CooperativeAssociationDues",
          "CountyPropertyTax",
          "DistrictPropertyTax",
          "EarthquakeInsurancePremium",
          "FloodInsurancePremium",
          "GroundRent",
          "HailInsurancePremium",
          "HazardInsurancePremium",
          "HomeownersAssociationDues",
          "HomeownersInsurancePremium",
          "InterestOnLoanAssumption",
          "MortgageInsurancePremium",
          "Other",
          "PastDuePropertyTax",
          "RentFromSubjectProperty",
          "SellersReserveAccountAssumption",
          "StatePropertyTax",
          "TownPropertyTax",
          "Utilities",
          "VolcanoInsurancePremium",
          "WindAndStormInsurancePremium",
          "Assessments"
        ],
        "enum": [
          "BoroughPropertyTax",
          "CityPropertyTax",
          "CondominiumAssociationDues",
          "CooperativeAssociationDues",
          "CountyPropertyTax",
          "DistrictPropertyTax",
          "EarthquakeInsurancePremium",
          "FloodInsurancePremium",
          "GroundRent",
          "HailInsurancePremium",
          "HazardInsurancePremium",
          "HomeownersAssociationDues",
          "HomeownersInsurancePremium",
          "InterestOnLoanAssumption",
          "MortgageInsurancePremium",
          "Other",
          "PastDuePropertyTax",
          "RentFromSubjectProperty",
          "SellersReserveAccountAssumption",
          "StatePropertyTax",
          "TownPropertyTax",
          "Utilities",
          "VolcanoInsurancePremium",
          "WindAndStormInsurancePremium",
          "Assessments"
        ]
      },
      "ProviderOfFinancing": {
        "type": "string",
        "example": "Borrower",
        "x-enumNames": [
          "Borrower",
          "Builder",
          "CommunityNonProfit",
          "Employer",
          "FederalAgency",
          "Institutional",
          "Lender",
          "LocalAgency",
          "NonOriginatingFinancialInstitution",
          "NonParentRelative",
          "Other",
          "Parent",
          "PropertySeller",
          "Relative",
          "ReligiousNonProfit",
          "RuralHousingService",
          "StateAgency",
          "Unknown",
          "UnmarriedPartner",
          "UnrelatedFriend"
        ],
        "enum": [
          "Borrower",
          "Builder",
          "CommunityNonProfit",
          "Employer",
          "FederalAgency",
          "Institutional",
          "Lender",
          "LocalAgency",
          "NonOriginatingFinancialInstitution",
          "NonParentRelative",
          "Other",
          "Parent",
          "PropertySeller",
          "Relative",
          "ReligiousNonProfit",
          "RuralHousingService",
          "StateAgency",
          "Unknown",
          "UnmarriedPartner",
          "UnrelatedFriend"
        ]
      },
      "PublicRecord": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "borrowersIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "guid"
            }
          },
          "borrowersRefs": {
            "type": "array",
            "writeOnly": true,
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "computedFields": {
            "type": "object",
            "readOnly": true,
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "creditPublicRecordDispositionDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "creditPublicRecordDispositionType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CreditPublicRecordDispositionType"
              }
            ]
          },
          "creditPublicRecordDocketIdentifier": {
            "type": "string",
            "nullable": true
          },
          "creditPublicRecordFiledDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "creditPublicRecordType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CreditPublicRecordType"
              }
            ]
          },
          "customFields": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "facts": {
            "type": "object",
            "readOnly": true,
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          }
        }
      },
      "PullCreditBorrowerInput": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "borrowerId",
          "consentType"
        ],
        "properties": {
          "borrowerId": {
            "type": "string",
            "format": "guid"
          },
          "consentType": {
            "$ref": "#/components/schemas/CreditPullConsentType"
          },
          "overrideOldLiabilities": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "PullCreditInput": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "actionType",
          "borrowers",
          "pullType",
          "requestType"
        ],
        "properties": {
          "actionType": {
            "$ref": "#/components/schemas/CreditPullActionType"
          },
          "borrowers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PullCreditBorrowerInput"
            }
          },
          "creditReportIdentifier": {
            "type": "string",
            "nullable": true
          },
          "pullEquifax": {
            "type": "boolean"
          },
          "pullExperian": {
            "type": "boolean"
          },
          "pullTransUnion": {
            "type": "boolean"
          },
          "pullType": {
            "$ref": "#/components/schemas/CreditPullType"
          },
          "requestType": {
            "$ref": "#/components/schemas/CreditPullRequestType"
          },
          "selectedCreditProvider": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CreditExternalProviderType"
              }
            ]
          }
        }
      },
      "PutLoanStageBody": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "loanStageTemplateId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "loanStageTemplateName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PutLoanStageErrorResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "missingRoleAssignments": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "QueryPipelineViewFilter": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "columnId",
          "type",
          "value"
        ],
        "properties": {
          "columnId": {
            "type": "string",
            "format": "guid"
          },
          "type": {
            "$ref": "#/components/schemas/QueryPipelineViewFilterType"
          },
          "value": {}
        }
      },
      "QueryPipelineViewFilterType": {
        "type": "string",
        "example": "ExactMatch",
        "x-enumNames": [
          "ExactMatch"
        ],
        "enum": [
          "ExactMatch"
        ]
      },
      "QueryPipelineViewInput": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "pipelineViewId",
          "userId"
        ],
        "properties": {
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QueryPipelineViewFilter"
            }
          },
          "limit": {
            "type": "integer"
          },
          "offset": {
            "type": "integer"
          },
          "pipelineViewId": {
            "type": "string",
            "format": "guid"
          },
          "sortColumnId": {
            "type": "string",
            "format": "guid"
          },
          "sortDirection": {
            "$ref": "#/components/schemas/SortDirection"
          },
          "userId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "QueryPipelineViewResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "columns": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/PipelineViewColumn"
            }
          },
          "loans": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/QueryPipelineViewResponseLoan"
            }
          }
        }
      },
      "QueryPipelineViewResponseLoan": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "columns": {
            "type": "array",
            "readOnly": true,
            "items": {
              "nullable": true
            }
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          }
        }
      },
      "QuotePricingJobStatusDetails": {
        "type": "object",
        "description": "Information about the status of an asynchronous pricing quote job request.",
        "additionalProperties": false,
        "properties": {
          "details": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/PricingQuoteScenario"
            }
          },
          "errors": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "jobStatus": {
            "readOnly": true,
            "$ref": "#/components/schemas/JobStatus"
          }
        }
      },
      "QuoteStatus": {
        "type": "string",
        "example": "Active",
        "x-enumNames": [
          "Active",
          "UpdateInProgress",
          "Expired",
          "Suspended"
        ],
        "enum": [
          "Active",
          "UpdateInProgress",
          "Expired",
          "Suspended"
        ]
      },
      "RateLockExtension": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "extensionDurationDays": {
            "type": "integer",
            "description": "Extension duration days",
            "format": "int32",
            "nullable": true
          },
          "extensionFeeFixedAmount": {
            "type": "number",
            "description": "Extension fee amount",
            "format": "decimal",
            "nullable": true
          },
          "extensionFeePercentage": {
            "type": "number",
            "description": "Extension fee percentage",
            "format": "decimal",
            "nullable": true
          },
          "extensionFeeType": {
            "description": "Extension fee type",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/FeeCalculationMethod"
              }
            ]
          },
          "extensionInitiatedDate": {
            "type": "string",
            "description": "Extension initiated date",
            "format": "date",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          }
        }
      },
      "RateLockStatus": {
        "type": "string",
        "example": "NotRequested",
        "x-enumNames": [
          "NotRequested",
          "Requested",
          "Locked",
          "Expired",
          "Denied",
          "Cancelled",
          "Priced",
          "ExtensionRequested",
          "ConcessionRequested",
          "RepriceRequested",
          "RelockRequested"
        ],
        "enum": [
          "NotRequested",
          "Requested",
          "Locked",
          "Expired",
          "Denied",
          "Cancelled",
          "Priced",
          "ExtensionRequested",
          "ConcessionRequested",
          "RepriceRequested",
          "RelockRequested"
        ]
      },
      "RateRoundingMethod": {
        "type": "string",
        "example": "NearestOneEighth",
        "x-enumNames": [
          "NearestOneEighth",
          "NearestOneFourth"
        ],
        "enum": [
          "NearestOneEighth",
          "NearestOneFourth"
        ]
      },
      "RecentPropertyListingPeriod": {
        "type": "string",
        "example": "WithinTheLast6Months",
        "x-enumNames": [
          "WithinTheLast6Months",
          "WithinTheLast12Months",
          "MoreThan12MonthsAgo",
          "NeverListed"
        ],
        "enum": [
          "WithinTheLast6Months",
          "WithinTheLast12Months",
          "MoreThan12MonthsAgo",
          "NeverListed"
        ]
      },
      "Recipient": {
        "title": "Recipient",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "borrowerId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "displayLabel": {
            "type": "string",
            "readOnly": true
          },
          "documentExternalURL": {
            "type": "string",
            "readOnly": true,
            "format": "uri",
            "nullable": true
          },
          "email": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "isLender": {
            "type": "boolean",
            "readOnly": true,
            "nullable": true
          },
          "recipientType": {
            "readOnly": true,
            "$ref": "#/components/schemas/RecipientType"
          },
          "signed": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "RecipientType": {
        "type": "string",
        "example": "Borrower",
        "x-enumNames": [
          "Borrower",
          "Lender",
          "ThirdParty"
        ],
        "enum": [
          "Borrower",
          "Lender",
          "ThirdParty"
        ]
      },
      "ReferenceDate": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "offsetDays": {
            "type": "integer",
            "readOnly": true,
            "format": "int32"
          },
          "referenceDateType": {
            "readOnly": true,
            "$ref": "#/components/schemas/ReferenceDateType"
          },
          "referenceLoanStageTemplateId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          }
        }
      },
      "ReferenceDateType": {
        "type": "string",
        "example": "ActualStartDate",
        "x-enumNames": [
          "ActualStartDate",
          "TargetStartDate",
          "ExpectedClosingDate",
          "LoanCreationDate"
        ],
        "enum": [
          "ActualStartDate",
          "TargetStartDate",
          "ExpectedClosingDate",
          "LoanCreationDate"
        ]
      },
      "RefinanceCashOutBenefitType": {
        "type": "string",
        "example": "DebtConsolidation",
        "x-enumNames": [
          "DebtConsolidation",
          "MedicalExpenses",
          "HomeImprovement",
          "EducationExpenses",
          "Other"
        ],
        "enum": [
          "DebtConsolidation",
          "MedicalExpenses",
          "HomeImprovement",
          "EducationExpenses",
          "Other"
        ]
      },
      "RefinanceCashOutDeterminationType": {
        "type": "string",
        "example": "NoOrLimitedCashOut",
        "x-enumNames": [
          "NoOrLimitedCashOut",
          "CashOut"
        ],
        "enum": [
          "NoOrLimitedCashOut",
          "CashOut"
        ]
      },
      "RelationshipVestingType": {
        "type": "string",
        "example": "CommunityProperty",
        "x-enumNames": [
          "CommunityProperty",
          "Individual",
          "JointTenants",
          "JointTenantsWithRightOfSurvivorship",
          "LeasedFee",
          "LifeEstate",
          "Other",
          "TenantsByTheEntirety",
          "TenantsInCommon"
        ],
        "enum": [
          "CommunityProperty",
          "Individual",
          "JointTenants",
          "JointTenantsWithRightOfSurvivorship",
          "LeasedFee",
          "LifeEstate",
          "Other",
          "TenantsByTheEntirety",
          "TenantsInCommon"
        ]
      },
      "REOMarketingPartyType": {
        "type": "string",
        "example": "Investor",
        "x-enumNames": [
          "Investor",
          "Lender"
        ],
        "enum": [
          "Investor",
          "Lender"
        ]
      },
      "ReportingEvent": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "actingUserId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "action": {
            "readOnly": true,
            "$ref": "#/components/schemas/LoanReportingAction"
          },
          "loanCreatedAt": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "taskAssigneeId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "taskTemplateExternalIdentifier": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "taskTemplateId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time"
          }
        }
      },
      "RequestRelock": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "quoteId"
        ],
        "properties": {
          "quoteId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "RequestRepriceInput": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "quoteId",
          "rateLockPeriod"
        ],
        "properties": {
          "quoteId": {
            "type": "string",
            "format": "guid"
          },
          "rateLockPeriod": {
            "type": "integer"
          }
        }
      },
      "RequiredPropertyDataReport": {
        "type": "string",
        "example": "FannieMae",
        "x-enumNames": [
          "FannieMae",
          "FreddieMac"
        ],
        "enum": [
          "FannieMae",
          "FreddieMac"
        ]
      },
      "ResaveDisclosuresToLoanInput": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "messageToBorrower",
          "packageType",
          "provider",
          "bundlingOption",
          "generationType"
        ],
        "properties": {
          "alternatePackageNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "bundlingOption": {
            "$ref": "#/components/schemas/DisclosureBundlingOption"
          },
          "changeInCircumstancesReasons": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ChangeInCircumstancesReason"
            }
          },
          "deliveryMethod": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DeliveryMethod"
              }
            ]
          },
          "generationType": {
            "$ref": "#/components/schemas/DisclosureGenerationType"
          },
          "isVestaStandardPackageType": {
            "type": "boolean",
            "description": "When true PackageType should be InitialDisclosure, Redisclosure, ClosingDisclosure, or Closing regardless of docgen provider",
            "nullable": true
          },
          "messageToBorrower": {
            "type": "string"
          },
          "packageType": {
            "type": "string"
          },
          "provider": {
            "$ref": "#/components/schemas/DocgenEngineType"
          }
        }
      },
      "ResendDisclosuresInput": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "messageToBorrower",
          "packageType",
          "provider"
        ],
        "properties": {
          "alternatePackageNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "changeInCircumstancesReasons": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ChangeInCircumstancesReason"
            }
          },
          "isVestaStandardPackageType": {
            "type": "boolean",
            "description": "When true PackageType should be InitialDisclosure, Redisclosure, ClosingDisclosure, or Closing regardless of docgen provider",
            "nullable": true
          },
          "messageToBorrower": {
            "type": "string"
          },
          "packageType": {
            "type": "string"
          },
          "provider": {
            "$ref": "#/components/schemas/DocgenEngineType"
          }
        }
      },
      "RhodeIslandLicenseType": {
        "type": "string",
        "example": "LenderLicense",
        "x-enumNames": [
          "LenderLicense",
          "LoanBrokerLicense",
          "ThirdPartyLoanServicerLicense"
        ],
        "enum": [
          "LenderLicense",
          "LoanBrokerLicense",
          "ThirdPartyLoanServicerLicense"
        ]
      },
      "RoleIdentifier": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          }
        }
      },
      "SAndPRating": {
        "type": "string",
        "example": "AAA",
        "x-enumNames": [
          "AAA",
          "AA",
          "A",
          "BBB",
          "BB",
          "B",
          "CCC",
          "CC",
          "SD",
          "D"
        ],
        "enum": [
          "AAA",
          "AA",
          "A",
          "BBB",
          "BB",
          "B",
          "CCC",
          "CC",
          "SD",
          "D"
        ]
      },
      "SaveAdverseActionNoticeToLoanInput": {
        "title": "SaveAdverseActionNoticeToLoanInput",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "provider",
          "bundlingOption",
          "generationType"
        ],
        "properties": {
          "bundlingOption": {
            "$ref": "#/components/schemas/DisclosureBundlingOption"
          },
          "deliveryMethod": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DeliveryMethod"
              }
            ]
          },
          "generationType": {
            "$ref": "#/components/schemas/DisclosureGenerationType"
          },
          "provider": {
            "$ref": "#/components/schemas/DocgenEngineType"
          }
        }
      },
      "SaveDisclosuresToLoanInput": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "packageType",
          "provider",
          "bundlingOption",
          "generationType"
        ],
        "properties": {
          "alternatePackageNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "bundlingOption": {
            "$ref": "#/components/schemas/DisclosureBundlingOption"
          },
          "deliveryMethod": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DeliveryMethod"
              }
            ]
          },
          "generationType": {
            "$ref": "#/components/schemas/DisclosureGenerationType"
          },
          "isVestaStandardPackageType": {
            "type": "boolean",
            "description": "When true PackageType should be InitialDisclosure, Redisclosure, ClosingDisclosure, or Closing regardless of docgen provider",
            "nullable": true
          },
          "packageType": {
            "type": "string"
          },
          "provider": {
            "$ref": "#/components/schemas/DocgenEngineType"
          }
        }
      },
      "SaveNoticeOfIncompletenessToLoanInput": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "itemsNeededToCompleteApplicationDescription",
          "itemsNeededToCompleteApplicationDueDate",
          "provider",
          "bundlingOption",
          "generationType"
        ],
        "properties": {
          "bundlingOption": {
            "$ref": "#/components/schemas/DisclosureBundlingOption"
          },
          "deliveryMethod": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DeliveryMethod"
              }
            ]
          },
          "generationType": {
            "$ref": "#/components/schemas/DisclosureGenerationType"
          },
          "itemsNeededToCompleteApplicationDescription": {
            "type": "string"
          },
          "itemsNeededToCompleteApplicationDueDate": {
            "type": "string",
            "format": "date-time"
          },
          "provider": {
            "$ref": "#/components/schemas/DocgenEngineType"
          }
        }
      },
      "Scenario": {
        "type": "string",
        "example": "ChangeInCircumstance",
        "x-enumNames": [
          "ChangeInCircumstance",
          "Pricing",
          "PullClosingCosts",
          "RunAus",
          "UnderwritingDecision",
          "RunPmi",
          "AppraisalUpdate",
          "UnderwritingException",
          "OrderTitle",
          "OrderPmi",
          "SubmitUCD",
          "ObjectiveCompletion",
          "UpdateIlapld"
        ],
        "enum": [
          "ChangeInCircumstance",
          "Pricing",
          "PullClosingCosts",
          "RunAus",
          "UnderwritingDecision",
          "RunPmi",
          "AppraisalUpdate",
          "UnderwritingException",
          "OrderTitle",
          "OrderPmi",
          "SubmitUCD",
          "ObjectiveCompletion",
          "UpdateIlapld"
        ]
      },
      "ScenarioStatus": {
        "type": "string",
        "example": "Unchanged",
        "x-enumNames": [
          "Unchanged",
          "Changed",
          "Reverted"
        ],
        "enum": [
          "Unchanged",
          "Changed",
          "Reverted"
        ]
      },
      "SecurityInstrumentRiderType": {
        "type": "string",
        "example": "ARM",
        "x-enumNames": [
          "ARM",
          "Balloon",
          "VA",
          "Condo",
          "PUD",
          "SecondHome",
          "OneToFourFamily",
          "BiweeklyMortgage"
        ],
        "enum": [
          "ARM",
          "Balloon",
          "VA",
          "Condo",
          "PUD",
          "SecondHome",
          "OneToFourFamily",
          "BiweeklyMortgage"
        ]
      },
      "SendAdverseActionNoticeInput": {
        "title": "SendAdverseActionNoticeInput",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "provider"
        ],
        "properties": {
          "provider": {
            "$ref": "#/components/schemas/DocgenEngineType"
          }
        }
      },
      "SendDisclosuresInput": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "packageType",
          "provider"
        ],
        "properties": {
          "alternatePackageNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isVestaStandardPackageType": {
            "type": "boolean",
            "description": "When true PackageType should be InitialDisclosure, Redisclosure, ClosingDisclosure, or Closing regardless of docgen provider",
            "nullable": true
          },
          "packageType": {
            "type": "string"
          },
          "provider": {
            "$ref": "#/components/schemas/DocgenEngineType"
          }
        }
      },
      "SendNoticeOfIncompletenessInput": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "itemsNeededToCompleteApplicationDescription",
          "itemsNeededToCompleteApplicationDueDate",
          "provider"
        ],
        "properties": {
          "itemsNeededToCompleteApplicationDescription": {
            "type": "string"
          },
          "itemsNeededToCompleteApplicationDueDate": {
            "type": "string",
            "format": "date-time"
          },
          "provider": {
            "$ref": "#/components/schemas/DocgenEngineType"
          }
        }
      },
      "ServiceProviderObligation": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "fileContactId"
        ],
        "properties": {
          "fileContactId": {
            "type": "string",
            "format": "guid"
          },
          "obligations": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ServicingTransferStatus": {
        "type": "string",
        "example": "Released",
        "x-enumNames": [
          "Released",
          "Retained"
        ],
        "enum": [
          "Released",
          "Retained"
        ]
      },
      "SettableArchiveReasonCategory": {
        "type": "string",
        "example": "Illegible",
        "x-enumNames": [
          "Illegible",
          "Incomplete",
          "WrongDocument",
          "NotAMortgageDocument",
          "Duplicate",
          "Other"
        ],
        "enum": [
          "Illegible",
          "Incomplete",
          "WrongDocument",
          "NotAMortgageDocument",
          "Duplicate",
          "Other"
        ]
      },
      "SettableDocumentStatus": {
        "type": "string",
        "example": "Uploaded",
        "x-enumNames": [
          "Uploaded",
          "Reviewed",
          "Accepted",
          "Archived"
        ],
        "enum": [
          "Uploaded",
          "Reviewed",
          "Accepted",
          "Archived"
        ]
      },
      "Signer": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "borrowerId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "nonBorrowerId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "signerType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SignerType"
              }
            ]
          }
        }
      },
      "SignerType": {
        "type": "string",
        "example": "Borrower",
        "x-enumNames": [
          "Borrower",
          "NonBorrower"
        ],
        "enum": [
          "Borrower",
          "NonBorrower"
        ]
      },
      "SigningEvent": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "isESign": {
            "type": "boolean",
            "description": "Is this e-sign?",
            "nullable": true
          },
          "location": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ]
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          },
          "signers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Signer"
            }
          },
          "signingDateTime": {
            "type": "string",
            "description": "Signing date and time",
            "format": "date-time",
            "nullable": true
          },
          "signingLanguage": {
            "description": "Signing language",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SigningLanguage"
              }
            ]
          },
          "signingType": {
            "description": "Signing type",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SigningType"
              }
            ]
          },
          "specialInstructions": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SigningStatus"
              }
            ]
          }
        }
      },
      "SigningLanguage": {
        "type": "string",
        "example": "English",
        "x-enumNames": [
          "English",
          "Spanish",
          "Chinese",
          "Korean",
          "Vietnamese"
        ],
        "enum": [
          "English",
          "Spanish",
          "Chinese",
          "Korean",
          "Vietnamese"
        ]
      },
      "SigningStatus": {
        "type": "string",
        "example": "Draft",
        "x-enumNames": [
          "Draft",
          "AwaitingResponse",
          "NeedToReschedule",
          "Scheduled",
          "Completed"
        ],
        "enum": [
          "Draft",
          "AwaitingResponse",
          "NeedToReschedule",
          "Scheduled",
          "Completed"
        ]
      },
      "SigningType": {
        "type": "string",
        "example": "Hybrid",
        "x-enumNames": [
          "Hybrid",
          "HybridWithENote",
          "iPEN",
          "RON",
          "Traditional"
        ],
        "enum": [
          "Hybrid",
          "HybridWithENote",
          "iPEN",
          "RON",
          "Traditional"
        ]
      },
      "SiteAccessDetails": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "hasPrivateAccess": {
            "type": "boolean",
            "description": "Whether or not there's private access",
            "nullable": true
          },
          "hasPublicAccess": {
            "type": "boolean",
            "description": "Whether or not there's public access",
            "nullable": true
          }
        }
      },
      "SiteUtilityAccess": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "hasOtherAccess": {
            "type": "boolean",
            "description": "Whether this utility has other access, or not",
            "nullable": true
          },
          "hasPublicAccess": {
            "type": "boolean",
            "description": "Whether this utility has public access, or not",
            "nullable": true
          },
          "otherAccessDescription": {
            "type": "string",
            "description": "Description of other access",
            "nullable": true
          }
        }
      },
      "SmartQueueIncompletableReason": {
        "type": "string",
        "example": "NeedMoreInfo",
        "x-enumNames": [
          "NeedMoreInfo",
          "DontUnderstand",
          "Other"
        ],
        "enum": [
          "NeedMoreInfo",
          "DontUnderstand",
          "Other"
        ]
      },
      "SocialSecurityBenefitType": {
        "type": "string",
        "example": "Retirement",
        "x-enumNames": [
          "Retirement",
          "Disability",
          "SurvivorBenefits",
          "SupplementSecurityIncome"
        ],
        "enum": [
          "Retirement",
          "Disability",
          "SurvivorBenefits",
          "SupplementSecurityIncome"
        ]
      },
      "SolarPanelOwnershipType": {
        "type": "string",
        "example": "FullyOwned",
        "x-enumNames": [
          "FullyOwned",
          "PACELoan",
          "SecuredLoan",
          "Leased",
          "PowerPurchaseAgreement"
        ],
        "enum": [
          "FullyOwned",
          "PACELoan",
          "SecuredLoan",
          "Leased",
          "PowerPurchaseAgreement"
        ]
      },
      "SortDirection": {
        "type": "string",
        "example": "Ascending",
        "x-enumNames": [
          "Ascending",
          "Descending"
        ],
        "enum": [
          "Ascending",
          "Descending"
        ]
      },
      "SouthCarolinaLicenseType": {
        "type": "string",
        "example": "MortgageLenderServicerLicense",
        "x-enumNames": [
          "MortgageLenderServicerLicense",
          "MortgageLenderServicerLicenseOtherTradeName1",
          "MortgageLenderServicerLicenseOtherTradeName2"
        ],
        "enum": [
          "MortgageLenderServicerLicense",
          "MortgageLenderServicerLicenseOtherTradeName1",
          "MortgageLenderServicerLicenseOtherTradeName2"
        ]
      },
      "SpecialBorrowerEmployerRelationshipType": {
        "type": "string",
        "example": "EmployedByRelative",
        "x-enumNames": [
          "EmployedByRelative",
          "PropertySeller",
          "RealEstateBroker",
          "Other"
        ],
        "enum": [
          "EmployedByRelative",
          "PropertySeller",
          "RealEstateBroker",
          "Other"
        ]
      },
      "SpecialGSEProgramType": {
        "type": "string",
        "example": "FNMAHomeStyle",
        "x-enumNames": [
          "FNMAHomeStyle",
          "FNMAHomeReady",
          "FNMAHFAPreferred",
          "FNMAHFAPreferredRiskSharing",
          "FNMAMyCommunityMortgage",
          "FNMARefiNow",
          "FNMAHighLTVRefi",
          "FMACHomePossible",
          "FMACRefiPossible",
          "FMACReliefRefinanceOpenAccess",
          "FMACReliefRefinanceSameServicer",
          "FMACGreenCHOICE",
          "FMACCommunityLandTrust",
          "FMACHFAAdvantage",
          "FNMALoanFirstTimeHomebuyer",
          "FMACBorrowSmart",
          "FMACCHOICEHome",
          "FMACCHOICERenoEXpress",
          "FMACCHOICERenoEXpressDTSArea",
          "FMACCHOICERenovation",
          "FMACCHOICERenovationMortgageWithRecourse",
          "FMACAlternativeFullInformation",
          "FMACChattelMortgage",
          "FMACConstructionConversion",
          "FMACCorrAdvantageLoan",
          "FMACDecliningBalanceCoOwnershipInitiative",
          "FMACDreaMaker",
          "FMACEnergyConservation",
          "FMACHeritageOne",
          "FMACHomeOpportunity",
          "FMACHomePossibleHomeReady",
          "FMACHomePossibleMCM",
          "FMACHomePossibleMCMCS",
          "FMACHomePossibleMortgage",
          "FMACLoansToFacilitateREOSales",
          "FMACLongTermStandBy",
          "FMACMortgageRevenueBond",
          "FMACMortgageRewardsProgram",
          "FMACMurabahaMortgage",
          "FMACOptimumMortgageProgram",
          "FMACRenovation",
          "FNMAHomeStyleEnergy",
          "FMACGreenCHOICEToPayOffOutstandingEnergyDebt",
          "FMACIncomeBasedDeedRestrictionsSurvive",
          "FMACIncomeBasedDeedRestrictionsTerminate",
          "FMACHFAPreferred",
          "Other"
        ],
        "enum": [
          "FNMAHomeStyle",
          "FNMAHomeReady",
          "FNMAHFAPreferred",
          "FNMAHFAPreferredRiskSharing",
          "FNMAMyCommunityMortgage",
          "FNMARefiNow",
          "FNMAHighLTVRefi",
          "FMACHomePossible",
          "FMACRefiPossible",
          "FMACReliefRefinanceOpenAccess",
          "FMACReliefRefinanceSameServicer",
          "FMACGreenCHOICE",
          "FMACCommunityLandTrust",
          "FMACHFAAdvantage",
          "FNMALoanFirstTimeHomebuyer",
          "FMACBorrowSmart",
          "FMACCHOICEHome",
          "FMACCHOICERenoEXpress",
          "FMACCHOICERenoEXpressDTSArea",
          "FMACCHOICERenovation",
          "FMACCHOICERenovationMortgageWithRecourse",
          "FMACAlternativeFullInformation",
          "FMACChattelMortgage",
          "FMACConstructionConversion",
          "FMACCorrAdvantageLoan",
          "FMACDecliningBalanceCoOwnershipInitiative",
          "FMACDreaMaker",
          "FMACEnergyConservation",
          "FMACHeritageOne",
          "FMACHomeOpportunity",
          "FMACHomePossibleHomeReady",
          "FMACHomePossibleMCM",
          "FMACHomePossibleMCMCS",
          "FMACHomePossibleMortgage",
          "FMACLoansToFacilitateREOSales",
          "FMACLongTermStandBy",
          "FMACMortgageRevenueBond",
          "FMACMortgageRewardsProgram",
          "FMACMurabahaMortgage",
          "FMACOptimumMortgageProgram",
          "FMACRenovation",
          "FNMAHomeStyleEnergy",
          "FMACGreenCHOICEToPayOffOutstandingEnergyDebt",
          "FMACIncomeBasedDeedRestrictionsSurvive",
          "FMACIncomeBasedDeedRestrictionsTerminate",
          "FMACHFAPreferred",
          "Other"
        ]
      },
      "SpecialProgramType": {
        "type": "string",
        "example": "HawaiianHomelands",
        "x-enumNames": [
          "HawaiianHomelands",
          "eLocationWaiver",
          "NativeAmericanLands"
        ],
        "enum": [
          "HawaiianHomelands",
          "eLocationWaiver",
          "NativeAmericanLands"
        ]
      },
      "StateCode": {
        "type": "string",
        "example": "AL",
        "x-enumNames": [
          "AL",
          "AK",
          "AZ",
          "AR",
          "CA",
          "CO",
          "CT",
          "DE",
          "DC",
          "FL",
          "GA",
          "HI",
          "ID",
          "IL",
          "IN",
          "IA",
          "KS",
          "KY",
          "LA",
          "ME",
          "MD",
          "MA",
          "MI",
          "MN",
          "MS",
          "MO",
          "MT",
          "NE",
          "NV",
          "NH",
          "NJ",
          "NM",
          "NY",
          "NC",
          "ND",
          "OH",
          "OK",
          "OR",
          "PA",
          "PR",
          "RI",
          "SC",
          "SD",
          "TN",
          "TX",
          "UT",
          "VT",
          "VA",
          "WA",
          "WV",
          "WI",
          "WY",
          "AS",
          "GU",
          "MP",
          "VI",
          "AA",
          "AE",
          "AP"
        ],
        "enum": [
          "AL",
          "AK",
          "AZ",
          "AR",
          "CA",
          "CO",
          "CT",
          "DE",
          "DC",
          "FL",
          "GA",
          "HI",
          "ID",
          "IL",
          "IN",
          "IA",
          "KS",
          "KY",
          "LA",
          "ME",
          "MD",
          "MA",
          "MI",
          "MN",
          "MS",
          "MO",
          "MT",
          "NE",
          "NV",
          "NH",
          "NJ",
          "NM",
          "NY",
          "NC",
          "ND",
          "OH",
          "OK",
          "OR",
          "PA",
          "PR",
          "RI",
          "SC",
          "SD",
          "TN",
          "TX",
          "UT",
          "VT",
          "VA",
          "WA",
          "WV",
          "WI",
          "WY",
          "AS",
          "GU",
          "MP",
          "VI",
          "AA",
          "AE",
          "AP"
        ]
      },
      "StateLicenseStatus": {
        "type": "string",
        "example": "Registered",
        "x-enumNames": [
          "Registered",
          "Temporary",
          "PendingRenewal"
        ],
        "enum": [
          "Registered",
          "Temporary",
          "PendingRenewal"
        ]
      },
      "StateLicensingInfo": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "exempt": {
            "type": "boolean",
            "nullable": true
          },
          "licenseExpirationDate": {
            "type": "string",
            "description": "License expiration date",
            "format": "date",
            "nullable": true
          },
          "licenseNumber": {
            "type": "string",
            "description": "License number",
            "nullable": true
          },
          "licenseStatus": {
            "description": "License status",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/StateLicenseStatus"
              }
            ]
          },
          "state": {
            "type": "string",
            "description": "State",
            "nullable": true
          },
          "stateCode": {
            "description": "State code",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/StateCode"
              }
            ]
          }
        }
      },
      "StateLicensingInfoFull": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "californiaLicenseType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CaliforniaLicenseType"
              }
            ]
          },
          "coloradoLicenseType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColoradoLicenseType"
              }
            ]
          },
          "connecticutLicenseType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConnecticutLicenseType"
              }
            ]
          },
          "districtOfColumbiaLicenseType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DistrictOfColumbiaLicenseType"
              }
            ]
          },
          "exempt": {
            "type": "boolean",
            "nullable": true
          },
          "georgiaLicenseType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/GeorgiaLicenseType"
              }
            ]
          },
          "hawaiiLicenseType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/HawaiiLicenseType"
              }
            ]
          },
          "idahoLicenseType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IdahoLicenseType"
              }
            ]
          },
          "indianaLicenseType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IndianaLicenseType"
              }
            ]
          },
          "iowaLicenseType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IowaLicenseType"
              }
            ]
          },
          "kentuckyLicenseType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/KentuckyLicenseType"
              }
            ]
          },
          "licenseExpirationDate": {
            "type": "string",
            "description": "License expiration date",
            "format": "date",
            "nullable": true
          },
          "licenseNumber": {
            "type": "string",
            "description": "License number",
            "nullable": true
          },
          "licenseStatus": {
            "description": "License status",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/StateLicenseStatus"
              }
            ]
          },
          "maineLicenseType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MaineLicenseType"
              }
            ]
          },
          "massachusettsLicenseType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MassachusettsLicenseType"
              }
            ]
          },
          "michiganLicenseType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MichiganLicenseType"
              }
            ]
          },
          "minnesotaLicenseType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MinnesotaLicenseType"
              }
            ]
          },
          "montanaLicenseType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MontanaLicenseType"
              }
            ]
          },
          "nevadaLicenseType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/NevadaLicenseType"
              }
            ]
          },
          "newJerseyLicenseType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/NewJerseyLicenseType"
              }
            ]
          },
          "newMexicoLicenseType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/NewMexicoLicenseType"
              }
            ]
          },
          "newYorkLicenseType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/NewYorkLicenseType"
              }
            ]
          },
          "northDakotaLicenseType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/NorthDakotaLicenseType"
              }
            ]
          },
          "oklahomaLicenseType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/OklahomaLicenseType"
              }
            ]
          },
          "oregonLicenseType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/OregonLicenseType"
              }
            ]
          },
          "pennsylvaniaLicenseType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PennsylvaniaLicenseType"
              }
            ]
          },
          "rhodeIslandLicenseType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/RhodeIslandLicenseType"
              }
            ]
          },
          "southCarolinaLicenseType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SouthCarolinaLicenseType"
              }
            ]
          },
          "state": {
            "type": "string",
            "description": "State",
            "nullable": true
          },
          "stateCode": {
            "description": "State code",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/StateCode"
              }
            ]
          },
          "tennesseeLicenseType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TennesseeLicenseType"
              }
            ]
          },
          "texasLicenseType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TexasLicenseType"
              }
            ]
          },
          "utahLicenseType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/UtahLicenseType"
              }
            ]
          },
          "vermontLicenseType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VermontLicenseType"
              }
            ]
          },
          "virginiaLicenseType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VirginiaLicenseType"
              }
            ]
          },
          "washingtonLicenseType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/WashingtonLicenseType"
              }
            ]
          },
          "westVirginiaLicenseType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/WestVirginiaLicenseType"
              }
            ]
          },
          "wisconsinLicenseType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/WisconsinLicenseType"
              }
            ]
          }
        }
      },
      "SubmitObjectiveTaskRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "formInputValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormInputValue"
            }
          }
        }
      },
      "SubmitObjectiveTaskResponse": {
        "type": "object",
        "additionalProperties": false
      },
      "SubmittingPartyType": {
        "type": "string",
        "example": "Lender",
        "x-enumNames": [
          "Lender",
          "Broker"
        ],
        "enum": [
          "Lender",
          "Broker"
        ]
      },
      "SubordinateFinancingType": {
        "type": "string",
        "example": "EmployerSubordinateFinancing",
        "x-enumNames": [
          "EmployerSubordinateFinancing",
          "CommunitySecondsLoan"
        ],
        "enum": [
          "EmployerSubordinateFinancing",
          "CommunitySecondsLoan"
        ]
      },
      "SuccessWithWarningsResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "warnings": {
            "type": "array",
            "readOnly": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SupplementaryInsuranceDetails": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "details": {
            "description": "All of the information pertaining to the supplementary insurance policy on this property",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/InsuranceDetails"
              }
            ]
          },
          "supplementaryInsuranceType": {
            "description": "The type of supplemental insurance policy",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SupplementaryInsuranceType"
              }
            ]
          }
        }
      },
      "SupplementaryInsuranceType": {
        "type": "string",
        "example": "Volcano",
        "x-enumNames": [
          "Volcano",
          "Earthquake",
          "Hurricane",
          "Fire",
          "WindAndHail"
        ],
        "enum": [
          "Volcano",
          "Earthquake",
          "Hurricane",
          "Fire",
          "WindAndHail"
        ]
      },
      "Task": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "assignedAt": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "assigneeId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "cancelledAt": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "completedAt": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "completingDocumentIds": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "type": "string",
              "format": "guid"
            }
          },
          "createdAt": {
            "type": "string",
            "readOnly": true,
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "documentRequiredCondition": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/DocumentRequiredCondition"
              }
            }
          },
          "dueDate": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "entityId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "entityType": {
            "readOnly": true,
            "$ref": "#/components/schemas/OntologyEntityType"
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "inputRequiredConditions": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/InputRequiredCondition"
              }
            }
          },
          "isManual": {
            "type": "boolean",
            "readOnly": true,
            "nullable": true
          },
          "isSmartQueueTask": {
            "type": "boolean",
            "readOnly": true
          },
          "lastOpenedDate": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "nameOverride": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "notes": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Note"
            }
          },
          "priority": {
            "type": "integer",
            "readOnly": true,
            "format": "int32",
            "nullable": true
          },
          "processingDocumentId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "processingDocumentTypeExternalIdentifier": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DocumentType"
              }
            ]
          },
          "processingDocumentTypeId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "requiresBorrowerAction": {
            "type": "boolean",
            "readOnly": true
          },
          "smartQueueIncompletableNote": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "smartQueueIncompletableReason": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SmartQueueIncompletableReason"
              }
            ]
          },
          "snoozedUntil": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "readOnly": true,
            "$ref": "#/components/schemas/TaskStatus"
          },
          "taskCancellations": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/TaskCancellation"
            }
          },
          "taskDisplayName": {
            "type": "string",
            "readOnly": true
          },
          "taskDisplaySummary": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "taskTemplateDetails": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "taskTemplateExternalIdentifier": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "taskTemplateId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "taskTemplateName": {
            "type": "string",
            "readOnly": true
          },
          "taskTemplateSummary": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/TaskType"
          }
        }
      },
      "TaskAssignedWebhook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "assigneeId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "entityId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "entityType": {
            "type": "string",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "loanChannel": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanChannel"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "requiresBorrowerAction": {
            "type": "boolean",
            "readOnly": true
          },
          "retries": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "sourceType": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSourceType"
          },
          "status": {
            "readOnly": true,
            "$ref": "#/components/schemas/TaskStatus"
          },
          "taskId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "taskName": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "taskTemplateId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "taskTemplateName": {
            "type": "string",
            "readOnly": true
          },
          "taskType": {
            "readOnly": true,
            "$ref": "#/components/schemas/TaskType"
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSubscriptionType"
          },
          "userId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "version": {
            "readOnly": true,
            "$ref": "#/components/schemas/ApiVersion"
          }
        }
      },
      "TaskCancellation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "cancelReason": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CancelReason"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "readOnly": true,
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "note": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Note"
              }
            ]
          }
        }
      },
      "TaskDueDateChangedWebhook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "dueDate": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "entityId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "entityType": {
            "type": "string",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "loanChannel": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanChannel"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "requiresBorrowerAction": {
            "type": "boolean",
            "readOnly": true
          },
          "retries": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "sourceType": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSourceType"
          },
          "status": {
            "readOnly": true,
            "$ref": "#/components/schemas/TaskStatus"
          },
          "taskId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "taskName": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "taskTemplateId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "taskTemplateName": {
            "type": "string",
            "readOnly": true
          },
          "taskType": {
            "readOnly": true,
            "$ref": "#/components/schemas/TaskType"
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSubscriptionType"
          },
          "userId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "version": {
            "readOnly": true,
            "$ref": "#/components/schemas/ApiVersion"
          }
        }
      },
      "TaskNoteAddedWebhook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "entityId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "entityType": {
            "type": "string",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "loanChannel": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanChannel"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "noteType": {
            "readOnly": true,
            "$ref": "#/components/schemas/NoteType"
          },
          "retries": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "sourceType": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSourceType"
          },
          "taskId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSubscriptionType"
          },
          "userId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "version": {
            "readOnly": true,
            "$ref": "#/components/schemas/ApiVersion"
          }
        }
      },
      "TaskSnoozedWebhook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "entityId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "entityType": {
            "type": "string",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "loanChannel": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanChannel"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "requiresBorrowerAction": {
            "type": "boolean",
            "readOnly": true
          },
          "retries": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "snoozedUntil": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "sourceType": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSourceType"
          },
          "status": {
            "readOnly": true,
            "$ref": "#/components/schemas/TaskStatus"
          },
          "taskId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "taskName": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "taskTemplateId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "taskTemplateName": {
            "type": "string",
            "readOnly": true
          },
          "taskType": {
            "readOnly": true,
            "$ref": "#/components/schemas/TaskType"
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSubscriptionType"
          },
          "userId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "version": {
            "readOnly": true,
            "$ref": "#/components/schemas/ApiVersion"
          }
        }
      },
      "TaskStatus": {
        "type": "string",
        "example": "NotStarted",
        "x-enumNames": [
          "NotStarted",
          "InProgress",
          "Completed",
          "AutomaticallyCancelled",
          "ManuallyCancelled"
        ],
        "enum": [
          "NotStarted",
          "InProgress",
          "Completed",
          "AutomaticallyCancelled",
          "ManuallyCancelled"
        ]
      },
      "TaskType": {
        "type": "string",
        "example": "DocumentProcessing",
        "x-enumNames": [
          "DocumentProcessing",
          "DocumentRequired",
          "InputRequired",
          "DataVerification",
          "ServiceOrder",
          "SimpleInstructions",
          "IncomeReview",
          "ScenarioChange",
          "DocumentDiscrepancies"
        ],
        "enum": [
          "DocumentProcessing",
          "DocumentRequired",
          "InputRequired",
          "DataVerification",
          "ServiceOrder",
          "SimpleInstructions",
          "IncomeReview",
          "ScenarioChange",
          "DocumentDiscrepancies"
        ]
      },
      "TaskWebhook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "entityId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "entityType": {
            "type": "string",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "loanChannel": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoanChannel"
              }
            ]
          },
          "loanId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "requiresBorrowerAction": {
            "type": "boolean",
            "readOnly": true
          },
          "retries": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "sourceType": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSourceType"
          },
          "status": {
            "readOnly": true,
            "$ref": "#/components/schemas/TaskStatus"
          },
          "taskId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "taskName": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "taskTemplateId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "taskTemplateName": {
            "type": "string",
            "readOnly": true
          },
          "taskType": {
            "readOnly": true,
            "$ref": "#/components/schemas/TaskType"
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookSubscriptionType"
          },
          "userId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "version": {
            "readOnly": true,
            "$ref": "#/components/schemas/ApiVersion"
          }
        }
      },
      "TaxIdentifierType": {
        "type": "string",
        "example": "SocialSecurityNumber",
        "x-enumNames": [
          "SocialSecurityNumber",
          "IndividualTaxpayerIdentificationNumber"
        ],
        "enum": [
          "SocialSecurityNumber",
          "IndividualTaxpayerIdentificationNumber"
        ]
      },
      "TaxReturnDocumentCode": {
        "type": "string",
        "example": "_1040",
        "x-enumNames": [
          "_1040",
          "_1065",
          "_1120",
          "W2",
          "_1098",
          "_1099",
          "_5498",
          "_1120S"
        ],
        "enum": [
          "_1040",
          "_1065",
          "_1120",
          "W2",
          "_1098",
          "_1099",
          "_5498",
          "_1120S"
        ]
      },
      "TelephoneNumber": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "number": {
            "type": "string",
            "description": "Phone number",
            "nullable": true
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          },
          "type": {
            "description": "Phone type",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhoneNumberType"
              }
            ]
          }
        }
      },
      "TennesseeLicenseType": {
        "type": "string",
        "example": "IndustrialLoanAndThriftCompanyRegistration",
        "x-enumNames": [
          "IndustrialLoanAndThriftCompanyRegistration",
          "MortgageLicense"
        ],
        "enum": [
          "IndustrialLoanAndThriftCompanyRegistration",
          "MortgageLicense"
        ]
      },
      "TexasLicenseType": {
        "type": "string",
        "example": "SMLMortgageBankerRegistration",
        "x-enumNames": [
          "SMLMortgageBankerRegistration",
          "SMLMortgageCompanyLicense",
          "RegulatedLenderLicense"
        ],
        "enum": [
          "SMLMortgageBankerRegistration",
          "SMLMortgageCompanyLicense",
          "RegulatedLenderLicense"
        ]
      },
      "TexasRefinanceType": {
        "type": "string",
        "example": "Section50A4",
        "x-enumNames": [
          "Section50A4",
          "Section50A6",
          "Other"
        ],
        "enum": [
          "Section50A4",
          "Section50A6",
          "Other"
        ]
      },
      "TitleEndorsementType": {
        "type": "string",
        "example": "LTAA3RAnd5",
        "x-enumNames": [
          "LTAA3RAnd5",
          "ARM",
          "NegativeAmortization",
          "Condo",
          "PUD",
          "Environmental",
          "Location",
          "Comprehensive",
          "Other"
        ],
        "enum": [
          "LTAA3RAnd5",
          "ARM",
          "NegativeAmortization",
          "Condo",
          "PUD",
          "Environmental",
          "Location",
          "Comprehensive",
          "Other"
        ]
      },
      "TitleHeldManner": {
        "type": "string",
        "example": "SoleOwnership",
        "x-enumNames": [
          "SoleOwnership",
          "LifeEstate",
          "TenancyInCommon",
          "JointTenancyWithRightOfSurvivorship",
          "TenancyByTheEntirety",
          "Other"
        ],
        "enum": [
          "SoleOwnership",
          "LifeEstate",
          "TenancyInCommon",
          "JointTenancyWithRightOfSurvivorship",
          "TenancyByTheEntirety",
          "Other"
        ]
      },
      "TitleInsuranceStatus": {
        "type": "string",
        "example": "Placed",
        "x-enumNames": [
          "Placed",
          "EmailOrderPlaced",
          "Canceled",
          "Rejected",
          "CommitmentReceived",
          "ClearedToClose",
          "Complete",
          "Accepted",
          "WireSent",
          "WireReceived",
          "ApprovedToFund",
          "PackageAuditPassed",
          "PackageAuditFailed",
          "InitialDisbursementCompleted",
          "FinalDisbursementCompleted",
          "DocumentsShipped"
        ],
        "enum": [
          "Placed",
          "EmailOrderPlaced",
          "Canceled",
          "Rejected",
          "CommitmentReceived",
          "ClearedToClose",
          "Complete",
          "Accepted",
          "WireSent",
          "WireReceived",
          "ApprovedToFund",
          "PackageAuditPassed",
          "PackageAuditFailed",
          "InitialDisbursementCompleted",
          "FinalDisbursementCompleted",
          "DocumentsShipped"
        ]
      },
      "TitleLienOrderStatus": {
        "type": "string",
        "example": "Ordered",
        "x-enumNames": [
          "Ordered",
          "Received"
        ],
        "enum": [
          "Ordered",
          "Received"
        ]
      },
      "TitleProvider": {
        "type": "string",
        "example": "Qualia",
        "x-enumNames": [
          "Qualia",
          "Email",
          "CCOM"
        ],
        "enum": [
          "Qualia",
          "Email",
          "CCOM"
        ]
      },
      "ToleranceCureBucket": {
        "type": "string",
        "example": "ZeroPercent",
        "x-enumNames": [
          "ZeroPercent",
          "TenPercent",
          "NoToleranceCure"
        ],
        "enum": [
          "ZeroPercent",
          "TenPercent",
          "NoToleranceCure"
        ]
      },
      "TrustOwnerType": {
        "type": "string",
        "example": "LivingTrust",
        "x-enumNames": [
          "LivingTrust",
          "LandTrust",
          "CommunityLandTrust",
          "IllinoisLandTrust",
          "NativeAmericanLandTrust",
          "LLC",
          "Partnership"
        ],
        "enum": [
          "LivingTrust",
          "LandTrust",
          "CommunityLandTrust",
          "IllinoisLandTrust",
          "NativeAmericanLandTrust",
          "LLC",
          "Partnership"
        ]
      },
      "UnderwriterDecisionInput": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "decision"
        ],
        "properties": {
          "approvalExpirationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "decision": {
            "$ref": "#/components/schemas/LoanDecision"
          },
          "denyReasons": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LoanDenyReason"
            }
          },
          "otherDenyReason": {
            "type": "string",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "reviewerUserId": {
            "type": "string",
            "description": "The user ID of the user who is reviewing the loan. If not provided, an internal user will be used.",
            "format": "guid",
            "nullable": true
          }
        }
      },
      "UnderwritingEngine": {
        "type": "string",
        "example": "FreddieMacLoanProductAdvisor",
        "x-enumNames": [
          "FreddieMacLoanProductAdvisor",
          "FannieMaeDesktopUnderwriter",
          "FannieMaeDesktopOriginator"
        ],
        "enum": [
          "FreddieMacLoanProductAdvisor",
          "FannieMaeDesktopUnderwriter",
          "FannieMaeDesktopOriginator"
        ]
      },
      "UnderwritingException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "category": {
            "type": "string"
          },
          "computedFields": {
            "type": "object",
            "x-ms-dynamic-schema": {
              "operationId": "GetDynamicSchema",
              "parameters": {
                "entityType": "UnderwritingException",
                "fieldType": "ComputedField",
                "processVersionId": {
                  "parameterResponseReference": "processVersionId"
                }
              }
            },
            "readOnly": true,
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "customFields": {
            "type": "object",
            "x-ms-dynamic-schema": {
              "operationId": "GetDynamicSchema",
              "parameters": {
                "entityType": "UnderwritingException",
                "fieldType": "CustomField",
                "processVersionId": {
                  "parameterResponseReference": "processVersionId"
                }
              }
            },
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "decidedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "decidedByUserId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "decision": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExceptionConditionDecision"
              }
            ]
          },
          "decisionReason": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "facts": {
            "type": "object",
            "x-ms-dynamic-schema": {
              "operationId": "GetDynamicSchema",
              "parameters": {
                "entityType": "UnderwritingException",
                "fieldType": "Fact",
                "processVersionId": {
                  "parameterResponseReference": "processVersionId"
                }
              }
            },
            "readOnly": true,
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          },
          "requestedAt": {
            "type": "string",
            "format": "date-time"
          },
          "requestReason": {
            "type": "string"
          }
        }
      },
      "UpdateConditionStatusInput": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "status"
        ],
        "properties": {
          "status": {
            "$ref": "#/components/schemas/ConditionStatus"
          }
        }
      },
      "UpdateDocumentStatusInput": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "status"
        ],
        "properties": {
          "archiveReasonCategory": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SettableArchiveReasonCategory"
              }
            ]
          },
          "archiveReasonNotes": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/SettableDocumentStatus"
          }
        }
      },
      "USDARefinanceType": {
        "type": "string",
        "example": "NonStreamlined",
        "x-enumNames": [
          "NonStreamlined",
          "Streamlined",
          "StreamlinedAssist"
        ],
        "enum": [
          "NonStreamlined",
          "Streamlined",
          "StreamlinedAssist"
        ]
      },
      "UseOfProceeds": {
        "type": "string",
        "example": "AssetAcquisition",
        "x-enumNames": [
          "AssetAcquisition",
          "CapitalizedInterestTaxesInsuranceOrFees",
          "Cash",
          "Convenience",
          "DebtConsolidation",
          "Education",
          "EquityBuyout",
          "HomeImprovement",
          "InterestRateReduction",
          "Medical",
          "MortgageTermReduction",
          "Other",
          "PayoffLeaseholdInterest",
          "PrimaryLienPayoff",
          "SecondaryLienPayoff",
          "SpecialPurpose",
          "UnsecuredLienPayoff",
          "Unspecified"
        ],
        "enum": [
          "AssetAcquisition",
          "CapitalizedInterestTaxesInsuranceOrFees",
          "Cash",
          "Convenience",
          "DebtConsolidation",
          "Education",
          "EquityBuyout",
          "HomeImprovement",
          "InterestRateReduction",
          "Medical",
          "MortgageTermReduction",
          "Other",
          "PayoffLeaseholdInterest",
          "PrimaryLienPayoff",
          "SecondaryLienPayoff",
          "SpecialPurpose",
          "UnsecuredLienPayoff",
          "Unspecified"
        ]
      },
      "User": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string",
            "readOnly": true
          },
          "fullName": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "isBranchManager": {
            "type": "boolean",
            "readOnly": true,
            "nullable": true
          },
          "licensedIndicator": {
            "type": "boolean",
            "readOnly": true,
            "nullable": true
          },
          "nmlsId": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "organizationBranchId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "organizationBranchName": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "roles": {
            "type": "array",
            "readOnly": true,
            "items": {
              "type": "string"
            }
          },
          "stateLicensingInfos": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/StateLicensingInfo"
            }
          },
          "userStatus": {
            "readOnly": true,
            "$ref": "#/components/schemas/UserStatus"
          }
        }
      },
      "UserSelectedObjectiveBlockedForTimeType": {
        "type": "string",
        "example": "TwentyFourHours",
        "x-enumNames": [
          "TwentyFourHours",
          "Custom",
          "SetByUser"
        ],
        "enum": [
          "TwentyFourHours",
          "Custom",
          "SetByUser"
        ]
      },
      "UserStatus": {
        "type": "string",
        "example": "Active",
        "x-enumNames": [
          "Active",
          "Deactivated",
          "AwaitingActivation"
        ],
        "enum": [
          "Active",
          "Deactivated",
          "AwaitingActivation"
        ]
      },
      "UserWithPipelineViews": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string",
            "readOnly": true
          },
          "fullName": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "isBranchManager": {
            "type": "boolean",
            "readOnly": true,
            "nullable": true
          },
          "licensedIndicator": {
            "type": "boolean",
            "readOnly": true,
            "nullable": true
          },
          "nmlsId": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "organizationBranchId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "organizationBranchName": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "pipelineViews": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/PipelineView"
            }
          },
          "roles": {
            "type": "array",
            "readOnly": true,
            "items": {
              "type": "string"
            }
          },
          "stateLicensingInfos": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/StateLicensingInfo"
            }
          },
          "userStatus": {
            "readOnly": true,
            "$ref": "#/components/schemas/UserStatus"
          }
        }
      },
      "UtahLicenseType": {
        "type": "string",
        "example": "MortgageEntityLicense",
        "x-enumNames": [
          "MortgageEntityLicense",
          "MortgageEntityLicenseOtherTradeName1",
          "MortgageEntityLicenseOtherTradeName2",
          "MortgageEntityLicenseOtherTradeName3",
          "ResidentialFirstMortgageNotification"
        ],
        "enum": [
          "MortgageEntityLicense",
          "MortgageEntityLicenseOtherTradeName1",
          "MortgageEntityLicenseOtherTradeName2",
          "MortgageEntityLicenseOtherTradeName3",
          "ResidentialFirstMortgageNotification"
        ]
      },
      "VAAppraisalType": {
        "type": "string",
        "example": "HUDConversion",
        "x-enumNames": [
          "HUDConversion",
          "LenderAppraisal",
          "ManufacturedHome",
          "MasterCertificateOfReasonableValue",
          "Other",
          "PropertyManagement",
          "SingleProperty"
        ],
        "enum": [
          "HUDConversion",
          "LenderAppraisal",
          "ManufacturedHome",
          "MasterCertificateOfReasonableValue",
          "Other",
          "PropertyManagement",
          "SingleProperty"
        ]
      },
      "VABenefitType": {
        "type": "string",
        "example": "VeteransCompensation",
        "x-enumNames": [
          "VeteransCompensation",
          "VeteransPension",
          "SurvivorBenefits",
          "RehabilitationAssistance"
        ],
        "enum": [
          "VeteransCompensation",
          "VeteransPension",
          "SurvivorBenefits",
          "RehabilitationAssistance"
        ]
      },
      "VALoanType": {
        "type": "string",
        "example": "NativeAmericanDirectLoan",
        "x-enumNames": [
          "NativeAmericanDirectLoan",
          "VAInterestRateReductionRefinanceLoan"
        ],
        "enum": [
          "NativeAmericanDirectLoan",
          "VAInterestRateReductionRefinanceLoan"
        ]
      },
      "ValuationMethod": {
        "type": "string",
        "example": "FullAppraisal",
        "x-enumNames": [
          "FullAppraisal",
          "PriorAppraisalUsed",
          "DesktopAppraisal",
          "AutomatedValuationModel",
          "BrokerPriceOpinion",
          "DriveBy",
          "TaxValuation",
          "Other",
          "None",
          "DeskReview",
          "FieldReview",
          "HybridAppraisal"
        ],
        "enum": [
          "FullAppraisal",
          "PriorAppraisalUsed",
          "DesktopAppraisal",
          "AutomatedValuationModel",
          "BrokerPriceOpinion",
          "DriveBy",
          "TaxValuation",
          "Other",
          "None",
          "DeskReview",
          "FieldReview",
          "HybridAppraisal"
        ]
      },
      "VAPropertyDesignation": {
        "type": "string",
        "example": "ExistingOrUsedHome",
        "x-enumNames": [
          "ExistingOrUsedHome",
          "AppraisedAsProposedConstruction",
          "NeverOccupied",
          "EnergyImprovements"
        ],
        "enum": [
          "ExistingOrUsedHome",
          "AppraisedAsProposedConstruction",
          "NeverOccupied",
          "EnergyImprovements"
        ]
      },
      "VARefinanceType": {
        "type": "string",
        "example": "CashOut",
        "x-enumNames": [
          "CashOut",
          "InterestRateReductionRefinanceLoan"
        ],
        "enum": [
          "CashOut",
          "InterestRateReductionRefinanceLoan"
        ]
      },
      "VASectionOfActType": {
        "type": "string",
        "example": "_3710",
        "x-enumNames": [
          "_3710"
        ],
        "enum": [
          "_3710"
        ]
      },
      "VerbalVerificationPhoneNumberSource": {
        "type": "string",
        "example": "Internet",
        "x-enumNames": [
          "Internet",
          "PhoneBook",
          "InternalDatabase"
        ],
        "enum": [
          "Internet",
          "PhoneBook",
          "InternalDatabase"
        ]
      },
      "Verification": {
        "title": "Verification",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "associatedPropertyId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "existenceBorrowerBusinessId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "incomeId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "liquidityBorrowerBusinessId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "reverificationStatus": {
            "readOnly": true,
            "description": "Latest reverification status",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VerificationStatus"
              }
            ]
          },
          "reverifiedDateTime": {
            "type": "string",
            "readOnly": true,
            "description": "Last reverified at",
            "format": "date-time",
            "nullable": true
          },
          "reverifiedDocumentId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "reverifiedReportId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "sourceReverifiedIdentifier": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "sourceVerifiedIdentifier": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "type": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VerificationType"
              }
            ]
          },
          "verificationSource": {
            "readOnly": true,
            "description": "Verification provider",
            "$ref": "#/components/schemas/VerificationSource"
          },
          "verificationStatus": {
            "readOnly": true,
            "description": "Verification status",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VerificationStatus"
              }
            ]
          },
          "verifiedDateTime": {
            "type": "string",
            "readOnly": true,
            "description": "Completed datetime",
            "format": "date-time",
            "nullable": true
          },
          "verifiedDocumentId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          },
          "verifiedReportId": {
            "type": "string",
            "readOnly": true,
            "format": "guid",
            "nullable": true
          }
        }
      },
      "VerificationEmployerStatus": {
        "type": "string",
        "example": "Active",
        "x-enumNames": [
          "Active",
          "Inactive"
        ],
        "enum": [
          "Active",
          "Inactive"
        ]
      },
      "VerificationProvider": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "$action": {
            "writeOnly": true,
            "description": "Only used for adding and removing items from a collection",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CollectionAction"
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "ref": {
            "type": "string",
            "writeOnly": true,
            "nullable": true
          },
          "reportIdentifier": {
            "type": "string",
            "description": "Verification report identifier",
            "nullable": true
          },
          "reportProvider": {
            "description": "Verification report provider",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VerificationReportProvider"
              }
            ]
          }
        }
      },
      "VerificationReportProvider": {
        "type": "string",
        "example": "Blend",
        "x-enumNames": [
          "Blend",
          "BlendIncome",
          "Finicity",
          "EquifaxTWN",
          "DataVerify",
          "CoreLogic",
          "FormFree",
          "LoanBeam",
          "PointServ",
          "LoanCraft",
          "AdvancedData",
          "Avantus",
          "Chronos",
          "CreditInterlink",
          "FinLocker",
          "MeridianLink",
          "NCS",
          "Plaid",
          "PrivateEyes",
          "SharperLending",
          "Truework",
          "Universal",
          "VeriTax",
          "FinicityIncome",
          "ExperianVerify",
          "FreddieMac",
          "Halcyon",
          "Truv",
          "InformativeResearch",
          "Argyle"
        ],
        "enum": [
          "Blend",
          "BlendIncome",
          "Finicity",
          "EquifaxTWN",
          "DataVerify",
          "CoreLogic",
          "FormFree",
          "LoanBeam",
          "PointServ",
          "LoanCraft",
          "AdvancedData",
          "Avantus",
          "Chronos",
          "CreditInterlink",
          "FinLocker",
          "MeridianLink",
          "NCS",
          "Plaid",
          "PrivateEyes",
          "SharperLending",
          "Truework",
          "Universal",
          "VeriTax",
          "FinicityIncome",
          "ExperianVerify",
          "FreddieMac",
          "Halcyon",
          "Truv",
          "InformativeResearch",
          "Argyle"
        ]
      },
      "VerificationSource": {
        "type": "string",
        "example": "Truework",
        "x-enumNames": [
          "Truework",
          "TheWorkNumber",
          "MeridianLink",
          "Xactus",
          "Truv",
          "LendersOne"
        ],
        "enum": [
          "Truework",
          "TheWorkNumber",
          "MeridianLink",
          "Xactus",
          "Truv",
          "LendersOne"
        ]
      },
      "VerificationStatus": {
        "type": "string",
        "example": "Unknown",
        "x-enumNames": [
          "Unknown",
          "Pending",
          "FailedToVerify",
          "Completed",
          "Cancelled"
        ],
        "enum": [
          "Unknown",
          "Pending",
          "FailedToVerify",
          "Completed",
          "Cancelled"
        ]
      },
      "VerificationType": {
        "type": "string",
        "example": "Document",
        "x-enumNames": [
          "Document",
          "ThirdParty"
        ],
        "enum": [
          "Document",
          "ThirdParty"
        ]
      },
      "VermontLicenseType": {
        "type": "string",
        "example": "MortgageBrokerLicense",
        "x-enumNames": [
          "MortgageBrokerLicense",
          "MortgageBrokerLicenseOtherTradeName1",
          "MortgageBrokerLicenseOtherTradeName2",
          "MortgageBrokerLicenseOtherTradeName3",
          "MortgageBrokerSoleProprietorshipLicense",
          "LenderLicense",
          "LenderLicenseOtherTradeName1",
          "LenderLicenseOtherTradeName2",
          "LenderLicenseOtherTradeName3"
        ],
        "enum": [
          "MortgageBrokerLicense",
          "MortgageBrokerLicenseOtherTradeName1",
          "MortgageBrokerLicenseOtherTradeName2",
          "MortgageBrokerLicenseOtherTradeName3",
          "MortgageBrokerSoleProprietorshipLicense",
          "LenderLicense",
          "LenderLicenseOtherTradeName1",
          "LenderLicenseOtherTradeName2",
          "LenderLicenseOtherTradeName3"
        ]
      },
      "VirginiaLicenseType": {
        "type": "string",
        "example": "LenderLicense",
        "x-enumNames": [
          "LenderLicense",
          "BrokerLicense"
        ],
        "enum": [
          "LenderLicense",
          "BrokerLicense"
        ]
      },
      "WashingtonLicenseType": {
        "type": "string",
        "example": "MortgageBrokerLicense",
        "x-enumNames": [
          "MortgageBrokerLicense",
          "ConsumerLoanCompanyLicense"
        ],
        "enum": [
          "MortgageBrokerLicense",
          "ConsumerLoanCompanyLicense"
        ]
      },
      "WebhookDocumentEntity": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "entityId": {
            "type": "string",
            "readOnly": true,
            "format": "guid"
          },
          "entityType": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "WebhookSourceType": {
        "type": "string",
        "example": "User",
        "x-enumNames": [
          "User",
          "Api",
          "System"
        ],
        "enum": [
          "User",
          "Api",
          "System"
        ]
      },
      "WebhookSubscriptionType": {
        "type": "string",
        "example": "DataChanged",
        "x-enumNames": [
          "DataChanged",
          "DocumentUploaded",
          "LoanFieldDecrypted",
          "LoanFactChanged",
          "LoanAssigneeChanged",
          "LoanStageChanged",
          "EntityRelationshipChanged",
          "TaskCreated",
          "TaskCancelled",
          "TaskReopened",
          "TaskSnoozed",
          "TaskAssigned",
          "TaskDueDateChanged",
          "TaskModified",
          "TaskCompleted",
          "AutomatedActionCreated",
          "AutomatedActionStarted",
          "AutomatedActionCancelled",
          "AutomatedActionCompleted",
          "AutomatedActionFailed",
          "AutomatedActionRemoved",
          "DocumentStatusChanged",
          "DocumentReclassified",
          "UnderwriterDecision",
          "DisclosuresSent",
          "DisclosuresCreated",
          "DisclosuresSigned",
          "DisclosuresConsentReceived",
          "DisclosuresCompleted",
          "JobStatusUpdate",
          "ConditionCreated",
          "ConditionStatusChanged",
          "NoteAdded",
          "IntegrationRequestSent",
          "IntegrationResponseReceived",
          "ObjectiveCreated",
          "ObjectiveStatusUpdated",
          "ObjectiveDeleted",
          "ObjectiveAssigned",
          "ObjectiveTaskCreated",
          "ObjectiveTaskStatusUpdated",
          "ObjectiveTaskDeleted",
          "ObjectiveAutomatedActionCreated",
          "ObjectiveAutomatedActionStatusUpdated",
          "ObjectiveAutomatedActionDeleted"
        ],
        "enum": [
          "DataChanged",
          "DocumentUploaded",
          "LoanFieldDecrypted",
          "LoanFactChanged",
          "LoanAssigneeChanged",
          "LoanStageChanged",
          "EntityRelationshipChanged",
          "TaskCreated",
          "TaskCancelled",
          "TaskReopened",
          "TaskSnoozed",
          "TaskAssigned",
          "TaskDueDateChanged",
          "TaskModified",
          "TaskCompleted",
          "AutomatedActionCreated",
          "AutomatedActionStarted",
          "AutomatedActionCancelled",
          "AutomatedActionCompleted",
          "AutomatedActionFailed",
          "AutomatedActionRemoved",
          "DocumentStatusChanged",
          "DocumentReclassified",
          "UnderwriterDecision",
          "DisclosuresSent",
          "DisclosuresCreated",
          "DisclosuresSigned",
          "DisclosuresConsentReceived",
          "DisclosuresCompleted",
          "JobStatusUpdate",
          "ConditionCreated",
          "ConditionStatusChanged",
          "NoteAdded",
          "IntegrationRequestSent",
          "IntegrationResponseReceived",
          "ObjectiveCreated",
          "ObjectiveStatusUpdated",
          "ObjectiveDeleted",
          "ObjectiveAssigned",
          "ObjectiveTaskCreated",
          "ObjectiveTaskStatusUpdated",
          "ObjectiveTaskDeleted",
          "ObjectiveAutomatedActionCreated",
          "ObjectiveAutomatedActionStatusUpdated",
          "ObjectiveAutomatedActionDeleted"
        ]
      },
      "WestVirginiaLicenseType": {
        "type": "string",
        "example": "MortgageBrokerLicense",
        "x-enumNames": [
          "MortgageBrokerLicense",
          "MortgageLenderLicense"
        ],
        "enum": [
          "MortgageBrokerLicense",
          "MortgageLenderLicense"
        ]
      },
      "WisconsinLicenseType": {
        "type": "string",
        "example": "MortgageBankersLicense",
        "x-enumNames": [
          "MortgageBankersLicense",
          "MortgageBrokersLicense"
        ],
        "enum": [
          "MortgageBankersLicense",
          "MortgageBrokersLicense"
        ]
      },
      "WithdrawPostLockPricingRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "originalRequestId"
        ],
        "properties": {
          "originalRequestId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "YearMonth": {
        "type": "string",
        "format": "year-month",
        "additionalProperties": false
      },
      "ZoningComplianceType": {
        "type": "string",
        "example": "Unknown",
        "x-enumNames": [
          "Unknown",
          "Illegal",
          "Legal",
          "LegalNonConforming",
          "NoZoning",
          "Undetermined"
        ],
        "enum": [
          "Unknown",
          "Illegal",
          "Legal",
          "LegalNonConforming",
          "NoZoning",
          "Undetermined"
        ]
      }
    },
    "securitySchemes": {
      "Authorization": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "tags": [
    {
      "name": "1. Ping"
    },
    {
      "name": "2. Entity - Loans"
    },
    {
      "name": "3. Entity - Assets"
    },
    {
      "name": "4. Entity - Borrower Businesses"
    },
    {
      "name": "5. Entity - Borrowers"
    },
    {
      "name": "6. Entity - Closing Costs"
    },
    {
      "name": "7. Entity - Concurrent Financings"
    },
    {
      "name": "8. Entity - Credit Inquiries"
    },
    {
      "name": "9. Entity - Incomes"
    },
    {
      "name": "10. Entity - Liabilities"
    },
    {
      "name": "11. Entity - Properties"
    },
    {
      "name": "12. Entity - Property Valuations"
    },
    {
      "name": "13. Entity - Prorations"
    },
    {
      "name": "14. Entity - Public Records"
    },
    {
      "name": "15. Entity - Underwriting Exceptions"
    },
    {
      "name": "16. Integrations"
    },
    {
      "name": "17. Integration - AUS"
    },
    {
      "name": "18. Integration - Compliance"
    },
    {
      "name": "19. Integration - Credit"
    },
    {
      "name": "20. Integration - Disclosures"
    },
    {
      "name": "21. Integration - Fees"
    },
    {
      "name": "22. Integration - MI"
    },
    {
      "name": "23. Integration - Pricing"
    },
    {
      "name": "24. File Contacts"
    },
    {
      "name": "25. Tasks"
    },
    {
      "name": "26. Objectives"
    },
    {
      "name": "27. Conditions"
    },
    {
      "name": "28. Documents"
    },
    {
      "name": "29. Users"
    },
    {
      "name": "30. Admin Config"
    },
    {
      "name": "31. Reporting"
    },
    {
      "name": "32. Pipeline"
    }
  ]
}